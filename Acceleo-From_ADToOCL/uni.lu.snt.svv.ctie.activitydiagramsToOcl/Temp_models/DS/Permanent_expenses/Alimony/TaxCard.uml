<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_74Jh-ZOfEeSfQOQl44pUEg">
  <uml:Package xmi:id="_72xpgpOfEeSfQOQl44pUEg" name="TaxCard">
    <packageImport xmi:id="_72xpg5OfEeSfQOQl44pUEg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_72xphJOfEeSfQOQl44pUEg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_72xphZOfEeSfQOQl44pUEg">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_7260FJOfEeSfQOQl44pUEg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_72xphpOfEeSfQOQl44pUEg" name="Tax_Card_Domain">
      <packageImport xmi:id="_72xph5OfEeSfQOQl44pUEg" importedPackage="_72y3HpOfEeSfQOQl44pUEg"/>
      <packageImport xmi:id="_72xpiJOfEeSfQOQl44pUEg" importedPackage="_72xpjZOfEeSfQOQl44pUEg"/>
      <packageImport xmi:id="_72xpiZOfEeSfQOQl44pUEg" importedPackage="_72y3CJOfEeSfQOQl44pUEg"/>
      <packageImport xmi:id="_72xpipOfEeSfQOQl44pUEg" importedPackage="_72xqf5OfEeSfQOQl44pUEg"/>
      <packageImport xmi:id="_72xpi5OfEeSfQOQl44pUEg" importedPackage="_72yQKZOfEeSfQOQl44pUEg"/>
      <packageImport xmi:id="_72xpjJOfEeSfQOQl44pUEg" importedPackage="_72yRF5OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72xpjZOfEeSfQOQl44pUEg" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_72xpjpOfEeSfQOQl44pUEg" name="taxed under" memberEnd="_72xqQZOfEeSfQOQl44pUEg _72xqcJOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpj5OfEeSfQOQl44pUEg" name="Income_Tax">
        <ownedAttribute xmi:id="_72xpkJOfEeSfQOQl44pUEg" name="taxPayer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xqbZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpkZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpkpOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpk5OfEeSfQOQl44pUEg" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xplJOfEeSfQOQl44pUEg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xplZOfEeSfQOQl44pUEg" name="Address">
        <ownedAttribute xmi:id="_72xplpOfEeSfQOQl44pUEg" name="taxPayer" visibility="private" type="_72xp45OfEeSfQOQl44pUEg" association="_72xqZJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpl5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpmJOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpmZOfEeSfQOQl44pUEg" name="country" visibility="public" type="_72yQr5OfEeSfQOQl44pUEg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_72xpmpOfEeSfQOQl44pUEg" name="LU" type="_72yQr5OfEeSfQOQl44pUEg" instance="_72yQsJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpm5OfEeSfQOQl44pUEg" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpnJOfEeSfQOQl44pUEg" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpnZOfEeSfQOQl44pUEg" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpnpOfEeSfQOQl44pUEg" name="Dependent">
        <generalization xmi:id="_72xpn5OfEeSfQOQl44pUEg" general="_72xp45OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72xpoJOfEeSfQOQl44pUEg" name="dependent_type" visibility="public" type="_72yQ1JOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72xpoZOfEeSfQOQl44pUEg" name="household" visibility="private" type="_72xpypOfEeSfQOQl44pUEg" association="_72xqa5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpopOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpo5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xppJOfEeSfQOQl44pUEg" name="responsible_person" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xqapOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xppZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpppOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpp5OfEeSfQOQl44pUEg" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72xpqJOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpqZOfEeSfQOQl44pUEg" name="expense" visibility="private" type="_72yQlpOfEeSfQOQl44pUEg" association="_72xqbJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpqpOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpq5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xprJOfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xqaZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xprZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xprpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72xpr5OfEeSfQOQl44pUEg" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_72xpsJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72xpsZOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xpspOfEeSfQOQl44pUEg" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_72xps5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72xptJOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xptZOfEeSfQOQl44pUEg" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_72xptpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72xpt5OfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xpuJOfEeSfQOQl44pUEg" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_72xpupOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72xpuZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72xpupOfEeSfQOQl44pUEg" name="is_dependent_following_continued_studies" constrainedElement="_72xpuJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xpu5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72xpvJOfEeSfQOQl44pUEg" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72xpvZOfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpvpOfEeSfQOQl44pUEg" name="External_Allowance">
        <ownedAttribute xmi:id="_72xpv5OfEeSfQOQl44pUEg" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpwJOfEeSfQOQl44pUEg" name="grantor" visibility="public" type="_72yQp5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72xpwZOfEeSfQOQl44pUEg" name="person" visibility="private" type="_72xp45OfEeSfQOQl44pUEg" association="_72xqZZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpwpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpw5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpxJOfEeSfQOQl44pUEg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpxZOfEeSfQOQl44pUEg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpxpOfEeSfQOQl44pUEg" name="Fiscal_Address">
        <generalization xmi:id="_72xpx5OfEeSfQOQl44pUEg" general="_72xplZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpyJOfEeSfQOQl44pUEg" name="Habitual_Address">
        <generalization xmi:id="_72xpyZOfEeSfQOQl44pUEg" general="_72xplZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xpypOfEeSfQOQl44pUEg" name="Household">
        <ownedAttribute xmi:id="_72xpy5OfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xqaJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpzJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xpzZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xpzpOfEeSfQOQl44pUEg" name="dependent" visibility="private" type="_72xpnpOfEeSfQOQl44pUEg" association="_72xqa5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xpz5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp0JOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xp0ZOfEeSfQOQl44pUEg" name="Legal_Union_Record">
        <ownedComment xmi:id="_72xp0pOfEeSfQOQl44pUEg" annotatedElement="_72xp0ZOfEeSfQOQl44pUEg">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_72xp05OfEeSfQOQl44pUEg" name="Legal_Union-different_people-constraint" constrainedElement="_72xp0ZOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xp1JOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_72xp1ZOfEeSfQOQl44pUEg" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp1pOfEeSfQOQl44pUEg" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp15OfEeSfQOQl44pUEg" name="individual_A" visibility="private" type="_72xp45OfEeSfQOQl44pUEg" association="_72xqZ5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp2JOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp2ZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp2pOfEeSfQOQl44pUEg" name="individual_B" visibility="private" type="_72xp45OfEeSfQOQl44pUEg" association="_72xqZpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp25OfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp3JOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xp3ZOfEeSfQOQl44pUEg" name="Marriage_Record">
        <generalization xmi:id="_72xp3pOfEeSfQOQl44pUEg" general="_72xp0ZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xp35OfEeSfQOQl44pUEg" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_72xp4JOfEeSfQOQl44pUEg" general="_72xqCpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xp4ZOfEeSfQOQl44pUEg" name="Partnership_Record">
        <generalization xmi:id="_72xp4pOfEeSfQOQl44pUEg" general="_72xp0ZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xp45OfEeSfQOQl44pUEg" name="Physical_Person">
        <ownedAttribute xmi:id="_72xp5JOfEeSfQOQl44pUEg" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp5ZOfEeSfQOQl44pUEg" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp5pOfEeSfQOQl44pUEg" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp55OfEeSfQOQl44pUEg" name="allowances" visibility="private" type="_72xpvpOfEeSfQOQl44pUEg" association="_72xqZZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp6JOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp6ZOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp6pOfEeSfQOQl44pUEg" name="addresses" visibility="private" type="_72xplZOfEeSfQOQl44pUEg" association="_72xqZJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp65OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp7JOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp7ZOfEeSfQOQl44pUEg" name="legal_union_A" visibility="private" type="_72xp0ZOfEeSfQOQl44pUEg" association="_72xqZ5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp7pOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp75OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp8JOfEeSfQOQl44pUEg" name="legal_union_B" visibility="private" type="_72xp0ZOfEeSfQOQl44pUEg" association="_72xqZpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xp8ZOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xp8pOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp85OfEeSfQOQl44pUEg" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp9JOfEeSfQOQl44pUEg" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_72xp9ZOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xp9pOfEeSfQOQl44pUEg" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72xp95OfEeSfQOQl44pUEg" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_72xp-JOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_72xp-ZOfEeSfQOQl44pUEg" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_72xp-pOfEeSfQOQl44pUEg" name="IN_person" type="_72xp45OfEeSfQOQl44pUEg"/>
          <ownedParameter xmi:id="_72xp-5OfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xp_JOfEeSfQOQl44pUEg" name="is_person_assisting_spouse" isQuery="true" postcondition="_72xp_pOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72xp_ZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72xp_pOfEeSfQOQl44pUEg" name="is_assisting_spouse" constrainedElement="_72xp_JOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xp_5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72xqAJOfEeSfQOQl44pUEg" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72xqAZOfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xqApOfEeSfQOQl44pUEg" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_72xqBJOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72xqA5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72xqBJOfEeSfQOQl44pUEg" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_72xqApOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqBZOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72xqBpOfEeSfQOQl44pUEg" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72xqB5OfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xqCJOfEeSfQOQl44pUEg" name="Resident_Tax_Payer">
        <generalization xmi:id="_72xqCZOfEeSfQOQl44pUEg" general="_72xqCpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xqCpOfEeSfQOQl44pUEg" name="Tax_Payer">
        <ownedRule xmi:id="_72xqC5OfEeSfQOQl44pUEg" name="NonResidentTaxPayer-constraint" constrainedElement="_72xp35OfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqDJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqDZOfEeSfQOQl44pUEg" name="ResidentTaxPayer-constraint" constrainedElement="_72xqCJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqDpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqD5OfEeSfQOQl44pUEg" name="SubjectToIncomeTax-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqEJOfEeSfQOQl44pUEg" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqEZOfEeSfQOQl44pUEg" name="TaxCredit-CIS-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqEpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqE5OfEeSfQOQl44pUEg" name="TaxCredit-CIP-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqFJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqFZOfEeSfQOQl44pUEg" name="TaxCredit-CIM-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqFpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqF5OfEeSfQOQl44pUEg" name="Legal_Union-monogamus-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqGJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqGZOfEeSfQOQl44pUEg" name="TaxClass-unique-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqGpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqG5OfEeSfQOQl44pUEg" name="TaxDeduction-CE-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqHJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqHZOfEeSfQOQl44pUEg" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqHpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqH5OfEeSfQOQl44pUEg" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqIJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqIZOfEeSfQOQl44pUEg" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqIpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqI5OfEeSfQOQl44pUEg" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqJJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqJZOfEeSfQOQl44pUEg" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqJpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqJ5OfEeSfQOQl44pUEg" name="TaxDeduction-DS-5-donation" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqKJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqKZOfEeSfQOQl44pUEg" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqKpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqK5OfEeSfQOQl44pUEg" name="TaxCard-unique-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqLJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqLZOfEeSfQOQl44pUEg" name="TaxDeduction-FD-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqLpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqL5OfEeSfQOQl44pUEg" name="TaxDeduction-FO-constraint" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqMJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqMZOfEeSfQOQl44pUEg" name="NEW_TaxDeduction-CE-INVALIDITY" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqMpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9;income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_invalidity_and_infirmity.declared_amount->sum() in&#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#x9;&#xA;else&#xA;false&#xA;endif&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqM5OfEeSfQOQl44pUEg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqNJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_dependence_and_care.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72xqNZOfEeSfQOQl44pUEg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE-CHILDREN-NOT-PART-OF-HOUSEHOLD" constrainedElement="_72xqCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqNpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_care_for_children_not_part_of_the_household.declared_amount->sum() in&#xA;&#x9; &#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;     if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_72xqN5OfEeSfQOQl44pUEg" general="_72xp45OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72xqOJOfEeSfQOQl44pUEg" name="incomes" visibility="private" type="_72yQCpOfEeSfQOQl44pUEg" association="_72yQrpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqOZOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqOpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqO5OfEeSfQOQl44pUEg" name="incomeTax" visibility="private" type="_72xpj5OfEeSfQOQl44pUEg" association="_72xqbZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqPJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqPZOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqPpOfEeSfQOQl44pUEg" name="income_Tax_Credit" visibility="private" type="_72y3D5OfEeSfQOQl44pUEg" association="_72yQtpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqP5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqQJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqQZOfEeSfQOQl44pUEg" name="tax_class" visibility="private" type="_72xqbpOfEeSfQOQl44pUEg" association="_72xpjpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqQpOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqQ5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqRJOfEeSfQOQl44pUEg" name="household" visibility="private" type="_72xpypOfEeSfQOQl44pUEg" association="_72xqaJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqRZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqRpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqR5OfEeSfQOQl44pUEg" name="dependents" visibility="private" type="_72xpnpOfEeSfQOQl44pUEg" association="_72xqapOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqSJOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqSZOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqSpOfEeSfQOQl44pUEg" name="income_Tax_Deduction" visibility="private" type="_72y3hZOfEeSfQOQl44pUEg" association="_72yQ2pOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqS5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqTJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqTZOfEeSfQOQl44pUEg" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqTpOfEeSfQOQl44pUEg" name="expenses" visibility="private" type="_72yQlpOfEeSfQOQl44pUEg" association="_72yQ25OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqT5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqUJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqUZOfEeSfQOQl44pUEg" name="dependent" visibility="private" type="_72xpnpOfEeSfQOQl44pUEg" association="_72xqaZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqUpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqU5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqVJOfEeSfQOQl44pUEg" name="tax_Card" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" aggregation="shared" association="_72xqY5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqVZOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqVpOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqV5OfEeSfQOQl44pUEg" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72xqWJOfEeSfQOQl44pUEg" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_72xqWpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72xqWZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72xqWpOfEeSfQOQl44pUEg" name="is_child_part_of_household" constrainedElement="_72xqWJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqW5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72xqXJOfEeSfQOQl44pUEg" name="IN_dependent" type="_72xpnpOfEeSfQOQl44pUEg"/>
          <ownedParameter xmi:id="_72xqXZOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72xqXpOfEeSfQOQl44pUEg" name="number_of_months_of_allowance" isQuery="true" postcondition="_72xqYJOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72xqX5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72xqYJOfEeSfQOQl44pUEg" name="number_od_months_of_allowance" constrainedElement="_72xqXpOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72xqYZOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72xqYpOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqY5OfEeSfQOQl44pUEg" name="" memberEnd="_72xqVJOfEeSfQOQl44pUEg _72yRU5OfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqZJOfEeSfQOQl44pUEg" name="located at" memberEnd="_72xp6pOfEeSfQOQl44pUEg _72xplpOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqZZOfEeSfQOQl44pUEg" name="receives" memberEnd="_72xp55OfEeSfQOQl44pUEg _72xpwZOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqZpOfEeSfQOQl44pUEg" name="person B" memberEnd="_72xp2pOfEeSfQOQl44pUEg _72xp8JOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqZ5OfEeSfQOQl44pUEg" name="person A" memberEnd="_72xp15OfEeSfQOQl44pUEg _72xp7ZOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqaJOfEeSfQOQl44pUEg" name="maintains" memberEnd="_72xqRJOfEeSfQOQl44pUEg _72xpy5OfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqaZOfEeSfQOQl44pUEg" name="as tax payer" memberEnd="_72xprJOfEeSfQOQl44pUEg _72xqUZOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqapOfEeSfQOQl44pUEg" name="supports" memberEnd="_72xqR5OfEeSfQOQl44pUEg _72xppJOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqa5OfEeSfQOQl44pUEg" name="is part of" memberEnd="_72xpoZOfEeSfQOQl44pUEg _72xpzpOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqbJOfEeSfQOQl44pUEg" name="incurred over" memberEnd="_72yQnZOfEeSfQOQl44pUEg _72xpqZOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqbZOfEeSfQOQl44pUEg" name="is subject to" memberEnd="_72xqO5OfEeSfQOQl44pUEg _72xpkJOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xqbpOfEeSfQOQl44pUEg" name="Tax_Class">
        <ownedAttribute xmi:id="_72xqb5OfEeSfQOQl44pUEg" name="tax_class" visibility="public" type="_72yQyZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72xqcJOfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xpjpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqcZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqcpOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqc5OfEeSfQOQl44pUEg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqdJOfEeSfQOQl44pUEg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqdZOfEeSfQOQl44pUEg" name="tax_card" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72yQ2ZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqdpOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqd5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqeJOfEeSfQOQl44pUEg" name="current_tax_class" visibility="private" type="_72xqbpOfEeSfQOQl44pUEg" association="_72xqfpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqeZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqepOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqe5OfEeSfQOQl44pUEg" name="prev" visibility="private" type="_72xqbpOfEeSfQOQl44pUEg" association="_72xqfpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqfJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72xqfZOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72xqfpOfEeSfQOQl44pUEg" name="replaced by" memberEnd="_72xqeJOfEeSfQOQl44pUEg _72xqe5OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72xqf5OfEeSfQOQl44pUEg" name="Income_Concepts">
      <ownedComment xmi:id="_72xqgJOfEeSfQOQl44pUEg" annotatedElement="_72yQBJOfEeSfQOQl44pUEg">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_72xqgZOfEeSfQOQl44pUEg" name="Income_Type">
        <ownedAttribute xmi:id="_72xqgpOfEeSfQOQl44pUEg" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_72xqg5OfEeSfQOQl44pUEg" annotatedElement="_72xqgpOfEeSfQOQl44pUEg">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EBoolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72xqhJOfEeSfQOQl44pUEg" name="income" visibility="private" type="_72yQCpOfEeSfQOQl44pUEg" association="_72yQBZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72xqhZOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yP8JOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP8ZOfEeSfQOQl44pUEg" name="Trade_and_Business_Income">
        <generalization xmi:id="_72yP8pOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP85OfEeSfQOQl44pUEg" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_72yP9JOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP9ZOfEeSfQOQl44pUEg" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_72yP9pOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP95OfEeSfQOQl44pUEg" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_72yP-JOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yP-ZOfEeSfQOQl44pUEg" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yP-pOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP-5OfEeSfQOQl44pUEg" name="Capital_and_Investments_Income">
        <generalization xmi:id="_72yP_JOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP_ZOfEeSfQOQl44pUEg" name="Employment_Income">
        <generalization xmi:id="_72yP_pOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yP_5OfEeSfQOQl44pUEg" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_72yQAJOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQAZOfEeSfQOQl44pUEg" name="Sundry_Income">
        <generalization xmi:id="_72yQApOfEeSfQOQl44pUEg" general="_72xqgZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQA5OfEeSfQOQl44pUEg" name="Directors_Fee">
        <generalization xmi:id="_72yQBJOfEeSfQOQl44pUEg" general="_72yP9ZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72yQBZOfEeSfQOQl44pUEg" name="has as type" memberEnd="_72yQGZOfEeSfQOQl44pUEg _72xqhJOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQBpOfEeSfQOQl44pUEg" name="Foreign_Income">
        <generalization xmi:id="_72yQB5OfEeSfQOQl44pUEg" general="_72yQCpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQCJOfEeSfQOQl44pUEg" name="Local_Income">
        <generalization xmi:id="_72yQCZOfEeSfQOQl44pUEg" general="_72yQCpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQCpOfEeSfQOQl44pUEg" name="Income">
        <ownedRule xmi:id="_72yQC5OfEeSfQOQl44pUEg" name="Tax_Deduction_FD-constraint" constrainedElement="_72yQCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQDJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yQDZOfEeSfQOQl44pUEg" name="Tax_Deduction_FO-constraint" constrainedElement="_72yQCpOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQDpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_72yQD5OfEeSfQOQl44pUEg" name="taxPayer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72yQrpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQEJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQEZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQEpOfEeSfQOQl44pUEg" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQE5OfEeSfQOQl44pUEg" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQFJOfEeSfQOQl44pUEg" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQFZOfEeSfQOQl44pUEg" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQFpOfEeSfQOQl44pUEg" name="tax_card" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72yQ05OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQF5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQGJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQGZOfEeSfQOQl44pUEg" name="income_type" visibility="private" type="_72xqgZOfEeSfQOQl44pUEg" association="_72yQBZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQGpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQG5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQHJOfEeSfQOQl44pUEg" name="expenses" visibility="private" type="_72yQlpOfEeSfQOQl44pUEg" association="_72yQlZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQHZOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQHpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQH5OfEeSfQOQl44pUEg" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72yQIJOfEeSfQOQl44pUEg" name="compute_duration_of_contract" isQuery="true" postcondition="_72yQIpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQIZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQIpOfEeSfQOQl44pUEg" name="get_duration" constrainedElement="_72yQIJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQI5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQJJOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72yQJZOfEeSfQOQl44pUEg" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_72yQJpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72yQJ5OfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72yQKJOfEeSfQOQl44pUEg" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72yQKZOfEeSfQOQl44pUEg" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQKpOfEeSfQOQl44pUEg" name="Permanent_Expense">
        <generalization xmi:id="_72yQK5OfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQLJOfEeSfQOQl44pUEg" name="category" visibility="public" type="_72yQiJOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQLZOfEeSfQOQl44pUEg" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQLpOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_72yQL5OfEeSfQOQl44pUEg" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_72yQMZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQMJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQMZOfEeSfQOQl44pUEg" name="is_eligible" constrainedElement="_72yQL5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQMpOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQM5OfEeSfQOQl44pUEg" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72yQNJOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQNZOfEeSfQOQl44pUEg" name="Interest_Expense">
        <generalization xmi:id="_72yQNpOfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQN5OfEeSfQOQl44pUEg" name="Special_Expense_DS">
        <generalization xmi:id="_72yQOJOfEeSfQOQl44pUEg" general="_72yQlpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQOZOfEeSfQOQl44pUEg" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_72yQOpOfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQO5OfEeSfQOQl44pUEg" name="category" visibility="public" type="_72yQi5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQPJOfEeSfQOQl44pUEg" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQPZOfEeSfQOQl44pUEg" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_72yQPpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQP5OfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_72yQQJOfEeSfQOQl44pUEg" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_72yQQpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQQZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQQpOfEeSfQOQl44pUEg" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_72yQQJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQQ5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQRJOfEeSfQOQl44pUEg" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQRZOfEeSfQOQl44pUEg" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_72yQRpOfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQR5OfEeSfQOQl44pUEg" name="category" visibility="public" type="_72yQkZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQSJOfEeSfQOQl44pUEg" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQSZOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQSpOfEeSfQOQl44pUEg" name="Donation">
        <generalization xmi:id="_72yQS5OfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQTJOfEeSfQOQl44pUEg" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQTZOfEeSfQOQl44pUEg" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQTpOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQT5OfEeSfQOQl44pUEg" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72yQUJOfEeSfQOQl44pUEg" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_72yQUpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQUZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQUpOfEeSfQOQl44pUEg" name="is_leagaly_approved_beneficiary" constrainedElement="_72yQUJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQU5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQVJOfEeSfQOQl44pUEg" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQVZOfEeSfQOQl44pUEg" name="Loss_Carryforward">
        <ownedRule xmi:id="_72yQVpOfEeSfQOQl44pUEg" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_72yQVZOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQV5OfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_72yQWJOfEeSfQOQl44pUEg" general="_72yQN5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQWZOfEeSfQOQl44pUEg" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQWpOfEeSfQOQl44pUEg" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQW5OfEeSfQOQl44pUEg" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQXJOfEeSfQOQl44pUEg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQXZOfEeSfQOQl44pUEg" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_72yQXpOfEeSfQOQl44pUEg" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_72yQX5OfEeSfQOQl44pUEg" name="is_accountability_regular" isQuery="true" postcondition="_72yQYZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQYJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQYZOfEeSfQOQl44pUEg" name="is_accounatbility_regular" constrainedElement="_72yQX5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQYpOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQY5OfEeSfQOQl44pUEg" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72yQZJOfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72yQZZOfEeSfQOQl44pUEg" name="is_compensated_by_other_means" isQuery="true" postcondition="_72yQZ5OfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQZpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQZ5OfEeSfQOQl44pUEg" name="is_compensated_by_other_means" constrainedElement="_72yQZZOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQaJOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQaZOfEeSfQOQl44pUEg" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72yQapOfEeSfQOQl44pUEg" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_72yQbJOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQa5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQbJOfEeSfQOQl44pUEg" name="partner_in_business" constrainedElement="_72yQapOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQbZOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQbpOfEeSfQOQl44pUEg" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72yQb5OfEeSfQOQl44pUEg" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_72yQcZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQcJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQcZOfEeSfQOQl44pUEg" name="inherited_business_ownership" constrainedElement="_72yQb5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQcpOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQc5OfEeSfQOQl44pUEg" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQdJOfEeSfQOQl44pUEg" name="Spousal_Expense_AC">
        <generalization xmi:id="_72yQdZOfEeSfQOQl44pUEg" general="_72yQlpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQdpOfEeSfQOQl44pUEg" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_72yQd5OfEeSfQOQl44pUEg" general="_72yQlpOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yQeJOfEeSfQOQl44pUEg" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQeZOfEeSfQOQl44pUEg" name="ce_type" visibility="public" type="_72yQ35OfEeSfQOQl44pUEg"/>
        <ownedOperation xmi:id="_72yQepOfEeSfQOQl44pUEg" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_72yQe5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72yQfJOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72yQfZOfEeSfQOQl44pUEg" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_72yQf5OfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72yQfpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72yQf5OfEeSfQOQl44pUEg" name="thresholded_deduction_percentage" constrainedElement="_72yQfZOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yQgJOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72yQgZOfEeSfQOQl44pUEg" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQgpOfEeSfQOQl44pUEg" name="Travel_Expense_FD">
        <generalization xmi:id="_72yQg5OfEeSfQOQl44pUEg" general="_72yQhpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQhJOfEeSfQOQl44pUEg" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_72yQhZOfEeSfQOQl44pUEg" general="_72yQhpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQhpOfEeSfQOQl44pUEg" name="Professional_Expense">
        <generalization xmi:id="_72yQh5OfEeSfQOQl44pUEg" general="_72yQlpOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQiJOfEeSfQOQl44pUEg" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_72yQiZOfEeSfQOQl44pUEg" name="MISCELLANEOUS_DEBT" classifier="_72yQiJOfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQipOfEeSfQOQl44pUEg" name="ALIMONY" classifier="_72yQiJOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQi5OfEeSfQOQl44pUEg" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_72yQjJOfEeSfQOQl44pUEg" name="PRIVATE_INSURANCE" classifier="_72yQi5OfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQjZOfEeSfQOQl44pUEg" name="PRIVATE_LIFE_INSURANCE" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQjpOfEeSfQOQl44pUEg" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_72yQi5OfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQj5OfEeSfQOQl44pUEg" name="HOUSING_SAVING_PLAN" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQkJOfEeSfQOQl44pUEg" name="OLD_AGE_PENSION_PLAN" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQkZOfEeSfQOQl44pUEg" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_72yQkpOfEeSfQOQl44pUEg" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQk5OfEeSfQOQl44pUEg" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
        <ownedLiteral xmi:id="_72yQlJOfEeSfQOQl44pUEg" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_72yQkZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72yQlZOfEeSfQOQl44pUEg" name="influences" memberEnd="_72yQoZOfEeSfQOQl44pUEg _72yQHJOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_72yQlpOfEeSfQOQl44pUEg" name="Expense">
        <ownedAttribute xmi:id="_72yQl5OfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72yQ25OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQmJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQmZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQmpOfEeSfQOQl44pUEg" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQm5OfEeSfQOQl44pUEg" name="expense_purpose" visibility="public" type="_72yQ45OfEeSfQOQl44pUEg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_72yQnJOfEeSfQOQl44pUEg" name="OTHER" type="_72yQ45OfEeSfQOQl44pUEg" instance="_72yQ55OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQnZOfEeSfQOQl44pUEg" name="dependent" visibility="private" type="_72xpnpOfEeSfQOQl44pUEg" association="_72xqbJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQnpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQn5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQoJOfEeSfQOQl44pUEg" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQoZOfEeSfQOQl44pUEg" name="income" visibility="private" type="_72yQCpOfEeSfQOQl44pUEg" association="_72yQlZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQopOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQo5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yQpJOfEeSfQOQl44pUEg" name="deduction" visibility="private" type="_72y3hZOfEeSfQOQl44pUEg" association="_72y3lJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQpZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQppOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQp5OfEeSfQOQl44pUEg" name="Grantor">
      <ownedLiteral xmi:id="_72yQqJOfEeSfQOQl44pUEg" name="ACD" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQqZOfEeSfQOQl44pUEg" name="Employer" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQqpOfEeSfQOQl44pUEg" name="CNPF" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQq5OfEeSfQOQl44pUEg" name="CEDIES" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQrJOfEeSfQOQl44pUEg" name="SNJ" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQrZOfEeSfQOQl44pUEg" name="CNAP" classifier="_72yQp5OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQrpOfEeSfQOQl44pUEg" name="earns" memberEnd="_72xqOJOfEeSfQOQl44pUEg _72yQD5OfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQr5OfEeSfQOQl44pUEg" name="Country">
      <ownedLiteral xmi:id="_72yQsJOfEeSfQOQl44pUEg" name="LU" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQsZOfEeSfQOQl44pUEg" name="FR" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQspOfEeSfQOQl44pUEg" name="BE" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQs5OfEeSfQOQl44pUEg" name="DE" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQtJOfEeSfQOQl44pUEg" name="NL" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQtZOfEeSfQOQl44pUEg" name="OTHER" classifier="_72yQr5OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQtpOfEeSfQOQl44pUEg" name="credited for" memberEnd="_72xqPpOfEeSfQOQl44pUEg _72y3EZOfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_72yQt5OfEeSfQOQl44pUEg" name="Date">
      <ownedAttribute xmi:id="_72yQuJOfEeSfQOQl44pUEg" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yQuZOfEeSfQOQl44pUEg" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yQupOfEeSfQOQl44pUEg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_72yQu5OfEeSfQOQl44pUEg" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_72yQvJOfEeSfQOQl44pUEg" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQvZOfEeSfQOQl44pUEg" name="Job_Activity">
      <ownedLiteral xmi:id="_72yQvpOfEeSfQOQl44pUEg" name="Salary" classifier="_72yQvZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQv5OfEeSfQOQl44pUEg" name="Pension" classifier="_72yQvZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQwJOfEeSfQOQl44pUEg" name="Annuity" classifier="_72yQvZOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQwZOfEeSfQOQl44pUEg" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_72yQwpOfEeSfQOQl44pUEg" name="Principal" classifier="_72yQwZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQw5OfEeSfQOQl44pUEg" name="Additional" classifier="_72yQwZOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQxJOfEeSfQOQl44pUEg" name="Tax_Office">
      <ownedLiteral xmi:id="_72yQxZOfEeSfQOQl44pUEg" name="RTS_2" classifier="_72yQxJOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQxpOfEeSfQOQl44pUEg" name="RTS_3" classifier="_72yQxJOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQx5OfEeSfQOQl44pUEg" name="RTS_Esch" classifier="_72yQxJOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQyJOfEeSfQOQl44pUEg" name="RTS_Ettelbruck" classifier="_72yQxJOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQyZOfEeSfQOQl44pUEg" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_72yQypOfEeSfQOQl44pUEg" name="One" classifier="_72yQyZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQy5OfEeSfQOQl44pUEg" name="One_A" classifier="_72yQyZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQzJOfEeSfQOQl44pUEg" name="Two" classifier="_72yQyZOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQzZOfEeSfQOQl44pUEg" name="Town">
      <ownedLiteral xmi:id="_72yQzpOfEeSfQOQl44pUEg" name="Luxembourg_city" classifier="_72yQzZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQz5OfEeSfQOQl44pUEg" name="Bertrange" classifier="_72yQzZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ0JOfEeSfQOQl44pUEg" name="Strassen" classifier="_72yQzZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ0ZOfEeSfQOQl44pUEg" name="Bettembourg" classifier="_72yQzZOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ0pOfEeSfQOQl44pUEg" name="Beaufort" classifier="_72yQzZOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQ05OfEeSfQOQl44pUEg" name="linked to" memberEnd="_72yQFpOfEeSfQOQl44pUEg _72yRLZOfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQ1JOfEeSfQOQl44pUEg" name="Dependent_Type">
      <ownedLiteral xmi:id="_72yQ1ZOfEeSfQOQl44pUEg" name="CHILD" classifier="_72yQ1JOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ1pOfEeSfQOQl44pUEg" name="SPOUSE" classifier="_72yQ1JOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ15OfEeSfQOQl44pUEg" name="RELATIVE" classifier="_72yQ1JOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ2JOfEeSfQOQl44pUEg" name="OTHER_FAMILY_MEMBER" classifier="_72yQ1JOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQ2ZOfEeSfQOQl44pUEg" name="provides" memberEnd="_72yRMJOfEeSfQOQl44pUEg _72xqdZOfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQ2pOfEeSfQOQl44pUEg" name="receives" memberEnd="_72xqSpOfEeSfQOQl44pUEg _72y3ipOfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_72yQ25OfEeSfQOQl44pUEg" name="declares" memberEnd="_72xqTpOfEeSfQOQl44pUEg _72yQl5OfEeSfQOQl44pUEg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQ3JOfEeSfQOQl44pUEg" name="Type_of_Rate">
      <ownedLiteral xmi:id="_72yQ3ZOfEeSfQOQl44pUEg" name="REGULAR" classifier="_72yQ3JOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ3pOfEeSfQOQl44pUEg" name="REAL_COST" classifier="_72yQ3JOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQ35OfEeSfQOQl44pUEg" name="CE_Type">
      <ownedLiteral xmi:id="_72yQ4JOfEeSfQOQl44pUEg" name="INALIDITY_AND_INFIRMITY" classifier="_72yQ35OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ4ZOfEeSfQOQl44pUEg" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_72yQ35OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ4pOfEeSfQOQl44pUEg" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_72yQ35OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQ45OfEeSfQOQl44pUEg" name="Expense_Purpose">
      <ownedLiteral xmi:id="_72yQ5JOfEeSfQOQl44pUEg" name="HOUSE_CARE" classifier="_72yQ45OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ5ZOfEeSfQOQl44pUEg" name="CHILD_CARE" classifier="_72yQ45OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ5pOfEeSfQOQl44pUEg" name="DEPENDENCE_CARE" classifier="_72yQ45OfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yQ55OfEeSfQOQl44pUEg" name="OTHER" classifier="_72yQ45OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_72yQ6JOfEeSfQOQl44pUEg" name="Constants">
      <ownedLiteral xmi:id="_72yQ6ZOfEeSfQOQl44pUEg" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ6pOfEeSfQOQl44pUEg" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ65OfEeSfQOQl44pUEg" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ7JOfEeSfQOQl44pUEg" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ7ZOfEeSfQOQl44pUEg" name="MINIMUM_SALARY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ7pOfEeSfQOQl44pUEg" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ75OfEeSfQOQl44pUEg" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ8JOfEeSfQOQl44pUEg" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ8ZOfEeSfQOQl44pUEg" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ8pOfEeSfQOQl44pUEg" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ85OfEeSfQOQl44pUEg" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ9JOfEeSfQOQl44pUEg" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ9ZOfEeSfQOQl44pUEg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ9pOfEeSfQOQl44pUEg"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ95OfEeSfQOQl44pUEg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ-JOfEeSfQOQl44pUEg" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ-ZOfEeSfQOQl44pUEg" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ-pOfEeSfQOQl44pUEg" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ-5OfEeSfQOQl44pUEg" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ_JOfEeSfQOQl44pUEg" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ_ZOfEeSfQOQl44pUEg" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yQ_pOfEeSfQOQl44pUEg" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yQ_5OfEeSfQOQl44pUEg" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRAJOfEeSfQOQl44pUEg" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRAZOfEeSfQOQl44pUEg" name="FLAT_RATE_CIM_DAILY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRApOfEeSfQOQl44pUEg" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRA5OfEeSfQOQl44pUEg" name="FLAT_RATE_CIM_MONTHLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRBJOfEeSfQOQl44pUEg" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRBZOfEeSfQOQl44pUEg" name="FLAT_RATE_CIM_YEARLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRBpOfEeSfQOQl44pUEg" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRB5OfEeSfQOQl44pUEg" name="FLAT_RATE_CIP_DAILY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRCJOfEeSfQOQl44pUEg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRCZOfEeSfQOQl44pUEg" name="FLAT_RATE_CIP_MONTHLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRCpOfEeSfQOQl44pUEg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRC5OfEeSfQOQl44pUEg" name="FLAT_RATE_CIP_YEARLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRDJOfEeSfQOQl44pUEg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRDZOfEeSfQOQl44pUEg" name="FLAT_RATE_CIS_DAILY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRDpOfEeSfQOQl44pUEg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRD5OfEeSfQOQl44pUEg" name="FLAT_RATE_CIS_MONTHLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yREJOfEeSfQOQl44pUEg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yREZOfEeSfQOQl44pUEg" name="FLAT_RATE_CIS_YEARLY" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yREpOfEeSfQOQl44pUEg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRE5OfEeSfQOQl44pUEg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_72yQ6JOfEeSfQOQl44pUEg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_72yRFJOfEeSfQOQl44pUEg" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_72yRFZOfEeSfQOQl44pUEg" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_72yQ6JOfEeSfQOQl44pUEg"/>
      <ownedLiteral xmi:id="_72yRFpOfEeSfQOQl44pUEg" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_72yQ6JOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72yRF5OfEeSfQOQl44pUEg" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_72yRGJOfEeSfQOQl44pUEg" name="Tax_Card">
        <ownedRule xmi:id="_72yRGZOfEeSfQOQl44pUEg" name="SubjectToWithholdingTax-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRGpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRG5OfEeSfQOQl44pUEg" name="Tax_Credits-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRHJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRHZOfEeSfQOQl44pUEg" name="Tax_Card_AC-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRHpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRH5OfEeSfQOQl44pUEg" name="Tax_Card_FD-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRIJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRIZOfEeSfQOQl44pUEg" name="Tax_Card_DS-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRIpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRI5OfEeSfQOQl44pUEg" name="Tax_Card_CE-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRJJOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_72yRJZOfEeSfQOQl44pUEg" name="Tax_Card_FO-constraint" constrainedElement="_72yRGJOfEeSfQOQl44pUEg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_72yRJpOfEeSfQOQl44pUEg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_72yRJ5OfEeSfQOQl44pUEg" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRKJOfEeSfQOQl44pUEg" name="tax_card_type" visibility="public" type="_72yQwZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yRKZOfEeSfQOQl44pUEg" name="tax_office" visibility="public" type="_72yQxJOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72yRKpOfEeSfQOQl44pUEg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRK5OfEeSfQOQl44pUEg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_727aBpOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRLJOfEeSfQOQl44pUEg" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRLZOfEeSfQOQl44pUEg" name="income" visibility="private" type="_72yQCpOfEeSfQOQl44pUEg" association="_72yQ05OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRLpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRL5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRMJOfEeSfQOQl44pUEg" name="tax_Class" visibility="private" type="_72xqbpOfEeSfQOQl44pUEg" association="_72yQ2ZOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRMZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRMpOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRM5OfEeSfQOQl44pUEg" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRNJOfEeSfQOQl44pUEg" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRNZOfEeSfQOQl44pUEg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRNpOfEeSfQOQl44pUEg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRN5OfEeSfQOQl44pUEg" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yROJOfEeSfQOQl44pUEg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yROZOfEeSfQOQl44pUEg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yROpOfEeSfQOQl44pUEg" name="tax_payers_address" visibility="public" type="_72xplZOfEeSfQOQl44pUEg" isDerived="true"/>
        <ownedAttribute xmi:id="_72yRO5OfEeSfQOQl44pUEg" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRPJOfEeSfQOQl44pUEg" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRPZOfEeSfQOQl44pUEg" name="jobs_activity_type" visibility="public" type="_72yQvZOfEeSfQOQl44pUEg" isDerived="true"/>
        <ownedAttribute xmi:id="_72yRPpOfEeSfQOQl44pUEg" name="jobs_place_of_work" visibility="public" type="_72yQzZOfEeSfQOQl44pUEg" isDerived="true"/>
        <ownedAttribute xmi:id="_72yRP5OfEeSfQOQl44pUEg" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRQJOfEeSfQOQl44pUEg" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRQZOfEeSfQOQl44pUEg" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRQpOfEeSfQOQl44pUEg" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRQ5OfEeSfQOQl44pUEg" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRRJOfEeSfQOQl44pUEg" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRRZOfEeSfQOQl44pUEg" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRRpOfEeSfQOQl44pUEg" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRR5OfEeSfQOQl44pUEg" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRSJOfEeSfQOQl44pUEg" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRSZOfEeSfQOQl44pUEg" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRSpOfEeSfQOQl44pUEg" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRS5OfEeSfQOQl44pUEg" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRTJOfEeSfQOQl44pUEg" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRTZOfEeSfQOQl44pUEg" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRTpOfEeSfQOQl44pUEg" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRT5OfEeSfQOQl44pUEg" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRUJOfEeSfQOQl44pUEg" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRUZOfEeSfQOQl44pUEg" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRUpOfEeSfQOQl44pUEg" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRU5OfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72xqY5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRVJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRVZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRVpOfEeSfQOQl44pUEg" name="income_Tax_Credit" visibility="private" type="_72y3D5OfEeSfQOQl44pUEg" aggregation="shared" association="_72y3BpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRV5OfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRWJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRWZOfEeSfQOQl44pUEg" name="income_Tax_Deduction" visibility="private" type="_72y3hZOfEeSfQOQl44pUEg" aggregation="shared" association="_72y3hJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72yRWpOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72yRW5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72yRXJOfEeSfQOQl44pUEg" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3AJOfEeSfQOQl44pUEg" name="previous" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72y3B5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3AZOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3ApOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3A5OfEeSfQOQl44pUEg" name="current_tax_card" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72y3B5OfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3BJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3BZOfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72y3BpOfEeSfQOQl44pUEg" name="include" memberEnd="_72y3G5OfEeSfQOQl44pUEg _72yRVpOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_72y3B5OfEeSfQOQl44pUEg" name="invalidated by" memberEnd="_72y3AJOfEeSfQOQl44pUEg _72y3A5OfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72y3CJOfEeSfQOQl44pUEg" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3CZOfEeSfQOQl44pUEg" name="CIM">
        <generalization xmi:id="_72y3CpOfEeSfQOQl44pUEg" general="_72y3D5OfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3C5OfEeSfQOQl44pUEg" name="CIP">
        <generalization xmi:id="_72y3DJOfEeSfQOQl44pUEg" general="_72y3D5OfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3DZOfEeSfQOQl44pUEg" name="CIS">
        <generalization xmi:id="_72y3DpOfEeSfQOQl44pUEg" general="_72y3D5OfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3D5OfEeSfQOQl44pUEg" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_72y3EJOfEeSfQOQl44pUEg" name="grantedBy" visibility="public" type="_72yQp5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3EZOfEeSfQOQl44pUEg" name="taxPayer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72yQtpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3EpOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3E5OfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3FJOfEeSfQOQl44pUEg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3FZOfEeSfQOQl44pUEg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_72y3FpOfEeSfQOQl44pUEg" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3F5OfEeSfQOQl44pUEg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_72y3GJOfEeSfQOQl44pUEg" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3GZOfEeSfQOQl44pUEg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_72y3GpOfEeSfQOQl44pUEg" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3G5OfEeSfQOQl44pUEg" name="taxation_Frame" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72y3BpOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3HJOfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3HZOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_72y3HpOfEeSfQOQl44pUEg" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3H5OfEeSfQOQl44pUEg" name="FD">
        <generalization xmi:id="_72y3IJOfEeSfQOQl44pUEg" general="_72y3f5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3IZOfEeSfQOQl44pUEg" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3IpOfEeSfQOQl44pUEg" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72y3I5OfEeSfQOQl44pUEg" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_72y3JJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72y3JZOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3JpOfEeSfQOQl44pUEg" name="FO">
        <generalization xmi:id="_72y3J5OfEeSfQOQl44pUEg" general="_72y3f5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3KJOfEeSfQOQl44pUEg" name="rate_type_for_FO" visibility="public" type="_72yQ3JOfEeSfQOQl44pUEg" isDerived="true"/>
        <ownedOperation xmi:id="_72y3KZOfEeSfQOQl44pUEg" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_72y3KpOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_72y3K5OfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72y3LJOfEeSfQOQl44pUEg" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_72y3LZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_72y3LpOfEeSfQOQl44pUEg" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_72y3L5OfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3MJOfEeSfQOQl44pUEg" name="CE">
        <eAnnotations xmi:id="_72y3MZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_72y3MpOfEeSfQOQl44pUEg" general="_72y3hZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3M5OfEeSfQOQl44pUEg" name="ce_deduction_type" visibility="public" type="_72yQ35OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3NJOfEeSfQOQl44pUEg" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3NZOfEeSfQOQl44pUEg" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72y3NpOfEeSfQOQl44pUEg" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_72y3OJOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3N5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3OJOfEeSfQOQl44pUEg" name="compute_disability_flat_rate" constrainedElement="_72y3NpOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3OZOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3OpOfEeSfQOQl44pUEg" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72y3O5OfEeSfQOQl44pUEg" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_72y3PZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3PJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3PZOfEeSfQOQl44pUEg" name="dependent_relative_flat_rate" constrainedElement="_72y3O5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3PpOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3P5OfEeSfQOQl44pUEg" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3QJOfEeSfQOQl44pUEg" name="AC">
        <generalization xmi:id="_72y3QZOfEeSfQOQl44pUEg" general="_72y3hZOfEeSfQOQl44pUEg"/>
        <ownedOperation xmi:id="_72y3QpOfEeSfQOQl44pUEg" name="is_eligible_income_for_AC" isQuery="true" postcondition="_72y3RJOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3Q5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3RJOfEeSfQOQl44pUEg" name="is_eligible_income_for_AC" constrainedElement="_72y3QpOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3RZOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3RpOfEeSfQOQl44pUEg" name="IN_income" type="_72yQCpOfEeSfQOQl44pUEg"/>
          <ownedParameter xmi:id="_72y3R5OfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72y3SJOfEeSfQOQl44pUEg" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_72y3SpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3SZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3SpOfEeSfQOQl44pUEg" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_72y3SJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3S5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3TJOfEeSfQOQl44pUEg" name="IN_income" type="_72yQCpOfEeSfQOQl44pUEg"/>
          <ownedParameter xmi:id="_72y3TZOfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3TpOfEeSfQOQl44pUEg" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_72y3T5OfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3UJOfEeSfQOQl44pUEg" name="permanent_expense_category" visibility="public" type="_72yQiJOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3UZOfEeSfQOQl44pUEg" name="DS_for_Interest_Expense">
        <generalization xmi:id="_72y3UpOfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
        <ownedOperation xmi:id="_72y3U5OfEeSfQOQl44pUEg" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_72y3VZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3VJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3VZOfEeSfQOQl44pUEg" name="maximum_deductible_amount" constrainedElement="_72y3U5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3VpOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3V5OfEeSfQOQl44pUEg" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72y3WJOfEeSfQOQl44pUEg" name="IN_children_with_allowances" type="_72xpnpOfEeSfQOQl44pUEg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3WZOfEeSfQOQl44pUEg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3WpOfEeSfQOQl44pUEg"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72y3W5OfEeSfQOQl44pUEg" name="IN_legal_union" type="_72xp0ZOfEeSfQOQl44pUEg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3XJOfEeSfQOQl44pUEg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3XZOfEeSfQOQl44pUEg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3XpOfEeSfQOQl44pUEg" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_72y3X5OfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3YJOfEeSfQOQl44pUEg" name="insurance_category" visibility="public" type="_72yQkZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3YZOfEeSfQOQl44pUEg" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_72y3YpOfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3Y5OfEeSfQOQl44pUEg" name="private_insurance_and_plan_category" visibility="public" type="_72yQi5OfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3ZJOfEeSfQOQl44pUEg" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3ZZOfEeSfQOQl44pUEg" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3ZpOfEeSfQOQl44pUEg" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_72y3Z5OfEeSfQOQl44pUEg" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_72y3aZOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3aJOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3aZOfEeSfQOQl44pUEg" name="get_increase_for_life_insurance" constrainedElement="_72y3Z5OfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3apOfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3a5OfEeSfQOQl44pUEg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_72y3bJOfEeSfQOQl44pUEg" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_72y3bpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3bZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3bpOfEeSfQOQl44pUEg" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_72y3bJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3b5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_72y3cJOfEeSfQOQl44pUEg" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_72y3cpOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3cZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3cpOfEeSfQOQl44pUEg" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_72y3cJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3c5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3dJOfEeSfQOQl44pUEg" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_72y3dZOfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3dpOfEeSfQOQl44pUEg" name="DS_for_Donation">
        <generalization xmi:id="_72y3d5OfEeSfQOQl44pUEg" general="_72y3gZOfEeSfQOQl44pUEg"/>
        <ownedOperation xmi:id="_72y3eJOfEeSfQOQl44pUEg" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_72y3epOfEeSfQOQl44pUEg">
          <eAnnotations xmi:id="_72y3eZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_72y3epOfEeSfQOQl44pUEg" name="maximum_deductible_amount" constrainedElement="_72y3eJOfEeSfQOQl44pUEg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_72y3e5OfEeSfQOQl44pUEg">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_72y3fJOfEeSfQOQl44pUEg" name="IN_maximum_percentage" type="_72yQ6JOfEeSfQOQl44pUEg"/>
          <ownedParameter xmi:id="_72y3fZOfEeSfQOQl44pUEg" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_72y3fpOfEeSfQOQl44pUEg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3f5OfEeSfQOQl44pUEg" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_72y3gJOfEeSfQOQl44pUEg" general="_72y3hZOfEeSfQOQl44pUEg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3gZOfEeSfQOQl44pUEg" name="DS">
        <generalization xmi:id="_72y3gpOfEeSfQOQl44pUEg" general="_72y3hZOfEeSfQOQl44pUEg"/>
        <ownedAttribute xmi:id="_72y3g5OfEeSfQOQl44pUEg" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72y3hJOfEeSfQOQl44pUEg" name="considers" memberEnd="_72y3jpOfEeSfQOQl44pUEg _72yRWZOfEeSfQOQl44pUEg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_72y3hZOfEeSfQOQl44pUEg" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_72y3hpOfEeSfQOQl44pUEg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3h5OfEeSfQOQl44pUEg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3iJOfEeSfQOQl44pUEg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3iZOfEeSfQOQl44pUEg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3ipOfEeSfQOQl44pUEg" name="tax_Payer" visibility="private" type="_72xqCpOfEeSfQOQl44pUEg" association="_72yQ2pOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3i5OfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3jJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3jZOfEeSfQOQl44pUEg" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3jpOfEeSfQOQl44pUEg" name="tax_card" visibility="private" type="_72yRGJOfEeSfQOQl44pUEg" association="_72y3hJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3j5OfEeSfQOQl44pUEg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3kJOfEeSfQOQl44pUEg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_72y3kZOfEeSfQOQl44pUEg" name="expenses" visibility="private" type="_72yQlpOfEeSfQOQl44pUEg" association="_72y3lJOfEeSfQOQl44pUEg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_72y3kpOfEeSfQOQl44pUEg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_72y3k5OfEeSfQOQl44pUEg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_72y3lJOfEeSfQOQl44pUEg" name="is computed based on" memberEnd="_72y3kZOfEeSfQOQl44pUEg _72yQpJOfEeSfQOQl44pUEg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interface" xmi:id="_72y3lZOfEeSfQOQl44pUEg" name="Interface1"/>
    <packagedElement xmi:type="uml:DataType" xmi:id="_72y3lpOfEeSfQOQl44pUEg" name="DataType1"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_72y3l5OfEeSfQOQl44pUEg" name="Class1"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_72y3mJOfEeSfQOQl44pUEg" name="Class2"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_72y3mZOfEeSfQOQl44pUEg" name="Class3"/>
    <profileApplication xmi:id="_72y3mpOfEeSfQOQl44pUEg">
      <eAnnotations xmi:id="_72y3m5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_72y3nJOfEeSfQOQl44pUEg">
      <eAnnotations xmi:id="_72y3nZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_74Jh-ZOfEeSfQOQl44pUEg"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_74Jh95OfEeSfQOQl44pUEg"/>
    </profileApplication>
    <profileApplication xmi:id="_72y3npOfEeSfQOQl44pUEg">
      <eAnnotations xmi:id="_72y3n5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_74FRyJOfEeSfQOQl44pUEg"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_74FRxpOfEeSfQOQl44pUEg"/>
    </profileApplication>
    <profileApplication xmi:id="_72y3oJOfEeSfQOQl44pUEg">
      <eAnnotations xmi:id="_72y3oZOfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_72zeaZOfEeSfQOQl44pUEg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_72zeZ5OfEeSfQOQl44pUEg"/>
    </profileApplication>
    <profileApplication xmi:id="_72y3opOfEeSfQOQl44pUEg">
      <eAnnotations xmi:id="_72y3o5OfEeSfQOQl44pUEg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_74KKvpOfEeSfQOQl44pUEg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_74KKvJOfEeSfQOQl44pUEg"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_72y3pJOfEeSfQOQl44pUEg" base_Comment="_72xqg5OfEeSfQOQl44pUEg"/>
  <Default:Documentation xmi:id="_72y3pZOfEeSfQOQl44pUEg" base_Comment="_72xp0pOfEeSfQOQl44pUEg"/>
</xmi:XMI>
