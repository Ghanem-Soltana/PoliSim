<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_1jjMWZo_EeOXzvVK2MY5wA">
  <uml:Package xmi:id="_1kgQi5o_EeOXzvVK2MY5wA" name="TaxCard">
    <packageImport xmi:id="_1kgQjJo_EeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_1kgQjZo_EeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_1kgQjpo_EeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_1jhVOJo_EeOXzvVK2MY5wA"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kgQj5o_EeOXzvVK2MY5wA" name="Tax_Card_Domain">
      <packageImport xmi:id="_1kgQkJo_EeOXzvVK2MY5wA" importedPackage="_1kg1-Jo_EeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_1kgQkZo_EeOXzvVK2MY5wA" importedPackage="_1kgQlpo_EeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_1kgQkpo_EeOXzvVK2MY5wA" importedPackage="_1kg14po_EeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_1kgQk5o_EeOXzvVK2MY5wA" importedPackage="_1kg0Zpo_EeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_1kgQlJo_EeOXzvVK2MY5wA" importedPackage="_1kg0ppo_EeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_1kgQlZo_EeOXzvVK2MY5wA" importedPackage="_1kg1lJo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kgQlpo_EeOXzvVK2MY5wA" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_1kgQl5o_EeOXzvVK2MY5wA" name="taxed under" memberEnd="_1kg0KJo_EeOXzvVK2MY5wA _1kg0V5o_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgQmJo_EeOXzvVK2MY5wA" name="Income_Tax">
        <ownedAttribute xmi:id="_1kgQmZo_EeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg0VJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgQmpo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgQm5o_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgQnJo_EeOXzvVK2MY5wA" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgQnZo_EeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzgJo_EeOXzvVK2MY5wA" name="Address">
        <ownedAttribute xmi:id="_1kgzgZo_EeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_1kgzzpo_EeOXzvVK2MY5wA" association="_1kg0S5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzgpo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzg5o_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzhJo_EeOXzvVK2MY5wA" name="country" visibility="public" type="_1kg1LJo_EeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_1kgzhZo_EeOXzvVK2MY5wA" name="LU" type="_1kg1LJo_EeOXzvVK2MY5wA" instance="_1kg1LZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzhpo_EeOXzvVK2MY5wA" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzh5o_EeOXzvVK2MY5wA" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgziJo_EeOXzvVK2MY5wA" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgziZo_EeOXzvVK2MY5wA" name="Dependent">
        <generalization xmi:id="_1kgzipo_EeOXzvVK2MY5wA" general="_1kgzzpo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kgzi5o_EeOXzvVK2MY5wA" name="dependent_type" visibility="public" type="_1kg1UZo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kgzjJo_EeOXzvVK2MY5wA" name="household" visibility="private" type="_1kgztZo_EeOXzvVK2MY5wA" association="_1kg0Upo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzjZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzjpo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzj5o_EeOXzvVK2MY5wA" name="responsible_person" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg0UZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzkJo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzkZo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzkpo_EeOXzvVK2MY5wA" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kgzk5o_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzlJo_EeOXzvVK2MY5wA" name="expense" visibility="private" type="_1kg1E5o_EeOXzvVK2MY5wA" association="_1kg0U5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzlZo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzlpo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzl5o_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg0UJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzmJo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzmZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kgzmpo_EeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_1kgzm5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kgznJo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kgznZo_EeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_1kgznpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kgzn5o_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kgzoJo_EeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_1kgzoZo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kgzopo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kgzo5o_EeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_1kgzpZo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kgzpJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kgzpZo_EeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" constrainedElement="_1kgzo5o_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgzppo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kgzp5o_EeOXzvVK2MY5wA" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kgzqJo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzqZo_EeOXzvVK2MY5wA" name="External_Allowance">
        <ownedAttribute xmi:id="_1kgzqpo_EeOXzvVK2MY5wA" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzq5o_EeOXzvVK2MY5wA" name="grantor" visibility="public" type="_1kg1JJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kgzrJo_EeOXzvVK2MY5wA" name="person" visibility="private" type="_1kgzzpo_EeOXzvVK2MY5wA" association="_1kg0TJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzrZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzrpo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzr5o_EeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzsJo_EeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzsZo_EeOXzvVK2MY5wA" name="Fiscal_Address">
        <generalization xmi:id="_1kgzspo_EeOXzvVK2MY5wA" general="_1kgzgJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzs5o_EeOXzvVK2MY5wA" name="Habitual_Address">
        <generalization xmi:id="_1kgztJo_EeOXzvVK2MY5wA" general="_1kgzgJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgztZo_EeOXzvVK2MY5wA" name="Household">
        <ownedAttribute xmi:id="_1kgztpo_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg0T5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzt5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzuJo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzuZo_EeOXzvVK2MY5wA" name="dependent" visibility="private" type="_1kgziZo_EeOXzvVK2MY5wA" association="_1kg0Upo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzupo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzu5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzvJo_EeOXzvVK2MY5wA" name="Legal_Union_Record">
        <ownedComment xmi:id="_1kgzvZo_EeOXzvVK2MY5wA" annotatedElement="_1kgzvJo_EeOXzvVK2MY5wA">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_1kgzvpo_EeOXzvVK2MY5wA" name="Legal_Union-different_people-constraint" constrainedElement="_1kgzvJo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgzv5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_1kgzwJo_EeOXzvVK2MY5wA" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzwZo_EeOXzvVK2MY5wA" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzwpo_EeOXzvVK2MY5wA" name="individual_A" visibility="private" type="_1kgzzpo_EeOXzvVK2MY5wA" association="_1kg0Tpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzw5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzxJo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgzxZo_EeOXzvVK2MY5wA" name="individual_B" visibility="private" type="_1kgzzpo_EeOXzvVK2MY5wA" association="_1kg0TZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgzxpo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgzx5o_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzyJo_EeOXzvVK2MY5wA" name="Marriage_Record">
        <generalization xmi:id="_1kgzyZo_EeOXzvVK2MY5wA" general="_1kgzvJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzypo_EeOXzvVK2MY5wA" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_1kgzy5o_EeOXzvVK2MY5wA" general="_1kgz9Zo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzzJo_EeOXzvVK2MY5wA" name="Partnership_Record">
        <generalization xmi:id="_1kgzzZo_EeOXzvVK2MY5wA" general="_1kgzvJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgzzpo_EeOXzvVK2MY5wA" name="Physical_Person">
        <ownedAttribute xmi:id="_1kgzz5o_EeOXzvVK2MY5wA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz0Jo_EeOXzvVK2MY5wA" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz0Zo_EeOXzvVK2MY5wA" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz0po_EeOXzvVK2MY5wA" name="allowances" visibility="private" type="_1kgzqZo_EeOXzvVK2MY5wA" association="_1kg0TJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgz05o_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgz1Jo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz1Zo_EeOXzvVK2MY5wA" name="addresses" visibility="private" type="_1kgzgJo_EeOXzvVK2MY5wA" association="_1kg0S5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgz1po_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgz15o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz2Jo_EeOXzvVK2MY5wA" name="legal_union_A" visibility="private" type="_1kgzvJo_EeOXzvVK2MY5wA" association="_1kg0Tpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgz2Zo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgz2po_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz25o_EeOXzvVK2MY5wA" name="legal_union_B" visibility="private" type="_1kgzvJo_EeOXzvVK2MY5wA" association="_1kg0TZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kgz3Jo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kgz3Zo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz3po_EeOXzvVK2MY5wA" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz35o_EeOXzvVK2MY5wA" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1kgz4Jo_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kgz4Zo_EeOXzvVK2MY5wA" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kgz4po_EeOXzvVK2MY5wA" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_1kgz45o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_1kgz5Jo_EeOXzvVK2MY5wA" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_1kgz5Zo_EeOXzvVK2MY5wA" name="IN_person" type="_1kgzzpo_EeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_1kgz5po_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kgz55o_EeOXzvVK2MY5wA" name="is_person_assisting_spouse" isQuery="true" postcondition="_1kgz6Zo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kgz6Jo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kgz6Zo_EeOXzvVK2MY5wA" name="is_assisting_spouse" constrainedElement="_1kgz55o_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz6po_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kgz65o_EeOXzvVK2MY5wA" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kgz7Jo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kgz7Zo_EeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_1kgz75o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kgz7po_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kgz75o_EeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_1kgz7Zo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz8Jo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kgz8Zo_EeOXzvVK2MY5wA" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kgz8po_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgz85o_EeOXzvVK2MY5wA" name="Resident_Tax_Payer">
        <generalization xmi:id="_1kgz9Jo_EeOXzvVK2MY5wA" general="_1kgz9Zo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kgz9Zo_EeOXzvVK2MY5wA" name="Tax_Payer">
        <ownedRule xmi:id="_1kgz9po_EeOXzvVK2MY5wA" name="NonResidentTaxPayer-constraint" constrainedElement="_1kgzypo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz95o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kgz-Jo_EeOXzvVK2MY5wA" name="ResidentTaxPayer-constraint" constrainedElement="_1kgz85o_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz-Zo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kgz-po_EeOXzvVK2MY5wA" name="SubjectToIncomeTax-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz-5o_EeOXzvVK2MY5wA" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kgz_Jo_EeOXzvVK2MY5wA" name="TaxCredit-CIS-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz_Zo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kgz_po_EeOXzvVK2MY5wA" name="TaxCredit-CIP-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kgz_5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0AJo_EeOXzvVK2MY5wA" name="TaxCredit-CIM-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0AZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Apo_EeOXzvVK2MY5wA" name="Legal_Union-monogamus-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0A5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0BJo_EeOXzvVK2MY5wA" name="TaxClass-unique-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0BZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Bpo_EeOXzvVK2MY5wA" name="TaxDeduction-CE-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0B5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0CJo_EeOXzvVK2MY5wA" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0CZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Cpo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0C5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0DJo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0DZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Dpo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0D5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0EJo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0EZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Epo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-5-donation" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0E5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0FJo_EeOXzvVK2MY5wA" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0FZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Fpo_EeOXzvVK2MY5wA" name="TaxCard-unique-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0F5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0GJo_EeOXzvVK2MY5wA" name="TaxDeduction-FD-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0GZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0Gpo_EeOXzvVK2MY5wA" name="TaxDeduction-FO-constraint" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0G5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0HJo_EeOXzvVK2MY5wA" name="test_for_iterate" constrainedElement="_1kgz9Zo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0HZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_1kg0Hpo_EeOXzvVK2MY5wA" general="_1kgzzpo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0H5o_EeOXzvVK2MY5wA" name="incomes" visibility="private" type="_1kg0h5o_EeOXzvVK2MY5wA" association="_1kg1K5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0IJo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0IZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0Ipo_EeOXzvVK2MY5wA" name="incomeTax" visibility="private" type="_1kgQmJo_EeOXzvVK2MY5wA" association="_1kg0VJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0I5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0JJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0JZo_EeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_1kg16Zo_EeOXzvVK2MY5wA" association="_1kg1M5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0Jpo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0J5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0KJo_EeOXzvVK2MY5wA" name="tax_class" visibility="private" type="_1kg0VZo_EeOXzvVK2MY5wA" association="_1kgQl5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0KZo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0Kpo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0K5o_EeOXzvVK2MY5wA" name="household" visibility="private" type="_1kgztZo_EeOXzvVK2MY5wA" association="_1kg0T5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0LJo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0LZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0Lpo_EeOXzvVK2MY5wA" name="dependents" visibility="private" type="_1kgziZo_EeOXzvVK2MY5wA" association="_1kg0UZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0L5o_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0MJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0MZo_EeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_1kg2X5o_EeOXzvVK2MY5wA" association="_1kg1V5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0Mpo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0M5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0NJo_EeOXzvVK2MY5wA" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0NZo_EeOXzvVK2MY5wA" name="expenses" visibility="private" type="_1kg1E5o_EeOXzvVK2MY5wA" association="_1kg1WJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0Npo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0N5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0OJo_EeOXzvVK2MY5wA" name="dependent" visibility="private" type="_1kgziZo_EeOXzvVK2MY5wA" association="_1kg0UJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0OZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0Opo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0O5o_EeOXzvVK2MY5wA" name="tax_Card" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" aggregation="shared" association="_1kg0Spo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0PJo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0PZo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0Ppo_EeOXzvVK2MY5wA" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg0P5o_EeOXzvVK2MY5wA" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_1kg0QZo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0QJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0QZo_EeOXzvVK2MY5wA" name="is_child_part_of_household" constrainedElement="_1kg0P5o_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0Qpo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0Q5o_EeOXzvVK2MY5wA" name="IN_dependent" type="_1kgziZo_EeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_1kg0RJo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg0RZo_EeOXzvVK2MY5wA" name="number_of_months_of_allowance" isQuery="true" postcondition="_1kg0R5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0Rpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0R5o_EeOXzvVK2MY5wA" name="number_od_months_of_allowance" constrainedElement="_1kg0RZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0SJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0SZo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0Spo_EeOXzvVK2MY5wA" name="" memberEnd="_1kg0O5o_EeOXzvVK2MY5wA _1kg10Jo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0S5o_EeOXzvVK2MY5wA" name="located at" memberEnd="_1kgz1Zo_EeOXzvVK2MY5wA _1kgzgZo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0TJo_EeOXzvVK2MY5wA" name="receives" memberEnd="_1kgz0po_EeOXzvVK2MY5wA _1kgzrJo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0TZo_EeOXzvVK2MY5wA" name="person B" memberEnd="_1kgzxZo_EeOXzvVK2MY5wA _1kgz25o_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0Tpo_EeOXzvVK2MY5wA" name="person A" memberEnd="_1kgzwpo_EeOXzvVK2MY5wA _1kgz2Jo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0T5o_EeOXzvVK2MY5wA" name="maintains" memberEnd="_1kg0K5o_EeOXzvVK2MY5wA _1kgztpo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0UJo_EeOXzvVK2MY5wA" name="as tax payer" memberEnd="_1kgzl5o_EeOXzvVK2MY5wA _1kg0OJo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0UZo_EeOXzvVK2MY5wA" name="supports" memberEnd="_1kg0Lpo_EeOXzvVK2MY5wA _1kgzj5o_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0Upo_EeOXzvVK2MY5wA" name="is part of" memberEnd="_1kgzjJo_EeOXzvVK2MY5wA _1kgzuZo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0U5o_EeOXzvVK2MY5wA" name="incurred over" memberEnd="_1kg1Gpo_EeOXzvVK2MY5wA _1kgzlJo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0VJo_EeOXzvVK2MY5wA" name="is subject to" memberEnd="_1kg0Ipo_EeOXzvVK2MY5wA _1kgQmZo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0VZo_EeOXzvVK2MY5wA" name="Tax_Class">
        <ownedAttribute xmi:id="_1kg0Vpo_EeOXzvVK2MY5wA" name="tax_class" visibility="public" type="_1kg1Rpo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0V5o_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kgQl5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0WJo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0WZo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0Wpo_EeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0W5o_EeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0XJo_EeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg1Vpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0XZo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0Xpo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0X5o_EeOXzvVK2MY5wA" name="current_tax_class" visibility="private" type="_1kg0VZo_EeOXzvVK2MY5wA" association="_1kg0ZZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0YJo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0YZo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0Ypo_EeOXzvVK2MY5wA" name="prev" visibility="private" type="_1kg0VZo_EeOXzvVK2MY5wA" association="_1kg0ZZo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0Y5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0ZJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0ZZo_EeOXzvVK2MY5wA" name="replaced by" memberEnd="_1kg0X5o_EeOXzvVK2MY5wA _1kg0Ypo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kg0Zpo_EeOXzvVK2MY5wA" name="Income_Concepts">
      <ownedComment xmi:id="_1kg0Z5o_EeOXzvVK2MY5wA" annotatedElement="_1kg0gZo_EeOXzvVK2MY5wA">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0aJo_EeOXzvVK2MY5wA" name="Income_Type">
        <ownedAttribute xmi:id="_1kg0aZo_EeOXzvVK2MY5wA" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_1kg0apo_EeOXzvVK2MY5wA" annotatedElement="_1kg0aZo_EeOXzvVK2MY5wA">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0a5o_EeOXzvVK2MY5wA" name="income" visibility="private" type="_1kg0h5o_EeOXzvVK2MY5wA" association="_1kg0gpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0bJo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0bZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0bpo_EeOXzvVK2MY5wA" name="Trade_and_Business_Income">
        <generalization xmi:id="_1kg0b5o_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0cJo_EeOXzvVK2MY5wA" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_1kg0cZo_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0cpo_EeOXzvVK2MY5wA" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_1kg0c5o_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0dJo_EeOXzvVK2MY5wA" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_1kg0dZo_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0dpo_EeOXzvVK2MY5wA" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg0d5o_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0eJo_EeOXzvVK2MY5wA" name="Capital_and_Investments_Income">
        <generalization xmi:id="_1kg0eZo_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0epo_EeOXzvVK2MY5wA" name="Employment_Income">
        <generalization xmi:id="_1kg0e5o_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0fJo_EeOXzvVK2MY5wA" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_1kg0fZo_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0fpo_EeOXzvVK2MY5wA" name="Sundry_Income">
        <generalization xmi:id="_1kg0f5o_EeOXzvVK2MY5wA" general="_1kg0aJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0gJo_EeOXzvVK2MY5wA" name="Directors_Fee">
        <generalization xmi:id="_1kg0gZo_EeOXzvVK2MY5wA" general="_1kg0cpo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg0gpo_EeOXzvVK2MY5wA" name="has as type" memberEnd="_1kg0lpo_EeOXzvVK2MY5wA _1kg0a5o_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0g5o_EeOXzvVK2MY5wA" name="Foreign_Income">
        <generalization xmi:id="_1kg0hJo_EeOXzvVK2MY5wA" general="_1kg0h5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0hZo_EeOXzvVK2MY5wA" name="Local_Income">
        <generalization xmi:id="_1kg0hpo_EeOXzvVK2MY5wA" general="_1kg0h5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0h5o_EeOXzvVK2MY5wA" name="Income">
        <ownedRule xmi:id="_1kg0iJo_EeOXzvVK2MY5wA" name="Tax_Deduction_FD-constraint" constrainedElement="_1kg0h5o_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0iZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg0ipo_EeOXzvVK2MY5wA" name="Tax_Deduction_FO-constraint" constrainedElement="_1kg0h5o_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0i5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_1kg0jJo_EeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg1K5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0jZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0jpo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0j5o_EeOXzvVK2MY5wA" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0kJo_EeOXzvVK2MY5wA" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0kZo_EeOXzvVK2MY5wA" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0kpo_EeOXzvVK2MY5wA" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0k5o_EeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg1UJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0lJo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0lZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0lpo_EeOXzvVK2MY5wA" name="income_type" visibility="private" type="_1kg0aJo_EeOXzvVK2MY5wA" association="_1kg0gpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0l5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0mJo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0mZo_EeOXzvVK2MY5wA" name="expenses" visibility="private" type="_1kg1E5o_EeOXzvVK2MY5wA" association="_1kg1Epo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg0mpo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg0m5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0nJo_EeOXzvVK2MY5wA" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg0nZo_EeOXzvVK2MY5wA" name="compute_duration_of_contract" isQuery="true" postcondition="_1kg0n5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0npo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0n5o_EeOXzvVK2MY5wA" name="get_duration" constrainedElement="_1kg0nZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0oJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0oZo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg0opo_EeOXzvVK2MY5wA" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_1kg0o5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kg0pJo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg0pZo_EeOXzvVK2MY5wA" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kg0ppo_EeOXzvVK2MY5wA" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0p5o_EeOXzvVK2MY5wA" name="Permanent_Expense">
        <generalization xmi:id="_1kg0qJo_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0qZo_EeOXzvVK2MY5wA" name="category" visibility="public" type="_1kg1BZo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0qpo_EeOXzvVK2MY5wA" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg0q5o_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg0rJo_EeOXzvVK2MY5wA" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_1kg0rpo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0rZo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0rpo_EeOXzvVK2MY5wA" name="is_eligible" constrainedElement="_1kg0rJo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0r5o_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0sJo_EeOXzvVK2MY5wA" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg0sZo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0spo_EeOXzvVK2MY5wA" name="Interest_Expense">
        <generalization xmi:id="_1kg0s5o_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0tJo_EeOXzvVK2MY5wA" name="Special_Expense_DS">
        <generalization xmi:id="_1kg0tZo_EeOXzvVK2MY5wA" general="_1kg1E5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0tpo_EeOXzvVK2MY5wA" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_1kg0t5o_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0uJo_EeOXzvVK2MY5wA" name="category" visibility="public" type="_1kg1CJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0uZo_EeOXzvVK2MY5wA" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0upo_EeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_1kg0u5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg0vJo_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg0vZo_EeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_1kg0v5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0vpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0v5o_EeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_1kg0vZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0wJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0wZo_EeOXzvVK2MY5wA" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0wpo_EeOXzvVK2MY5wA" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_1kg0w5o_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0xJo_EeOXzvVK2MY5wA" name="category" visibility="public" type="_1kg1Dpo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0xZo_EeOXzvVK2MY5wA" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg0xpo_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0x5o_EeOXzvVK2MY5wA" name="Donation">
        <generalization xmi:id="_1kg0yJo_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg0yZo_EeOXzvVK2MY5wA" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0ypo_EeOXzvVK2MY5wA" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg0y5o_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg0zJo_EeOXzvVK2MY5wA" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg0zZo_EeOXzvVK2MY5wA" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_1kg0z5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0zpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0z5o_EeOXzvVK2MY5wA" name="is_leagaly_approved_beneficiary" constrainedElement="_1kg0zZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg00Jo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg00Zo_EeOXzvVK2MY5wA" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg00po_EeOXzvVK2MY5wA" name="Loss_Carryforward">
        <ownedRule xmi:id="_1kg005o_EeOXzvVK2MY5wA" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_1kg00po_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg01Jo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_1kg01Zo_EeOXzvVK2MY5wA" general="_1kg0tJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg01po_EeOXzvVK2MY5wA" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg015o_EeOXzvVK2MY5wA" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg02Jo_EeOXzvVK2MY5wA" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg02Zo_EeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg02po_EeOXzvVK2MY5wA" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_1kg025o_EeOXzvVK2MY5wA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg03Jo_EeOXzvVK2MY5wA" name="is_accountability_regular" isQuery="true" postcondition="_1kg03po_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg03Zo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg03po_EeOXzvVK2MY5wA" name="is_accounatbility_regular" constrainedElement="_1kg03Jo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg035o_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg04Jo_EeOXzvVK2MY5wA" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg04Zo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg04po_EeOXzvVK2MY5wA" name="is_compensated_by_other_means" isQuery="true" postcondition="_1kg05Jo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg045o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg05Jo_EeOXzvVK2MY5wA" name="is_compensated_by_other_means" constrainedElement="_1kg04po_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg05Zo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg05po_EeOXzvVK2MY5wA" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg055o_EeOXzvVK2MY5wA" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_1kg06Zo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg06Jo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg06Zo_EeOXzvVK2MY5wA" name="partner_in_business" constrainedElement="_1kg055o_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg06po_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg065o_EeOXzvVK2MY5wA" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg07Jo_EeOXzvVK2MY5wA" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_1kg07po_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg07Zo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg07po_EeOXzvVK2MY5wA" name="inherited_business_ownership" constrainedElement="_1kg07Jo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg075o_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg08Jo_EeOXzvVK2MY5wA" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg08Zo_EeOXzvVK2MY5wA" name="Spousal_Expense_AC">
        <generalization xmi:id="_1kg08po_EeOXzvVK2MY5wA" general="_1kg1E5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg085o_EeOXzvVK2MY5wA" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_1kg09Jo_EeOXzvVK2MY5wA" general="_1kg1E5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg09Zo_EeOXzvVK2MY5wA" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg09po_EeOXzvVK2MY5wA" name="ce_type" visibility="public" type="_1kg1XJo_EeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_1kg095o_EeOXzvVK2MY5wA" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_1kg0-Jo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kg0-Zo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg0-po_EeOXzvVK2MY5wA" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_1kg0_Jo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg0-5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg0_Jo_EeOXzvVK2MY5wA" name="thresholded_deduction_percentage" constrainedElement="_1kg0-po_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg0_Zo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg0_po_EeOXzvVK2MY5wA" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg0_5o_EeOXzvVK2MY5wA" name="Travel_Expense_FD">
        <generalization xmi:id="_1kg1AJo_EeOXzvVK2MY5wA" general="_1kg1A5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg1AZo_EeOXzvVK2MY5wA" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_1kg1Apo_EeOXzvVK2MY5wA" general="_1kg1A5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg1A5o_EeOXzvVK2MY5wA" name="Professional_Expense">
        <generalization xmi:id="_1kg1BJo_EeOXzvVK2MY5wA" general="_1kg1E5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1BZo_EeOXzvVK2MY5wA" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_1kg1Bpo_EeOXzvVK2MY5wA" name="MISCELLANEOUS_DEBT" classifier="_1kg1BZo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1B5o_EeOXzvVK2MY5wA" name="ALIMONY" classifier="_1kg1BZo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1CJo_EeOXzvVK2MY5wA" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_1kg1CZo_EeOXzvVK2MY5wA" name="PRIVATE_INSURANCE" classifier="_1kg1CJo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1Cpo_EeOXzvVK2MY5wA" name="PRIVATE_LIFE_INSURANCE" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1C5o_EeOXzvVK2MY5wA" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_1kg1CJo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1DJo_EeOXzvVK2MY5wA" name="HOUSING_SAVING_PLAN" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1DZo_EeOXzvVK2MY5wA" name="OLD_AGE_PENSION_PLAN" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1Dpo_EeOXzvVK2MY5wA" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_1kg1D5o_EeOXzvVK2MY5wA" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1EJo_EeOXzvVK2MY5wA" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_1kg1EZo_EeOXzvVK2MY5wA" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_1kg1Dpo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg1Epo_EeOXzvVK2MY5wA" name="influences" memberEnd="_1kg1Hpo_EeOXzvVK2MY5wA _1kg0mZo_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg1E5o_EeOXzvVK2MY5wA" name="Expense">
        <ownedAttribute xmi:id="_1kg1FJo_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg1WJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1FZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1Fpo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1F5o_EeOXzvVK2MY5wA" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1GJo_EeOXzvVK2MY5wA" name="expense_purpose" visibility="public" type="_1kg1YJo_EeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_1kg1GZo_EeOXzvVK2MY5wA" name="OTHER" type="_1kg1YJo_EeOXzvVK2MY5wA" instance="_1kg1ZJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1Gpo_EeOXzvVK2MY5wA" name="dependent" visibility="private" type="_1kgziZo_EeOXzvVK2MY5wA" association="_1kg0U5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1G5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1HJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1HZo_EeOXzvVK2MY5wA" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1Hpo_EeOXzvVK2MY5wA" name="income" visibility="private" type="_1kg0h5o_EeOXzvVK2MY5wA" association="_1kg1Epo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1H5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1IJo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1IZo_EeOXzvVK2MY5wA" name="deduction" visibility="private" type="_1kg2X5o_EeOXzvVK2MY5wA" association="_1kg2bpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1Ipo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1I5o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1JJo_EeOXzvVK2MY5wA" name="Grantor">
      <ownedLiteral xmi:id="_1kg1JZo_EeOXzvVK2MY5wA" name="ACD" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Jpo_EeOXzvVK2MY5wA" name="Employer" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1J5o_EeOXzvVK2MY5wA" name="CNPF" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1KJo_EeOXzvVK2MY5wA" name="CEDIES" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1KZo_EeOXzvVK2MY5wA" name="SNJ" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Kpo_EeOXzvVK2MY5wA" name="CNAP" classifier="_1kg1JJo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1K5o_EeOXzvVK2MY5wA" name="earns" memberEnd="_1kg0H5o_EeOXzvVK2MY5wA _1kg0jJo_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1LJo_EeOXzvVK2MY5wA" name="Country">
      <ownedLiteral xmi:id="_1kg1LZo_EeOXzvVK2MY5wA" name="LU" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Lpo_EeOXzvVK2MY5wA" name="FR" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1L5o_EeOXzvVK2MY5wA" name="BE" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1MJo_EeOXzvVK2MY5wA" name="DE" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1MZo_EeOXzvVK2MY5wA" name="NL" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Mpo_EeOXzvVK2MY5wA" name="OTHER" classifier="_1kg1LJo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1M5o_EeOXzvVK2MY5wA" name="credited for" memberEnd="_1kg0JZo_EeOXzvVK2MY5wA _1kg165o_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_1kg1NJo_EeOXzvVK2MY5wA" name="Date">
      <ownedAttribute xmi:id="_1kg1NZo_EeOXzvVK2MY5wA" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1Npo_EeOXzvVK2MY5wA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1N5o_EeOXzvVK2MY5wA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_1kg1OJo_EeOXzvVK2MY5wA" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_1kg1OZo_EeOXzvVK2MY5wA" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1Opo_EeOXzvVK2MY5wA" name="Job_Activity">
      <ownedLiteral xmi:id="_1kg1O5o_EeOXzvVK2MY5wA" name="Salary" classifier="_1kg1Opo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1PJo_EeOXzvVK2MY5wA" name="Pension" classifier="_1kg1Opo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1PZo_EeOXzvVK2MY5wA" name="Annuity" classifier="_1kg1Opo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1Ppo_EeOXzvVK2MY5wA" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_1kg1P5o_EeOXzvVK2MY5wA" name="Principal" classifier="_1kg1Ppo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1QJo_EeOXzvVK2MY5wA" name="Additional" classifier="_1kg1Ppo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1QZo_EeOXzvVK2MY5wA" name="Tax_Office">
      <ownedLiteral xmi:id="_1kg1Qpo_EeOXzvVK2MY5wA" name="RTS_2" classifier="_1kg1QZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Q5o_EeOXzvVK2MY5wA" name="RTS_3" classifier="_1kg1QZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1RJo_EeOXzvVK2MY5wA" name="RTS_Esch" classifier="_1kg1QZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1RZo_EeOXzvVK2MY5wA" name="RTS_Ettelbruck" classifier="_1kg1QZo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1Rpo_EeOXzvVK2MY5wA" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_1kg1R5o_EeOXzvVK2MY5wA" name="One" classifier="_1kg1Rpo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1SJo_EeOXzvVK2MY5wA" name="One_A" classifier="_1kg1Rpo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1SZo_EeOXzvVK2MY5wA" name="Two" classifier="_1kg1Rpo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1Spo_EeOXzvVK2MY5wA" name="Town">
      <ownedLiteral xmi:id="_1kg1S5o_EeOXzvVK2MY5wA" name="Luxembourg_city" classifier="_1kg1Spo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1TJo_EeOXzvVK2MY5wA" name="Bertrange" classifier="_1kg1Spo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1TZo_EeOXzvVK2MY5wA" name="Strassen" classifier="_1kg1Spo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Tpo_EeOXzvVK2MY5wA" name="Bettembourg" classifier="_1kg1Spo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1T5o_EeOXzvVK2MY5wA" name="Beaufort" classifier="_1kg1Spo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1UJo_EeOXzvVK2MY5wA" name="linked to" memberEnd="_1kg0k5o_EeOXzvVK2MY5wA _1kg1qpo_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1UZo_EeOXzvVK2MY5wA" name="Dependent_Type">
      <ownedLiteral xmi:id="_1kg1Upo_EeOXzvVK2MY5wA" name="CHILD" classifier="_1kg1UZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1U5o_EeOXzvVK2MY5wA" name="SPOUSE" classifier="_1kg1UZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1VJo_EeOXzvVK2MY5wA" name="RELATIVE" classifier="_1kg1UZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1VZo_EeOXzvVK2MY5wA" name="OTHER_FAMILY_MEMBER" classifier="_1kg1UZo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1Vpo_EeOXzvVK2MY5wA" name="provides" memberEnd="_1kg1rZo_EeOXzvVK2MY5wA _1kg0XJo_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1V5o_EeOXzvVK2MY5wA" name="receives" memberEnd="_1kg0MZo_EeOXzvVK2MY5wA _1kg2ZJo_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_1kg1WJo_EeOXzvVK2MY5wA" name="declares" memberEnd="_1kg0NZo_EeOXzvVK2MY5wA _1kg1FJo_EeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1WZo_EeOXzvVK2MY5wA" name="Type_of_Rate">
      <ownedLiteral xmi:id="_1kg1Wpo_EeOXzvVK2MY5wA" name="REGULAR" classifier="_1kg1WZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1W5o_EeOXzvVK2MY5wA" name="REAL_COST" classifier="_1kg1WZo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1XJo_EeOXzvVK2MY5wA" name="CE_Type">
      <ownedLiteral xmi:id="_1kg1XZo_EeOXzvVK2MY5wA" name="INALIDITY_AND_INFIRMITY" classifier="_1kg1XJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Xpo_EeOXzvVK2MY5wA" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_1kg1XJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1X5o_EeOXzvVK2MY5wA" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_1kg1XJo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1YJo_EeOXzvVK2MY5wA" name="Expense_Purpose">
      <ownedLiteral xmi:id="_1kg1YZo_EeOXzvVK2MY5wA" name="HOUSE_CARE" classifier="_1kg1YJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Ypo_EeOXzvVK2MY5wA" name="CHILD_CARE" classifier="_1kg1YJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1Y5o_EeOXzvVK2MY5wA" name="DEPENDENCE_CARE" classifier="_1kg1YJo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1ZJo_EeOXzvVK2MY5wA" name="OTHER" classifier="_1kg1YJo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_1kg1ZZo_EeOXzvVK2MY5wA" name="Constants">
      <ownedLiteral xmi:id="_1kg1Zpo_EeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1Z5o_EeOXzvVK2MY5wA" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1aJo_EeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1aZo_EeOXzvVK2MY5wA" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1apo_EeOXzvVK2MY5wA" name="MINIMUM_SALARY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1a5o_EeOXzvVK2MY5wA" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1bJo_EeOXzvVK2MY5wA" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1bZo_EeOXzvVK2MY5wA" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1bpo_EeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1b5o_EeOXzvVK2MY5wA" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1cJo_EeOXzvVK2MY5wA" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1cZo_EeOXzvVK2MY5wA" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1cpo_EeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1c5o_EeOXzvVK2MY5wA"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1dJo_EeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1dZo_EeOXzvVK2MY5wA" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1dpo_EeOXzvVK2MY5wA" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1d5o_EeOXzvVK2MY5wA" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1eJo_EeOXzvVK2MY5wA" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1eZo_EeOXzvVK2MY5wA" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1epo_EeOXzvVK2MY5wA" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1e5o_EeOXzvVK2MY5wA" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1fJo_EeOXzvVK2MY5wA" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1fZo_EeOXzvVK2MY5wA" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1fpo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIM_DAILY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1f5o_EeOXzvVK2MY5wA" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1gJo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIM_MONTHLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1gZo_EeOXzvVK2MY5wA" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1gpo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIM_YEARLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1g5o_EeOXzvVK2MY5wA" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1hJo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIP_DAILY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1hZo_EeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1hpo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIP_MONTHLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1h5o_EeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1iJo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIP_YEARLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1iZo_EeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1ipo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIS_DAILY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1i5o_EeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1jJo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIS_MONTHLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1jZo_EeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1jpo_EeOXzvVK2MY5wA" name="FLAT_RATE_CIS_YEARLY" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1j5o_EeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1kJo_EeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_1kg1ZZo_EeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_1kg1kZo_EeOXzvVK2MY5wA" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_1kg1kpo_EeOXzvVK2MY5wA" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_1kg1ZZo_EeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_1kg1k5o_EeOXzvVK2MY5wA" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_1kg1ZZo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kg1lJo_EeOXzvVK2MY5wA" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg1lZo_EeOXzvVK2MY5wA" name="Tax_Card">
        <ownedRule xmi:id="_1kg1lpo_EeOXzvVK2MY5wA" name="SubjectToWithholdingTax-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1l5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1mJo_EeOXzvVK2MY5wA" name="Tax_Credits-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1mZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1mpo_EeOXzvVK2MY5wA" name="Tax_Card_AC-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1m5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1nJo_EeOXzvVK2MY5wA" name="Tax_Card_FD-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1nZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1npo_EeOXzvVK2MY5wA" name="Tax_Card_DS-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1n5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1oJo_EeOXzvVK2MY5wA" name="Tax_Card_CE-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1oZo_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_1kg1opo_EeOXzvVK2MY5wA" name="Tax_Card_FO-constraint" constrainedElement="_1kg1lZo_EeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg1o5o_EeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_1kg1pJo_EeOXzvVK2MY5wA" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1pZo_EeOXzvVK2MY5wA" name="tax_card_type" visibility="public" type="_1kg1Ppo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg1ppo_EeOXzvVK2MY5wA" name="tax_office" visibility="public" type="_1kg1QZo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg1p5o_EeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1qJo_EeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_1jhVuZo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1qZo_EeOXzvVK2MY5wA" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1qpo_EeOXzvVK2MY5wA" name="income" visibility="private" type="_1kg0h5o_EeOXzvVK2MY5wA" association="_1kg1UJo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1q5o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1rJo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1rZo_EeOXzvVK2MY5wA" name="tax_Class" visibility="private" type="_1kg0VZo_EeOXzvVK2MY5wA" association="_1kg1Vpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1rpo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1r5o_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1sJo_EeOXzvVK2MY5wA" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1sZo_EeOXzvVK2MY5wA" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1spo_EeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1s5o_EeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1tJo_EeOXzvVK2MY5wA" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg1tZo_EeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg1tpo_EeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1t5o_EeOXzvVK2MY5wA" name="tax_payers_address" visibility="public" type="_1kgzgJo_EeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_1kg1uJo_EeOXzvVK2MY5wA" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1uZo_EeOXzvVK2MY5wA" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1upo_EeOXzvVK2MY5wA" name="jobs_activity_type" visibility="public" type="_1kg1Opo_EeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_1kg1u5o_EeOXzvVK2MY5wA" name="jobs_place_of_work" visibility="public" type="_1kg1Spo_EeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_1kg1vJo_EeOXzvVK2MY5wA" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1vZo_EeOXzvVK2MY5wA" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1vpo_EeOXzvVK2MY5wA" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1v5o_EeOXzvVK2MY5wA" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1wJo_EeOXzvVK2MY5wA" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1wZo_EeOXzvVK2MY5wA" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1wpo_EeOXzvVK2MY5wA" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1w5o_EeOXzvVK2MY5wA" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1xJo_EeOXzvVK2MY5wA" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1xZo_EeOXzvVK2MY5wA" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1xpo_EeOXzvVK2MY5wA" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1x5o_EeOXzvVK2MY5wA" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1yJo_EeOXzvVK2MY5wA" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1yZo_EeOXzvVK2MY5wA" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1ypo_EeOXzvVK2MY5wA" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1y5o_EeOXzvVK2MY5wA" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1zJo_EeOXzvVK2MY5wA" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1zZo_EeOXzvVK2MY5wA" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1zpo_EeOXzvVK2MY5wA" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1z5o_EeOXzvVK2MY5wA" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg10Jo_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg0Spo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg10Zo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg10po_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg105o_EeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_1kg16Zo_EeOXzvVK2MY5wA" aggregation="shared" association="_1kg14Jo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg11Jo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg11Zo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg11po_EeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_1kg2X5o_EeOXzvVK2MY5wA" aggregation="shared" association="_1kg2Xpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg115o_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg12Jo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg12Zo_EeOXzvVK2MY5wA" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg12po_EeOXzvVK2MY5wA" name="previous" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg14Zo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg125o_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg13Jo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg13Zo_EeOXzvVK2MY5wA" name="current_tax_card" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg14Zo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg13po_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg135o_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg14Jo_EeOXzvVK2MY5wA" name="include" memberEnd="_1kg19Zo_EeOXzvVK2MY5wA _1kg105o_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg14Zo_EeOXzvVK2MY5wA" name="invalidated by" memberEnd="_1kg12po_EeOXzvVK2MY5wA _1kg13Zo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kg14po_EeOXzvVK2MY5wA" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg145o_EeOXzvVK2MY5wA" name="CIM">
        <generalization xmi:id="_1kg15Jo_EeOXzvVK2MY5wA" general="_1kg16Zo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg15Zo_EeOXzvVK2MY5wA" name="CIP">
        <generalization xmi:id="_1kg15po_EeOXzvVK2MY5wA" general="_1kg16Zo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg155o_EeOXzvVK2MY5wA" name="CIS">
        <generalization xmi:id="_1kg16Jo_EeOXzvVK2MY5wA" general="_1kg16Zo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg16Zo_EeOXzvVK2MY5wA" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_1kg16po_EeOXzvVK2MY5wA" name="grantedBy" visibility="public" type="_1kg1JJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg165o_EeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg1M5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg17Jo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg17Zo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg17po_EeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg175o_EeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1kg18Jo_EeOXzvVK2MY5wA" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg18Zo_EeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1kg18po_EeOXzvVK2MY5wA" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg185o_EeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1kg19Jo_EeOXzvVK2MY5wA" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg19Zo_EeOXzvVK2MY5wA" name="taxation_Frame" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg14Jo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg19po_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg195o_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_1kg1-Jo_EeOXzvVK2MY5wA" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg1-Zo_EeOXzvVK2MY5wA" name="FD">
        <generalization xmi:id="_1kg1-po_EeOXzvVK2MY5wA" general="_1kg2WZo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg1-5o_EeOXzvVK2MY5wA" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg1_Jo_EeOXzvVK2MY5wA" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg1_Zo_EeOXzvVK2MY5wA" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_1kg1_po_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kg1_5o_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2AJo_EeOXzvVK2MY5wA" name="FO">
        <generalization xmi:id="_1kg2AZo_EeOXzvVK2MY5wA" general="_1kg2WZo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2Apo_EeOXzvVK2MY5wA" name="rate_type_for_FO" visibility="public" type="_1kg1WZo_EeOXzvVK2MY5wA" isDerived="true"/>
        <ownedOperation xmi:id="_1kg2A5o_EeOXzvVK2MY5wA" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_1kg2BJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_1kg2BZo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg2Bpo_EeOXzvVK2MY5wA" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_1kg2B5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_1kg2CJo_EeOXzvVK2MY5wA" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_1kg2CZo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2Cpo_EeOXzvVK2MY5wA" name="CE">
        <eAnnotations xmi:id="_1kg2C5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_1kg2DJo_EeOXzvVK2MY5wA" general="_1kg2X5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2DZo_EeOXzvVK2MY5wA" name="ce_deduction_type" visibility="public" type="_1kg1XJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2Dpo_EeOXzvVK2MY5wA" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2D5o_EeOXzvVK2MY5wA" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg2EJo_EeOXzvVK2MY5wA" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_1kg2Epo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2EZo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2Epo_EeOXzvVK2MY5wA" name="compute_disability_flat_rate" constrainedElement="_1kg2EJo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2E5o_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2FJo_EeOXzvVK2MY5wA" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg2FZo_EeOXzvVK2MY5wA" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_1kg2F5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2Fpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2F5o_EeOXzvVK2MY5wA" name="dependent_relative_flat_rate" constrainedElement="_1kg2FZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2GJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2GZo_EeOXzvVK2MY5wA" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2Gpo_EeOXzvVK2MY5wA" name="AC">
        <generalization xmi:id="_1kg2G5o_EeOXzvVK2MY5wA" general="_1kg2X5o_EeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_1kg2HJo_EeOXzvVK2MY5wA" name="is_eligible_income_for_AC" isQuery="true" postcondition="_1kg2Hpo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2HZo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2Hpo_EeOXzvVK2MY5wA" name="is_eligible_income_for_AC" constrainedElement="_1kg2HJo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2H5o_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2IJo_EeOXzvVK2MY5wA" name="IN_income" type="_1kg0h5o_EeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_1kg2IZo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg2Ipo_EeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_1kg2JJo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2I5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2JJo_EeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_1kg2Ipo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2JZo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2Jpo_EeOXzvVK2MY5wA" name="IN_income" type="_1kg0h5o_EeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_1kg2J5o_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2KJo_EeOXzvVK2MY5wA" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_1kg2KZo_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2Kpo_EeOXzvVK2MY5wA" name="permanent_expense_category" visibility="public" type="_1kg1BZo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2K5o_EeOXzvVK2MY5wA" name="DS_for_Interest_Expense">
        <generalization xmi:id="_1kg2LJo_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_1kg2LZo_EeOXzvVK2MY5wA" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_1kg2L5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2Lpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2L5o_EeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_1kg2LZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2MJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2MZo_EeOXzvVK2MY5wA" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg2Mpo_EeOXzvVK2MY5wA" name="IN_children_with_allowances" type="_1kgziZo_EeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg2M5o_EeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg2NJo_EeOXzvVK2MY5wA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg2NZo_EeOXzvVK2MY5wA" name="IN_legal_union" type="_1kgzvJo_EeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg2Npo_EeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg2N5o_EeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2OJo_EeOXzvVK2MY5wA" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_1kg2OZo_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2Opo_EeOXzvVK2MY5wA" name="insurance_category" visibility="public" type="_1kg1Dpo_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2O5o_EeOXzvVK2MY5wA" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_1kg2PJo_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2PZo_EeOXzvVK2MY5wA" name="private_insurance_and_plan_category" visibility="public" type="_1kg1CJo_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2Ppo_EeOXzvVK2MY5wA" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2P5o_EeOXzvVK2MY5wA" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2QJo_EeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_1kg2QZo_EeOXzvVK2MY5wA" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_1kg2Q5o_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2Qpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2Q5o_EeOXzvVK2MY5wA" name="get_increase_for_life_insurance" constrainedElement="_1kg2QZo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2RJo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2RZo_EeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg2Rpo_EeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_1kg2SJo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2R5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2SJo_EeOXzvVK2MY5wA" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_1kg2Rpo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2SZo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_1kg2Spo_EeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_1kg2TJo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2S5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2TJo_EeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_1kg2Spo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2TZo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2Tpo_EeOXzvVK2MY5wA" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_1kg2T5o_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2UJo_EeOXzvVK2MY5wA" name="DS_for_Donation">
        <generalization xmi:id="_1kg2UZo_EeOXzvVK2MY5wA" general="_1kg2W5o_EeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_1kg2Upo_EeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_1kg2VJo_EeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_1kg2U5o_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_1kg2VJo_EeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_1kg2Upo_EeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_1kg2VZo_EeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_1kg2Vpo_EeOXzvVK2MY5wA" name="IN_maximum_percentage" type="_1kg1ZZo_EeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_1kg2V5o_EeOXzvVK2MY5wA" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_1kg2WJo_EeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2WZo_EeOXzvVK2MY5wA" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_1kg2Wpo_EeOXzvVK2MY5wA" general="_1kg2X5o_EeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2W5o_EeOXzvVK2MY5wA" name="DS">
        <generalization xmi:id="_1kg2XJo_EeOXzvVK2MY5wA" general="_1kg2X5o_EeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_1kg2XZo_EeOXzvVK2MY5wA" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg2Xpo_EeOXzvVK2MY5wA" name="considers" memberEnd="_1kg2aJo_EeOXzvVK2MY5wA _1kg11po_EeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_1kg2X5o_EeOXzvVK2MY5wA" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_1kg2YJo_EeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2YZo_EeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2Ypo_EeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2Y5o_EeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2ZJo_EeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_1kgz9Zo_EeOXzvVK2MY5wA" association="_1kg1V5o_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg2ZZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg2Zpo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2Z5o_EeOXzvVK2MY5wA" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2aJo_EeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_1kg1lZo_EeOXzvVK2MY5wA" association="_1kg2Xpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg2aZo_EeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg2apo_EeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_1kg2a5o_EeOXzvVK2MY5wA" name="expenses" visibility="private" type="_1kg1E5o_EeOXzvVK2MY5wA" association="_1kg2bpo_EeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1kg2bJo_EeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1kg2bZo_EeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_1kg2bpo_EeOXzvVK2MY5wA" name="is computed based on" memberEnd="_1kg2a5o_EeOXzvVK2MY5wA _1kg1IZo_EeOXzvVK2MY5wA"/>
    </packagedElement>
    <profileApplication xmi:id="_1kg2b5o_EeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_1kg2cJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_1kg2cZo_EeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_1kg2cpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_1jjMWZo_EeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_1jjMV5o_EeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_1kg2c5o_EeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_1kg2dJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_1kearpo_EeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_1kearJo_EeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_1kg2dZo_EeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_1kg2dpo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_1jgH5po_EeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_1jgH5Jo_EeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_1kg2d5o_EeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_1kg2eJo_EeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_1kfmu5o_EeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_1kfmuZo_EeOXzvVK2MY5wA"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_1kg2eZo_EeOXzvVK2MY5wA" base_Comment="_1kg0apo_EeOXzvVK2MY5wA"/>
  <Default:Documentation xmi:id="_1kg2epo_EeOXzvVK2MY5wA" base_Comment="_1kgzvZo_EeOXzvVK2MY5wA"/>
</xmi:XMI>
