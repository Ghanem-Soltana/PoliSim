<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_9zDxoZpAEeOXzvVK2MY5wA">
  <uml:Package xmi:id="_9yJKpZpAEeOXzvVK2MY5wA" name="TaxCard">
    <packageImport xmi:id="_9yJKpppAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_9yJKp5pAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_9yJKqJpAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_9zFiBppAEeOXzvVK2MY5wA"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJKqZpAEeOXzvVK2MY5wA" name="Tax_Card_Domain">
      <packageImport xmi:id="_9yJKqppAEeOXzvVK2MY5wA" importedPackage="_9yJvoJpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_9yJKq5pAEeOXzvVK2MY5wA" importedPackage="_9yJKsJpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_9yJKrJpAEeOXzvVK2MY5wA" importedPackage="_9yJvippAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_9yJKrZpAEeOXzvVK2MY5wA" importedPackage="_9yJuDppAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_9yJKrppAEeOXzvVK2MY5wA" importedPackage="_9yJuTppAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_9yJKr5pAEeOXzvVK2MY5wA" importedPackage="_9yJvPJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJKsJpAEeOXzvVK2MY5wA" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJKsZpAEeOXzvVK2MY5wA" name="taxed under" memberEnd="_9yJLYJpAEeOXzvVK2MY5wA _9yJt_5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJKsppAEeOXzvVK2MY5wA" name="Income_Tax">
        <ownedAttribute xmi:id="_9yJKs5pAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJt_JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJKtJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJKtZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKtppAEeOXzvVK2MY5wA" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKt5pAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJKuJpAEeOXzvVK2MY5wA" name="Address">
        <ownedAttribute xmi:id="_9yJKuZpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_9yJLBppAEeOXzvVK2MY5wA" association="_9yJt85pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJKuppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJKu5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKvJpAEeOXzvVK2MY5wA" name="country" visibility="public" type="_9yJu1JpAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_9yJKvZpAEeOXzvVK2MY5wA" name="LU" type="_9yJu1JpAEeOXzvVK2MY5wA" instance="_9yJu1ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKvppAEeOXzvVK2MY5wA" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKv5pAEeOXzvVK2MY5wA" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKwJpAEeOXzvVK2MY5wA" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJKwZpAEeOXzvVK2MY5wA" name="Dependent">
        <generalization xmi:id="_9yJKwppAEeOXzvVK2MY5wA" general="_9yJLBppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJKw5pAEeOXzvVK2MY5wA" name="dependent_type" visibility="public" type="_9yJu-ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJKxJpAEeOXzvVK2MY5wA" name="household" visibility="private" type="_9yJK7ZpAEeOXzvVK2MY5wA" association="_9yJt-ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJKxZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJKxppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKx5pAEeOXzvVK2MY5wA" name="responsible_person" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJt-ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJKyJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJKyZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKyppAEeOXzvVK2MY5wA" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJKy5pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKzJpAEeOXzvVK2MY5wA" name="expense" visibility="private" type="_9yJuu5pAEeOXzvVK2MY5wA" association="_9yJt-5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJKzZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJKzppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJKz5pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJt-JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK0JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK0ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJK0ppAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_9yJK05pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJK1JpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJK1ZpAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_9yJK1ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJK15pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJK2JpAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_9yJK2ZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJK2ppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJK25pAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_9yJK3ZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJK3JpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJK3ZpAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" constrainedElement="_9yJK25pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJK3ppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJK35pAEeOXzvVK2MY5wA" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJK4JpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJK4ZpAEeOXzvVK2MY5wA" name="External_Allowance">
        <ownedAttribute xmi:id="_9yJK4ppAEeOXzvVK2MY5wA" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK45pAEeOXzvVK2MY5wA" name="grantor" visibility="public" type="_9yJuzJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJK5JpAEeOXzvVK2MY5wA" name="person" visibility="private" type="_9yJLBppAEeOXzvVK2MY5wA" association="_9yJt9JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK5ZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK5ppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK55pAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK6JpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJK6ZpAEeOXzvVK2MY5wA" name="Fiscal_Address">
        <generalization xmi:id="_9yJK6ppAEeOXzvVK2MY5wA" general="_9yJKuJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJK65pAEeOXzvVK2MY5wA" name="Habitual_Address">
        <generalization xmi:id="_9yJK7JpAEeOXzvVK2MY5wA" general="_9yJKuJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJK7ZpAEeOXzvVK2MY5wA" name="Household">
        <ownedAttribute xmi:id="_9yJK7ppAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJt95pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK75pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK8JpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK8ZpAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_9yJKwZpAEeOXzvVK2MY5wA" association="_9yJt-ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK8ppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK85pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJK9JpAEeOXzvVK2MY5wA" name="Legal_Union_Record">
        <ownedComment xmi:id="_9yJK9ZpAEeOXzvVK2MY5wA" annotatedElement="_9yJK9JpAEeOXzvVK2MY5wA">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_9yJK9ppAEeOXzvVK2MY5wA" name="Legal_Union-different_people-constraint" constrainedElement="_9yJK9JpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJK95pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_9yJK-JpAEeOXzvVK2MY5wA" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK-ZpAEeOXzvVK2MY5wA" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK-ppAEeOXzvVK2MY5wA" name="individual_A" visibility="private" type="_9yJLBppAEeOXzvVK2MY5wA" association="_9yJt9ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK-5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK_JpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJK_ZpAEeOXzvVK2MY5wA" name="individual_B" visibility="private" type="_9yJLBppAEeOXzvVK2MY5wA" association="_9yJt9ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJK_ppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJK_5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLAJpAEeOXzvVK2MY5wA" name="Marriage_Record">
        <generalization xmi:id="_9yJLAZpAEeOXzvVK2MY5wA" general="_9yJK9JpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLAppAEeOXzvVK2MY5wA" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_9yJLA5pAEeOXzvVK2MY5wA" general="_9yJLLZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLBJpAEeOXzvVK2MY5wA" name="Partnership_Record">
        <generalization xmi:id="_9yJLBZpAEeOXzvVK2MY5wA" general="_9yJK9JpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLBppAEeOXzvVK2MY5wA" name="Physical_Person">
        <ownedAttribute xmi:id="_9yJLB5pAEeOXzvVK2MY5wA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLCJpAEeOXzvVK2MY5wA" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLCZpAEeOXzvVK2MY5wA" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLCppAEeOXzvVK2MY5wA" name="allowances" visibility="private" type="_9yJK4ZpAEeOXzvVK2MY5wA" association="_9yJt9JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLC5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLDJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLDZpAEeOXzvVK2MY5wA" name="addresses" visibility="private" type="_9yJKuJpAEeOXzvVK2MY5wA" association="_9yJt85pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLDppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLD5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLEJpAEeOXzvVK2MY5wA" name="legal_union_A" visibility="private" type="_9yJK9JpAEeOXzvVK2MY5wA" association="_9yJt9ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLEZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLEppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLE5pAEeOXzvVK2MY5wA" name="legal_union_B" visibility="private" type="_9yJK9JpAEeOXzvVK2MY5wA" association="_9yJt9ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLFJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLFZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLFppAEeOXzvVK2MY5wA" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLF5pAEeOXzvVK2MY5wA" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLGJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLGZpAEeOXzvVK2MY5wA" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJLGppAEeOXzvVK2MY5wA" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_9yJLG5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9yJLHJpAEeOXzvVK2MY5wA" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9yJLHZpAEeOXzvVK2MY5wA" name="IN_person" type="_9yJLBppAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_9yJLHppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJLH5pAEeOXzvVK2MY5wA" name="is_person_assisting_spouse" isQuery="true" postcondition="_9yJLIZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJLIJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJLIZpAEeOXzvVK2MY5wA" name="is_assisting_spouse" constrainedElement="_9yJLH5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLIppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJLI5pAEeOXzvVK2MY5wA" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJLJJpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJLJZpAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_9yJLJ5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJLJppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJLJ5pAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_9yJLJZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLKJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJLKZpAEeOXzvVK2MY5wA" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJLKppAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLK5pAEeOXzvVK2MY5wA" name="Resident_Tax_Payer">
        <generalization xmi:id="_9yJLLJpAEeOXzvVK2MY5wA" general="_9yJLLZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJLLZpAEeOXzvVK2MY5wA" name="Tax_Payer">
        <ownedRule xmi:id="_9yJLLppAEeOXzvVK2MY5wA" name="NonResidentTaxPayer-constraint" constrainedElement="_9yJLAppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLL5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLMJpAEeOXzvVK2MY5wA" name="ResidentTaxPayer-constraint" constrainedElement="_9yJLK5pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLMZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLMppAEeOXzvVK2MY5wA" name="SubjectToIncomeTax-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLM5pAEeOXzvVK2MY5wA" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLNJpAEeOXzvVK2MY5wA" name="TaxCredit-CIS-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLNZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLNppAEeOXzvVK2MY5wA" name="TaxCredit-CIP-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLN5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLOJpAEeOXzvVK2MY5wA" name="TaxCredit-CIM-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLOZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLOppAEeOXzvVK2MY5wA" name="Legal_Union-monogamus-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLO5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLPJpAEeOXzvVK2MY5wA" name="TaxClass-unique-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLPZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLPppAEeOXzvVK2MY5wA" name="TaxDeduction-CE-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLP5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLQJpAEeOXzvVK2MY5wA" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLQZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLQppAEeOXzvVK2MY5wA" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLQ5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLRJpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLRZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLRppAEeOXzvVK2MY5wA" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLR5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLSJpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLSZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLSppAEeOXzvVK2MY5wA" name="TaxDeduction-DS-5-donation" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLS5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLTJpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLTZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLTppAEeOXzvVK2MY5wA" name="TaxCard-unique-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLT5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLUJpAEeOXzvVK2MY5wA" name="TaxDeduction-FD-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLUZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLUppAEeOXzvVK2MY5wA" name="TaxDeduction-FO-constraint" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLU5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJLVJpAEeOXzvVK2MY5wA" name="test_for_iterate" constrainedElement="_9yJLLZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJLVZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_9yJLVppAEeOXzvVK2MY5wA" general="_9yJLBppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJLV5pAEeOXzvVK2MY5wA" name="incomes" visibility="private" type="_9yJuL5pAEeOXzvVK2MY5wA" association="_9yJu05pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLWJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLWZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLWppAEeOXzvVK2MY5wA" name="incomeTax" visibility="private" type="_9yJKsppAEeOXzvVK2MY5wA" association="_9yJt_JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLW5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLXJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLXZpAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_9yJvkZpAEeOXzvVK2MY5wA" association="_9yJu25pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLXppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLX5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLYJpAEeOXzvVK2MY5wA" name="tax_class" visibility="private" type="_9yJt_ZpAEeOXzvVK2MY5wA" association="_9yJKsZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLYZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLYppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLY5pAEeOXzvVK2MY5wA" name="household" visibility="private" type="_9yJK7ZpAEeOXzvVK2MY5wA" association="_9yJt95pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLZJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLZZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLZppAEeOXzvVK2MY5wA" name="dependents" visibility="private" type="_9yJKwZpAEeOXzvVK2MY5wA" association="_9yJt-ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLZ5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLaJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLaZpAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_9yJwB5pAEeOXzvVK2MY5wA" association="_9yJu_5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLappAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLa5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLbJpAEeOXzvVK2MY5wA" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJLbZpAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_9yJuu5pAEeOXzvVK2MY5wA" association="_9yJvAJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJLbppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJLb5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJt4JpAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_9yJKwZpAEeOXzvVK2MY5wA" association="_9yJt-JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJt4ZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJt4ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJt45pAEeOXzvVK2MY5wA" name="tax_Card" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" aggregation="shared" association="_9yJt8ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJt5JpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJt5ZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJt5ppAEeOXzvVK2MY5wA" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJt55pAEeOXzvVK2MY5wA" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_9yJt6ZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJt6JpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJt6ZpAEeOXzvVK2MY5wA" name="is_child_part_of_household" constrainedElement="_9yJt55pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJt6ppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJt65pAEeOXzvVK2MY5wA" name="IN_dependent" type="_9yJKwZpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_9yJt7JpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJt7ZpAEeOXzvVK2MY5wA" name="number_of_months_of_allowance" isQuery="true" postcondition="_9yJt75pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJt7ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJt75pAEeOXzvVK2MY5wA" name="number_od_months_of_allowance" constrainedElement="_9yJt7ZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJt8JpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJt8ZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt8ppAEeOXzvVK2MY5wA" name="" memberEnd="_9yJt45pAEeOXzvVK2MY5wA _9yJveJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt85pAEeOXzvVK2MY5wA" name="located at" memberEnd="_9yJLDZpAEeOXzvVK2MY5wA _9yJKuZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt9JpAEeOXzvVK2MY5wA" name="receives" memberEnd="_9yJLCppAEeOXzvVK2MY5wA _9yJK5JpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt9ZpAEeOXzvVK2MY5wA" name="person B" memberEnd="_9yJK_ZpAEeOXzvVK2MY5wA _9yJLE5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt9ppAEeOXzvVK2MY5wA" name="person A" memberEnd="_9yJK-ppAEeOXzvVK2MY5wA _9yJLEJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt95pAEeOXzvVK2MY5wA" name="maintains" memberEnd="_9yJLY5pAEeOXzvVK2MY5wA _9yJK7ppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt-JpAEeOXzvVK2MY5wA" name="as tax payer" memberEnd="_9yJKz5pAEeOXzvVK2MY5wA _9yJt4JpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt-ZpAEeOXzvVK2MY5wA" name="supports" memberEnd="_9yJLZppAEeOXzvVK2MY5wA _9yJKx5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt-ppAEeOXzvVK2MY5wA" name="is part of" memberEnd="_9yJKxJpAEeOXzvVK2MY5wA _9yJK8ZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt-5pAEeOXzvVK2MY5wA" name="incurred over" memberEnd="_9yJuwppAEeOXzvVK2MY5wA _9yJKzJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJt_JpAEeOXzvVK2MY5wA" name="is subject to" memberEnd="_9yJLWppAEeOXzvVK2MY5wA _9yJKs5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJt_ZpAEeOXzvVK2MY5wA" name="Tax_Class">
        <ownedAttribute xmi:id="_9yJt_ppAEeOXzvVK2MY5wA" name="tax_class" visibility="public" type="_9yJu7ppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJt_5pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJKsZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuAJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuAZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuAppAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuA5pAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuBJpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJu_ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuBZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuBppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuB5pAEeOXzvVK2MY5wA" name="current_tax_class" visibility="private" type="_9yJt_ZpAEeOXzvVK2MY5wA" association="_9yJuDZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuCJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuCZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuCppAEeOXzvVK2MY5wA" name="prev" visibility="private" type="_9yJt_ZpAEeOXzvVK2MY5wA" association="_9yJuDZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuC5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuDJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJuDZpAEeOXzvVK2MY5wA" name="replaced by" memberEnd="_9yJuB5pAEeOXzvVK2MY5wA _9yJuCppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJuDppAEeOXzvVK2MY5wA" name="Income_Concepts">
      <ownedComment xmi:id="_9yJuD5pAEeOXzvVK2MY5wA" annotatedElement="_9yJuKZpAEeOXzvVK2MY5wA">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuEJpAEeOXzvVK2MY5wA" name="Income_Type">
        <ownedAttribute xmi:id="_9yJuEZpAEeOXzvVK2MY5wA" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_9yJuEppAEeOXzvVK2MY5wA" annotatedElement="_9yJuEZpAEeOXzvVK2MY5wA">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuE5pAEeOXzvVK2MY5wA" name="income" visibility="private" type="_9yJuL5pAEeOXzvVK2MY5wA" association="_9yJuKppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuFJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuFZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuFppAEeOXzvVK2MY5wA" name="Trade_and_Business_Income">
        <generalization xmi:id="_9yJuF5pAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuGJpAEeOXzvVK2MY5wA" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_9yJuGZpAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuGppAEeOXzvVK2MY5wA" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_9yJuG5pAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuHJpAEeOXzvVK2MY5wA" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_9yJuHZpAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJuHppAEeOXzvVK2MY5wA" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJuH5pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuIJpAEeOXzvVK2MY5wA" name="Capital_and_Investments_Income">
        <generalization xmi:id="_9yJuIZpAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuIppAEeOXzvVK2MY5wA" name="Employment_Income">
        <generalization xmi:id="_9yJuI5pAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuJJpAEeOXzvVK2MY5wA" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_9yJuJZpAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuJppAEeOXzvVK2MY5wA" name="Sundry_Income">
        <generalization xmi:id="_9yJuJ5pAEeOXzvVK2MY5wA" general="_9yJuEJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuKJpAEeOXzvVK2MY5wA" name="Directors_Fee">
        <generalization xmi:id="_9yJuKZpAEeOXzvVK2MY5wA" general="_9yJuGppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJuKppAEeOXzvVK2MY5wA" name="has as type" memberEnd="_9yJuPppAEeOXzvVK2MY5wA _9yJuE5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuK5pAEeOXzvVK2MY5wA" name="Foreign_Income">
        <generalization xmi:id="_9yJuLJpAEeOXzvVK2MY5wA" general="_9yJuL5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuLZpAEeOXzvVK2MY5wA" name="Local_Income">
        <generalization xmi:id="_9yJuLppAEeOXzvVK2MY5wA" general="_9yJuL5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuL5pAEeOXzvVK2MY5wA" name="Income">
        <ownedRule xmi:id="_9yJuMJpAEeOXzvVK2MY5wA" name="Tax_Deduction_FD-constraint" constrainedElement="_9yJuL5pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuMZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJuMppAEeOXzvVK2MY5wA" name="Tax_Deduction_FO-constraint" constrainedElement="_9yJuL5pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuM5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_9yJuNJpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJu05pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuNZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuNppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuN5pAEeOXzvVK2MY5wA" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuOJpAEeOXzvVK2MY5wA" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuOZpAEeOXzvVK2MY5wA" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuOppAEeOXzvVK2MY5wA" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuO5pAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJu-JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuPJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuPZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuPppAEeOXzvVK2MY5wA" name="income_type" visibility="private" type="_9yJuEJpAEeOXzvVK2MY5wA" association="_9yJuKppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuP5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuQJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuQZpAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_9yJuu5pAEeOXzvVK2MY5wA" association="_9yJuuppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuQppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuQ5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuRJpAEeOXzvVK2MY5wA" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJuRZpAEeOXzvVK2MY5wA" name="compute_duration_of_contract" isQuery="true" postcondition="_9yJuR5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJuRppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJuR5pAEeOXzvVK2MY5wA" name="get_duration" constrainedElement="_9yJuRZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuSJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJuSZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJuSppAEeOXzvVK2MY5wA" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_9yJuS5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJuTJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJuTZpAEeOXzvVK2MY5wA" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJuTppAEeOXzvVK2MY5wA" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuT5pAEeOXzvVK2MY5wA" name="Permanent_Expense">
        <generalization xmi:id="_9yJuUJpAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJuUZpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_9yJurZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJuUppAEeOXzvVK2MY5wA" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJuU5pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJuVJpAEeOXzvVK2MY5wA" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_9yJuVppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJuVZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJuVppAEeOXzvVK2MY5wA" name="is_eligible" constrainedElement="_9yJuVJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuV5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJuWJpAEeOXzvVK2MY5wA" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJuWZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuWppAEeOXzvVK2MY5wA" name="Interest_Expense">
        <generalization xmi:id="_9yJuW5pAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuXJpAEeOXzvVK2MY5wA" name="Special_Expense_DS">
        <generalization xmi:id="_9yJuXZpAEeOXzvVK2MY5wA" general="_9yJuu5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuXppAEeOXzvVK2MY5wA" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_9yJuX5pAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJuYJpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_9yJusJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJuYZpAEeOXzvVK2MY5wA" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuYppAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_9yJuY5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJuZJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJuZZpAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_9yJuZ5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJuZppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJuZ5pAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_9yJuZZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuaJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJuaZpAEeOXzvVK2MY5wA" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuappAEeOXzvVK2MY5wA" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_9yJua5pAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJubJpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_9yJutppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJubZpAEeOXzvVK2MY5wA" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJubppAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJub5pAEeOXzvVK2MY5wA" name="Donation">
        <generalization xmi:id="_9yJucJpAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJucZpAEeOXzvVK2MY5wA" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJucppAEeOXzvVK2MY5wA" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJuc5pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJudJpAEeOXzvVK2MY5wA" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJudZpAEeOXzvVK2MY5wA" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_9yJud5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJudppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJud5pAEeOXzvVK2MY5wA" name="is_leagaly_approved_beneficiary" constrainedElement="_9yJudZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJueJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJueZpAEeOXzvVK2MY5wA" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJueppAEeOXzvVK2MY5wA" name="Loss_Carryforward">
        <ownedRule xmi:id="_9yJue5pAEeOXzvVK2MY5wA" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_9yJueppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJufJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_9yJufZpAEeOXzvVK2MY5wA" general="_9yJuXJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJufppAEeOXzvVK2MY5wA" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuf5pAEeOXzvVK2MY5wA" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJugJpAEeOXzvVK2MY5wA" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJugZpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJugppAEeOXzvVK2MY5wA" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_9yJug5pAEeOXzvVK2MY5wA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJuhJpAEeOXzvVK2MY5wA" name="is_accountability_regular" isQuery="true" postcondition="_9yJuhppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJuhZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJuhppAEeOXzvVK2MY5wA" name="is_accounatbility_regular" constrainedElement="_9yJuhJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJuh5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJuiJpAEeOXzvVK2MY5wA" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJuiZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJuippAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" isQuery="true" postcondition="_9yJujJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJui5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJujJpAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" constrainedElement="_9yJuippAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJujZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJujppAEeOXzvVK2MY5wA" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJuj5pAEeOXzvVK2MY5wA" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_9yJukZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJukJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJukZpAEeOXzvVK2MY5wA" name="partner_in_business" constrainedElement="_9yJuj5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJukppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJuk5pAEeOXzvVK2MY5wA" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJulJpAEeOXzvVK2MY5wA" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_9yJulppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJulZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJulppAEeOXzvVK2MY5wA" name="inherited_business_ownership" constrainedElement="_9yJulJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJul5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJumJpAEeOXzvVK2MY5wA" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJumZpAEeOXzvVK2MY5wA" name="Spousal_Expense_AC">
        <generalization xmi:id="_9yJumppAEeOXzvVK2MY5wA" general="_9yJuu5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJum5pAEeOXzvVK2MY5wA" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_9yJunJpAEeOXzvVK2MY5wA" general="_9yJuu5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJunZpAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJunppAEeOXzvVK2MY5wA" name="ce_type" visibility="public" type="_9yJvBJpAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_9yJun5pAEeOXzvVK2MY5wA" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_9yJuoJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJuoZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJuoppAEeOXzvVK2MY5wA" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_9yJupJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJuo5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJupJpAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" constrainedElement="_9yJuoppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJupZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJupppAEeOXzvVK2MY5wA" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJup5pAEeOXzvVK2MY5wA" name="Travel_Expense_FD">
        <generalization xmi:id="_9yJuqJpAEeOXzvVK2MY5wA" general="_9yJuq5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuqZpAEeOXzvVK2MY5wA" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_9yJuqppAEeOXzvVK2MY5wA" general="_9yJuq5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuq5pAEeOXzvVK2MY5wA" name="Professional_Expense">
        <generalization xmi:id="_9yJurJpAEeOXzvVK2MY5wA" general="_9yJuu5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJurZpAEeOXzvVK2MY5wA" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_9yJurppAEeOXzvVK2MY5wA" name="MISCELLANEOUS_DEBT" classifier="_9yJurZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJur5pAEeOXzvVK2MY5wA" name="ALIMONY" classifier="_9yJurZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJusJpAEeOXzvVK2MY5wA" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_9yJusZpAEeOXzvVK2MY5wA" name="PRIVATE_INSURANCE" classifier="_9yJusJpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJusppAEeOXzvVK2MY5wA" name="PRIVATE_LIFE_INSURANCE" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJus5pAEeOXzvVK2MY5wA" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_9yJusJpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJutJpAEeOXzvVK2MY5wA" name="HOUSING_SAVING_PLAN" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJutZpAEeOXzvVK2MY5wA" name="OLD_AGE_PENSION_PLAN" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJutppAEeOXzvVK2MY5wA" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_9yJut5pAEeOXzvVK2MY5wA" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJuuJpAEeOXzvVK2MY5wA" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_9yJuuZpAEeOXzvVK2MY5wA" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_9yJutppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJuuppAEeOXzvVK2MY5wA" name="influences" memberEnd="_9yJuxppAEeOXzvVK2MY5wA _9yJuQZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJuu5pAEeOXzvVK2MY5wA" name="Expense">
        <ownedAttribute xmi:id="_9yJuvJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJvAJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuvZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuvppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuv5pAEeOXzvVK2MY5wA" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuwJpAEeOXzvVK2MY5wA" name="expense_purpose" visibility="public" type="_9yJvCJpAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_9yJuwZpAEeOXzvVK2MY5wA" name="OTHER" type="_9yJvCJpAEeOXzvVK2MY5wA" instance="_9yJvDJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuwppAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_9yJKwZpAEeOXzvVK2MY5wA" association="_9yJt-5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuw5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuxJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuxZpAEeOXzvVK2MY5wA" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuxppAEeOXzvVK2MY5wA" name="income" visibility="private" type="_9yJuL5pAEeOXzvVK2MY5wA" association="_9yJuuppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJux5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuyJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJuyZpAEeOXzvVK2MY5wA" name="deduction" visibility="private" type="_9yJwB5pAEeOXzvVK2MY5wA" association="_9yJwFppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJuyppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJuy5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJuzJpAEeOXzvVK2MY5wA" name="Grantor">
      <ownedLiteral xmi:id="_9yJuzZpAEeOXzvVK2MY5wA" name="ACD" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJuzppAEeOXzvVK2MY5wA" name="Employer" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJuz5pAEeOXzvVK2MY5wA" name="CNPF" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu0JpAEeOXzvVK2MY5wA" name="CEDIES" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu0ZpAEeOXzvVK2MY5wA" name="SNJ" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu0ppAEeOXzvVK2MY5wA" name="CNAP" classifier="_9yJuzJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJu05pAEeOXzvVK2MY5wA" name="earns" memberEnd="_9yJLV5pAEeOXzvVK2MY5wA _9yJuNJpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu1JpAEeOXzvVK2MY5wA" name="Country">
      <ownedLiteral xmi:id="_9yJu1ZpAEeOXzvVK2MY5wA" name="LU" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu1ppAEeOXzvVK2MY5wA" name="FR" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu15pAEeOXzvVK2MY5wA" name="BE" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu2JpAEeOXzvVK2MY5wA" name="DE" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu2ZpAEeOXzvVK2MY5wA" name="NL" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu2ppAEeOXzvVK2MY5wA" name="OTHER" classifier="_9yJu1JpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJu25pAEeOXzvVK2MY5wA" name="credited for" memberEnd="_9yJLXZpAEeOXzvVK2MY5wA _9yJvk5pAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_9yJu3JpAEeOXzvVK2MY5wA" name="Date">
      <ownedAttribute xmi:id="_9yJu3ZpAEeOXzvVK2MY5wA" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJu3ppAEeOXzvVK2MY5wA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJu35pAEeOXzvVK2MY5wA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9yJu4JpAEeOXzvVK2MY5wA" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9yJu4ZpAEeOXzvVK2MY5wA" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu4ppAEeOXzvVK2MY5wA" name="Job_Activity">
      <ownedLiteral xmi:id="_9yJu45pAEeOXzvVK2MY5wA" name="Salary" classifier="_9yJu4ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu5JpAEeOXzvVK2MY5wA" name="Pension" classifier="_9yJu4ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu5ZpAEeOXzvVK2MY5wA" name="Annuity" classifier="_9yJu4ppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu5ppAEeOXzvVK2MY5wA" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_9yJu55pAEeOXzvVK2MY5wA" name="Principal" classifier="_9yJu5ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu6JpAEeOXzvVK2MY5wA" name="Additional" classifier="_9yJu5ppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu6ZpAEeOXzvVK2MY5wA" name="Tax_Office">
      <ownedLiteral xmi:id="_9yJu6ppAEeOXzvVK2MY5wA" name="RTS_2" classifier="_9yJu6ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu65pAEeOXzvVK2MY5wA" name="RTS_3" classifier="_9yJu6ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu7JpAEeOXzvVK2MY5wA" name="RTS_Esch" classifier="_9yJu6ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu7ZpAEeOXzvVK2MY5wA" name="RTS_Ettelbruck" classifier="_9yJu6ZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu7ppAEeOXzvVK2MY5wA" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_9yJu75pAEeOXzvVK2MY5wA" name="One" classifier="_9yJu7ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu8JpAEeOXzvVK2MY5wA" name="One_A" classifier="_9yJu7ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu8ZpAEeOXzvVK2MY5wA" name="Two" classifier="_9yJu7ppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu8ppAEeOXzvVK2MY5wA" name="Town">
      <ownedLiteral xmi:id="_9yJu85pAEeOXzvVK2MY5wA" name="Luxembourg_city" classifier="_9yJu8ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu9JpAEeOXzvVK2MY5wA" name="Bertrange" classifier="_9yJu8ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu9ZpAEeOXzvVK2MY5wA" name="Strassen" classifier="_9yJu8ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu9ppAEeOXzvVK2MY5wA" name="Bettembourg" classifier="_9yJu8ppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu95pAEeOXzvVK2MY5wA" name="Beaufort" classifier="_9yJu8ppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJu-JpAEeOXzvVK2MY5wA" name="linked to" memberEnd="_9yJuO5pAEeOXzvVK2MY5wA _9yJvUppAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJu-ZpAEeOXzvVK2MY5wA" name="Dependent_Type">
      <ownedLiteral xmi:id="_9yJu-ppAEeOXzvVK2MY5wA" name="CHILD" classifier="_9yJu-ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu-5pAEeOXzvVK2MY5wA" name="SPOUSE" classifier="_9yJu-ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu_JpAEeOXzvVK2MY5wA" name="RELATIVE" classifier="_9yJu-ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJu_ZpAEeOXzvVK2MY5wA" name="OTHER_FAMILY_MEMBER" classifier="_9yJu-ZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJu_ppAEeOXzvVK2MY5wA" name="provides" memberEnd="_9yJvVZpAEeOXzvVK2MY5wA _9yJuBJpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJu_5pAEeOXzvVK2MY5wA" name="receives" memberEnd="_9yJLaZpAEeOXzvVK2MY5wA _9yJwDJpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_9yJvAJpAEeOXzvVK2MY5wA" name="declares" memberEnd="_9yJLbZpAEeOXzvVK2MY5wA _9yJuvJpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJvAZpAEeOXzvVK2MY5wA" name="Type_of_Rate">
      <ownedLiteral xmi:id="_9yJvAppAEeOXzvVK2MY5wA" name="REGULAR" classifier="_9yJvAZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvA5pAEeOXzvVK2MY5wA" name="REAL_COST" classifier="_9yJvAZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJvBJpAEeOXzvVK2MY5wA" name="CE_Type">
      <ownedLiteral xmi:id="_9yJvBZpAEeOXzvVK2MY5wA" name="INALIDITY_AND_INFIRMITY" classifier="_9yJvBJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvBppAEeOXzvVK2MY5wA" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_9yJvBJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvB5pAEeOXzvVK2MY5wA" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_9yJvBJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJvCJpAEeOXzvVK2MY5wA" name="Expense_Purpose">
      <ownedLiteral xmi:id="_9yJvCZpAEeOXzvVK2MY5wA" name="HOUSE_CARE" classifier="_9yJvCJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvCppAEeOXzvVK2MY5wA" name="CHILD_CARE" classifier="_9yJvCJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvC5pAEeOXzvVK2MY5wA" name="DEPENDENCE_CARE" classifier="_9yJvCJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvDJpAEeOXzvVK2MY5wA" name="OTHER" classifier="_9yJvCJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_9yJvDZpAEeOXzvVK2MY5wA" name="Constants">
      <ownedLiteral xmi:id="_9yJvDppAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvD5pAEeOXzvVK2MY5wA" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvEJpAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvEZpAEeOXzvVK2MY5wA" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvEppAEeOXzvVK2MY5wA" name="MINIMUM_SALARY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvE5pAEeOXzvVK2MY5wA" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvFJpAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvFZpAEeOXzvVK2MY5wA" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvFppAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvF5pAEeOXzvVK2MY5wA" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvGJpAEeOXzvVK2MY5wA" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvGZpAEeOXzvVK2MY5wA" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvGppAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvG5pAEeOXzvVK2MY5wA"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvHJpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvHZpAEeOXzvVK2MY5wA" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvHppAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvH5pAEeOXzvVK2MY5wA" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvIJpAEeOXzvVK2MY5wA" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvIZpAEeOXzvVK2MY5wA" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvIppAEeOXzvVK2MY5wA" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvI5pAEeOXzvVK2MY5wA" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvJJpAEeOXzvVK2MY5wA" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvJZpAEeOXzvVK2MY5wA" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvJppAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_DAILY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvJ5pAEeOXzvVK2MY5wA" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvKJpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_MONTHLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvKZpAEeOXzvVK2MY5wA" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvKppAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_YEARLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvK5pAEeOXzvVK2MY5wA" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvLJpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_DAILY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvLZpAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvLppAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_MONTHLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvL5pAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvMJpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_YEARLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvMZpAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvMppAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_DAILY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvM5pAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvNJpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_MONTHLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvNZpAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvNppAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_YEARLY" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvN5pAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvOJpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_9yJvDZpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_9yJvOZpAEeOXzvVK2MY5wA" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_9yJvOppAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_9yJvDZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_9yJvO5pAEeOXzvVK2MY5wA" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_9yJvDZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJvPJpAEeOXzvVK2MY5wA" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvPZpAEeOXzvVK2MY5wA" name="Tax_Card">
        <ownedRule xmi:id="_9yJvPppAEeOXzvVK2MY5wA" name="SubjectToWithholdingTax-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvP5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvQJpAEeOXzvVK2MY5wA" name="Tax_Credits-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvQZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvQppAEeOXzvVK2MY5wA" name="Tax_Card_AC-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvQ5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvRJpAEeOXzvVK2MY5wA" name="Tax_Card_FD-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvRZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvRppAEeOXzvVK2MY5wA" name="Tax_Card_DS-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvR5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvSJpAEeOXzvVK2MY5wA" name="Tax_Card_CE-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvSZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_9yJvSppAEeOXzvVK2MY5wA" name="Tax_Card_FO-constraint" constrainedElement="_9yJvPZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvS5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_9yJvTJpAEeOXzvVK2MY5wA" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvTZpAEeOXzvVK2MY5wA" name="tax_card_type" visibility="public" type="_9yJu5ppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvTppAEeOXzvVK2MY5wA" name="tax_office" visibility="public" type="_9yJu6ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvT5pAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvUJpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_9zFih5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvUZpAEeOXzvVK2MY5wA" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvUppAEeOXzvVK2MY5wA" name="income" visibility="private" type="_9yJuL5pAEeOXzvVK2MY5wA" association="_9yJu-JpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvU5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvVJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvVZpAEeOXzvVK2MY5wA" name="tax_Class" visibility="private" type="_9yJt_ZpAEeOXzvVK2MY5wA" association="_9yJu_ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvVppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvV5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvWJpAEeOXzvVK2MY5wA" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvWZpAEeOXzvVK2MY5wA" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvWppAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvW5pAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvXJpAEeOXzvVK2MY5wA" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvXZpAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvXppAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvX5pAEeOXzvVK2MY5wA" name="tax_payers_address" visibility="public" type="_9yJKuJpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_9yJvYJpAEeOXzvVK2MY5wA" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvYZpAEeOXzvVK2MY5wA" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvYppAEeOXzvVK2MY5wA" name="jobs_activity_type" visibility="public" type="_9yJu4ppAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_9yJvY5pAEeOXzvVK2MY5wA" name="jobs_place_of_work" visibility="public" type="_9yJu8ppAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_9yJvZJpAEeOXzvVK2MY5wA" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvZZpAEeOXzvVK2MY5wA" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvZppAEeOXzvVK2MY5wA" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvZ5pAEeOXzvVK2MY5wA" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvaJpAEeOXzvVK2MY5wA" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvaZpAEeOXzvVK2MY5wA" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvappAEeOXzvVK2MY5wA" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJva5pAEeOXzvVK2MY5wA" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvbJpAEeOXzvVK2MY5wA" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvbZpAEeOXzvVK2MY5wA" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvbppAEeOXzvVK2MY5wA" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvb5pAEeOXzvVK2MY5wA" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvcJpAEeOXzvVK2MY5wA" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvcZpAEeOXzvVK2MY5wA" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvcppAEeOXzvVK2MY5wA" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvc5pAEeOXzvVK2MY5wA" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvdJpAEeOXzvVK2MY5wA" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvdZpAEeOXzvVK2MY5wA" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvdppAEeOXzvVK2MY5wA" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvd5pAEeOXzvVK2MY5wA" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJveJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJt8ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJveZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJveppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJve5pAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_9yJvkZpAEeOXzvVK2MY5wA" aggregation="shared" association="_9yJviJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvfJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvfZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvfppAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_9yJwB5pAEeOXzvVK2MY5wA" aggregation="shared" association="_9yJwBppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvf5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvgJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvgZpAEeOXzvVK2MY5wA" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvgppAEeOXzvVK2MY5wA" name="previous" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJviZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvg5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvhJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvhZpAEeOXzvVK2MY5wA" name="current_tax_card" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJviZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvhppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvh5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJviJpAEeOXzvVK2MY5wA" name="include" memberEnd="_9yJvnZpAEeOXzvVK2MY5wA _9yJve5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJviZpAEeOXzvVK2MY5wA" name="invalidated by" memberEnd="_9yJvgppAEeOXzvVK2MY5wA _9yJvhZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJvippAEeOXzvVK2MY5wA" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvi5pAEeOXzvVK2MY5wA" name="CIM">
        <generalization xmi:id="_9yJvjJpAEeOXzvVK2MY5wA" general="_9yJvkZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvjZpAEeOXzvVK2MY5wA" name="CIP">
        <generalization xmi:id="_9yJvjppAEeOXzvVK2MY5wA" general="_9yJvkZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvj5pAEeOXzvVK2MY5wA" name="CIS">
        <generalization xmi:id="_9yJvkJpAEeOXzvVK2MY5wA" general="_9yJvkZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvkZpAEeOXzvVK2MY5wA" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_9yJvkppAEeOXzvVK2MY5wA" name="grantedBy" visibility="public" type="_9yJuzJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvk5pAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJu25pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvlJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvlZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvlppAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvl5pAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvmJpAEeOXzvVK2MY5wA" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvmZpAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvmppAEeOXzvVK2MY5wA" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvm5pAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvnJpAEeOXzvVK2MY5wA" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvnZpAEeOXzvVK2MY5wA" name="taxation_Frame" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJviJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJvnppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJvn5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9yJvoJpAEeOXzvVK2MY5wA" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvoZpAEeOXzvVK2MY5wA" name="FD">
        <generalization xmi:id="_9yJvoppAEeOXzvVK2MY5wA" general="_9yJwAZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvo5pAEeOXzvVK2MY5wA" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvpJpAEeOXzvVK2MY5wA" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJvpZpAEeOXzvVK2MY5wA" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_9yJvpppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJvp5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvqJpAEeOXzvVK2MY5wA" name="FO">
        <generalization xmi:id="_9yJvqZpAEeOXzvVK2MY5wA" general="_9yJwAZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvqppAEeOXzvVK2MY5wA" name="rate_type_for_FO" visibility="public" type="_9yJvAZpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedOperation xmi:id="_9yJvq5pAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_9yJvrJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_9yJvrZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJvrppAEeOXzvVK2MY5wA" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_9yJvr5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9yJvsJpAEeOXzvVK2MY5wA" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9yJvsZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvsppAEeOXzvVK2MY5wA" name="CE">
        <eAnnotations xmi:id="_9yJvs5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_9yJvtJpAEeOXzvVK2MY5wA" general="_9yJwB5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvtZpAEeOXzvVK2MY5wA" name="ce_deduction_type" visibility="public" type="_9yJvBJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJvtppAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJvt5pAEeOXzvVK2MY5wA" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJvuJpAEeOXzvVK2MY5wA" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_9yJvuppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJvuZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJvuppAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" constrainedElement="_9yJvuJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvu5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJvvJpAEeOXzvVK2MY5wA" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJvvZpAEeOXzvVK2MY5wA" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_9yJvv5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJvvppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJvv5pAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" constrainedElement="_9yJvvZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvwJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJvwZpAEeOXzvVK2MY5wA" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJvwppAEeOXzvVK2MY5wA" name="AC">
        <generalization xmi:id="_9yJvw5pAEeOXzvVK2MY5wA" general="_9yJwB5pAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_9yJvxJpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" isQuery="true" postcondition="_9yJvxppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJvxZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJvxppAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" constrainedElement="_9yJvxJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvx5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJvyJpAEeOXzvVK2MY5wA" name="IN_income" type="_9yJuL5pAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_9yJvyZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJvyppAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_9yJvzJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJvy5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJvzJpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_9yJvyppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJvzZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJvzppAEeOXzvVK2MY5wA" name="IN_income" type="_9yJuL5pAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_9yJvz5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv0JpAEeOXzvVK2MY5wA" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_9yJv0ZpAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJv0ppAEeOXzvVK2MY5wA" name="permanent_expense_category" visibility="public" type="_9yJurZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv05pAEeOXzvVK2MY5wA" name="DS_for_Interest_Expense">
        <generalization xmi:id="_9yJv1JpAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_9yJv1ZpAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_9yJv15pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJv1ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJv15pAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_9yJv1ZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJv2JpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJv2ZpAEeOXzvVK2MY5wA" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJv2ppAEeOXzvVK2MY5wA" name="IN_children_with_allowances" type="_9yJKwZpAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJv25pAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJv3JpAEeOXzvVK2MY5wA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJv3ZpAEeOXzvVK2MY5wA" name="IN_legal_union" type="_9yJK9JpAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJv3ppAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJv35pAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv4JpAEeOXzvVK2MY5wA" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_9yJv4ZpAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJv4ppAEeOXzvVK2MY5wA" name="insurance_category" visibility="public" type="_9yJutppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv45pAEeOXzvVK2MY5wA" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_9yJv5JpAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJv5ZpAEeOXzvVK2MY5wA" name="private_insurance_and_plan_category" visibility="public" type="_9yJusJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJv5ppAEeOXzvVK2MY5wA" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJv55pAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJv6JpAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9yJv6ZpAEeOXzvVK2MY5wA" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_9yJv65pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJv6ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJv65pAEeOXzvVK2MY5wA" name="get_increase_for_life_insurance" constrainedElement="_9yJv6ZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJv7JpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJv7ZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJv7ppAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_9yJv8JpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJv75pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJv8JpAEeOXzvVK2MY5wA" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_9yJv7ppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJv8ZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_9yJv8ppAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_9yJv9JpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJv85pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJv9JpAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_9yJv8ppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJv9ZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv9ppAEeOXzvVK2MY5wA" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_9yJv95pAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJv-JpAEeOXzvVK2MY5wA" name="DS_for_Donation">
        <generalization xmi:id="_9yJv-ZpAEeOXzvVK2MY5wA" general="_9yJwA5pAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_9yJv-ppAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_9yJv_JpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_9yJv-5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_9yJv_JpAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_9yJv-ppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_9yJv_ZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_9yJv_ppAEeOXzvVK2MY5wA" name="IN_maximum_percentage" type="_9yJvDZpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_9yJv_5pAEeOXzvVK2MY5wA" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9yJwAJpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJwAZpAEeOXzvVK2MY5wA" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_9yJwAppAEeOXzvVK2MY5wA" general="_9yJwB5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJwA5pAEeOXzvVK2MY5wA" name="DS">
        <generalization xmi:id="_9yJwBJpAEeOXzvVK2MY5wA" general="_9yJwB5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_9yJwBZpAEeOXzvVK2MY5wA" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJwBppAEeOXzvVK2MY5wA" name="considers" memberEnd="_9yJwEJpAEeOXzvVK2MY5wA _9yJvfppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9yJwB5pAEeOXzvVK2MY5wA" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_9yJwCJpAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwCZpAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwCppAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwC5pAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwDJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_9yJLLZpAEeOXzvVK2MY5wA" association="_9yJu_5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJwDZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJwDppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwD5pAEeOXzvVK2MY5wA" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwEJpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_9yJvPZpAEeOXzvVK2MY5wA" association="_9yJwBppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJwEZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJwEppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9yJwE5pAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_9yJuu5pAEeOXzvVK2MY5wA" association="_9yJwFppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9yJwFJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9yJwFZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9yJwFppAEeOXzvVK2MY5wA" name="is computed based on" memberEnd="_9yJwE5pAEeOXzvVK2MY5wA _9yJuyZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <profileApplication xmi:id="_9yJwF5pAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_9yJwGJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_9yJwGZpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_9yJwGppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_9zDxoZpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_9zDxn5pAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_9yJwG5pAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_9yJwHJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_9zDHHppAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_9zDHHJpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_9yJwHZpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_9yJwHppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_9zDKS5pAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_9zDKSZpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_9yJwH5pAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_9yJwIJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_9zCfrJpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_9zCfqppAEeOXzvVK2MY5wA"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_9yJwIZpAEeOXzvVK2MY5wA" base_Comment="_9yJuEppAEeOXzvVK2MY5wA"/>
  <Default:Documentation xmi:id="_9yJwIppAEeOXzvVK2MY5wA" base_Comment="_9yJK9ZpAEeOXzvVK2MY5wA"/>
</xmi:XMI>
