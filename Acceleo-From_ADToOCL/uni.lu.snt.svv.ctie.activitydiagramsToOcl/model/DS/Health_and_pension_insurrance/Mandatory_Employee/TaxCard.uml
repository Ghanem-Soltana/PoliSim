<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_4vhjwZpAEeOXzvVK2MY5wA">
  <uml:Package xmi:id="_4vehPppAEeOXzvVK2MY5wA" name="TaxCard">
    <packageImport xmi:id="_4vehP5pAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_4vehQJpAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_4vehQZpAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_4vlMwZpAEeOXzvVK2MY5wA"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vehQppAEeOXzvVK2MY5wA" name="Tax_Card_Domain">
      <packageImport xmi:id="_4vehQ5pAEeOXzvVK2MY5wA" importedPackage="_4vfGu5pAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_4vehRJpAEeOXzvVK2MY5wA" importedPackage="_4vehSZpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_4vehRZpAEeOXzvVK2MY5wA" importedPackage="_4vfGpZpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_4vehRppAEeOXzvVK2MY5wA" importedPackage="_4veiN5pAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_4vehR5pAEeOXzvVK2MY5wA" importedPackage="_4vfFaZpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_4vehSJpAEeOXzvVK2MY5wA" importedPackage="_4vfGV5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vehSZpAEeOXzvVK2MY5wA" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_4vehSppAEeOXzvVK2MY5wA" name="taxed under" memberEnd="_4veh-ZpAEeOXzvVK2MY5wA _4veiKJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehS5pAEeOXzvVK2MY5wA" name="Income_Tax">
        <ownedAttribute xmi:id="_4vehTJpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4veiJZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehTZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehTppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehT5pAEeOXzvVK2MY5wA" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehUJpAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehUZpAEeOXzvVK2MY5wA" name="Address">
        <ownedAttribute xmi:id="_4vehUppAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_4vehn5pAEeOXzvVK2MY5wA" association="_4veiHJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehU5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehVJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehVZpAEeOXzvVK2MY5wA" name="country" visibility="public" type="_4vfF75pAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_4vehVppAEeOXzvVK2MY5wA" name="LU" type="_4vfF75pAEeOXzvVK2MY5wA" instance="_4vfF8JpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehV5pAEeOXzvVK2MY5wA" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehWJpAEeOXzvVK2MY5wA" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehWZpAEeOXzvVK2MY5wA" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehWppAEeOXzvVK2MY5wA" name="Dependent">
        <generalization xmi:id="_4vehW5pAEeOXzvVK2MY5wA" general="_4vehn5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vehXJpAEeOXzvVK2MY5wA" name="dependent_type" visibility="public" type="_4vfGFJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vehXZpAEeOXzvVK2MY5wA" name="household" visibility="private" type="_4vehhppAEeOXzvVK2MY5wA" association="_4veiI5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehXppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehX5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehYJpAEeOXzvVK2MY5wA" name="responsible_person" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4veiIppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehYZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehYppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehY5pAEeOXzvVK2MY5wA" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vehZJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehZZpAEeOXzvVK2MY5wA" name="expense" visibility="private" type="_4vfF1ppAEeOXzvVK2MY5wA" association="_4veiJJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehZppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehZ5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehaJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4veiIZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehaZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehappAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4veha5pAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_4vehbJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vehbZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vehbppAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_4vehb5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vehcJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vehcZpAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_4vehcppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vehc5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vehdJpAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_4vehdppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vehdZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vehdppAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" constrainedElement="_4vehdJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehd5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4veheJpAEeOXzvVK2MY5wA" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4veheZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veheppAEeOXzvVK2MY5wA" name="External_Allowance">
        <ownedAttribute xmi:id="_4vehe5pAEeOXzvVK2MY5wA" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehfJpAEeOXzvVK2MY5wA" name="grantor" visibility="public" type="_4vfF55pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vehfZpAEeOXzvVK2MY5wA" name="person" visibility="private" type="_4vehn5pAEeOXzvVK2MY5wA" association="_4veiHZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehfppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehf5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehgJpAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehgZpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehgppAEeOXzvVK2MY5wA" name="Fiscal_Address">
        <generalization xmi:id="_4vehg5pAEeOXzvVK2MY5wA" general="_4vehUZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehhJpAEeOXzvVK2MY5wA" name="Habitual_Address">
        <generalization xmi:id="_4vehhZpAEeOXzvVK2MY5wA" general="_4vehUZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehhppAEeOXzvVK2MY5wA" name="Household">
        <ownedAttribute xmi:id="_4vehh5pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4veiIJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehiJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehiZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehippAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_4vehWppAEeOXzvVK2MY5wA" association="_4veiI5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehi5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehjJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehjZpAEeOXzvVK2MY5wA" name="Legal_Union_Record">
        <ownedComment xmi:id="_4vehjppAEeOXzvVK2MY5wA" annotatedElement="_4vehjZpAEeOXzvVK2MY5wA">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_4vehj5pAEeOXzvVK2MY5wA" name="Legal_Union-different_people-constraint" constrainedElement="_4vehjZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehkJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_4vehkZpAEeOXzvVK2MY5wA" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehkppAEeOXzvVK2MY5wA" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehk5pAEeOXzvVK2MY5wA" name="individual_A" visibility="private" type="_4vehn5pAEeOXzvVK2MY5wA" association="_4veiH5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehlJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehlZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehlppAEeOXzvVK2MY5wA" name="individual_B" visibility="private" type="_4vehn5pAEeOXzvVK2MY5wA" association="_4veiHppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehl5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehmJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehmZpAEeOXzvVK2MY5wA" name="Marriage_Record">
        <generalization xmi:id="_4vehmppAEeOXzvVK2MY5wA" general="_4vehjZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehm5pAEeOXzvVK2MY5wA" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_4vehnJpAEeOXzvVK2MY5wA" general="_4vehxppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehnZpAEeOXzvVK2MY5wA" name="Partnership_Record">
        <generalization xmi:id="_4vehnppAEeOXzvVK2MY5wA" general="_4vehjZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehn5pAEeOXzvVK2MY5wA" name="Physical_Person">
        <ownedAttribute xmi:id="_4vehoJpAEeOXzvVK2MY5wA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehoZpAEeOXzvVK2MY5wA" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehoppAEeOXzvVK2MY5wA" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veho5pAEeOXzvVK2MY5wA" name="allowances" visibility="private" type="_4veheppAEeOXzvVK2MY5wA" association="_4veiHZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehpJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehpZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehpppAEeOXzvVK2MY5wA" name="addresses" visibility="private" type="_4vehUZpAEeOXzvVK2MY5wA" association="_4veiHJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehp5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehqJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehqZpAEeOXzvVK2MY5wA" name="legal_union_A" visibility="private" type="_4vehjZpAEeOXzvVK2MY5wA" association="_4veiH5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehqppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehq5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehrJpAEeOXzvVK2MY5wA" name="legal_union_B" visibility="private" type="_4vehjZpAEeOXzvVK2MY5wA" association="_4veiHppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vehrZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vehrppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehr5pAEeOXzvVK2MY5wA" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehsJpAEeOXzvVK2MY5wA" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_4vehsZpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vehsppAEeOXzvVK2MY5wA" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vehs5pAEeOXzvVK2MY5wA" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_4vehtJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_4vehtZpAEeOXzvVK2MY5wA" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_4vehtppAEeOXzvVK2MY5wA" name="IN_person" type="_4vehn5pAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_4veht5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vehuJpAEeOXzvVK2MY5wA" name="is_person_assisting_spouse" isQuery="true" postcondition="_4vehuppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vehuZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vehuppAEeOXzvVK2MY5wA" name="is_assisting_spouse" constrainedElement="_4vehuJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehu5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vehvJpAEeOXzvVK2MY5wA" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vehvZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vehvppAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_4vehwJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vehv5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vehwJpAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_4vehvppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehwZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vehwppAEeOXzvVK2MY5wA" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vehw5pAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehxJpAEeOXzvVK2MY5wA" name="Resident_Tax_Payer">
        <generalization xmi:id="_4vehxZpAEeOXzvVK2MY5wA" general="_4vehxppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vehxppAEeOXzvVK2MY5wA" name="Tax_Payer">
        <ownedRule xmi:id="_4vehx5pAEeOXzvVK2MY5wA" name="NonResidentTaxPayer-constraint" constrainedElement="_4vehm5pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehyJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vehyZpAEeOXzvVK2MY5wA" name="ResidentTaxPayer-constraint" constrainedElement="_4vehxJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehyppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vehy5pAEeOXzvVK2MY5wA" name="SubjectToIncomeTax-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehzJpAEeOXzvVK2MY5wA" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vehzZpAEeOXzvVK2MY5wA" name="TaxCredit-CIS-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vehzppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vehz5pAEeOXzvVK2MY5wA" name="TaxCredit-CIP-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh0JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh0ZpAEeOXzvVK2MY5wA" name="TaxCredit-CIM-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh0ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh05pAEeOXzvVK2MY5wA" name="Legal_Union-monogamus-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh1JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh1ZpAEeOXzvVK2MY5wA" name="TaxClass-unique-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh1ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh15pAEeOXzvVK2MY5wA" name="TaxDeduction-CE-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh2JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh2ZpAEeOXzvVK2MY5wA" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh2ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh25pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh3JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh3ZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh3ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh35pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh4JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh4ZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh4ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh45pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-5-donation" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh5JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh5ZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh5ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh55pAEeOXzvVK2MY5wA" name="TaxCard-unique-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh6JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh6ZpAEeOXzvVK2MY5wA" name="TaxDeduction-FD-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh6ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh65pAEeOXzvVK2MY5wA" name="TaxDeduction-FO-constraint" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh7JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4veh7ZpAEeOXzvVK2MY5wA" name="test_for_iterate" constrainedElement="_4vehxppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veh7ppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_4veh75pAEeOXzvVK2MY5wA" general="_4vehn5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4veh8JpAEeOXzvVK2MY5wA" name="incomes" visibility="private" type="_4vfFSppAEeOXzvVK2MY5wA" association="_4vfF7ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veh8ZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veh8ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veh85pAEeOXzvVK2MY5wA" name="incomeTax" visibility="private" type="_4vehS5pAEeOXzvVK2MY5wA" association="_4veiJZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veh9JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veh9ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veh9ppAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_4vfGrJpAEeOXzvVK2MY5wA" association="_4vfF9ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veh95pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veh-JpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veh-ZpAEeOXzvVK2MY5wA" name="tax_class" visibility="private" type="_4veiJppAEeOXzvVK2MY5wA" association="_4vehSppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veh-ppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veh-5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veh_JpAEeOXzvVK2MY5wA" name="household" visibility="private" type="_4vehhppAEeOXzvVK2MY5wA" association="_4veiIJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veh_ZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veh_ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veh_5pAEeOXzvVK2MY5wA" name="dependents" visibility="private" type="_4vehWppAEeOXzvVK2MY5wA" association="_4veiIppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiAJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiAZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiAppAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_4vfHIppAEeOXzvVK2MY5wA" association="_4vfGGppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiA5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiBJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiBZpAEeOXzvVK2MY5wA" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiBppAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_4vfF1ppAEeOXzvVK2MY5wA" association="_4vfGG5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiB5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiCJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiCZpAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_4vehWppAEeOXzvVK2MY5wA" association="_4veiIZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiCppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiC5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiDJpAEeOXzvVK2MY5wA" name="tax_Card" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" aggregation="shared" association="_4veiG5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiDZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiDppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiD5pAEeOXzvVK2MY5wA" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4veiEJpAEeOXzvVK2MY5wA" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_4veiEppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4veiEZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4veiEppAEeOXzvVK2MY5wA" name="is_child_part_of_household" constrainedElement="_4veiEJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veiE5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4veiFJpAEeOXzvVK2MY5wA" name="IN_dependent" type="_4vehWppAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_4veiFZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4veiFppAEeOXzvVK2MY5wA" name="number_of_months_of_allowance" isQuery="true" postcondition="_4veiGJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4veiF5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4veiGJpAEeOXzvVK2MY5wA" name="number_od_months_of_allowance" constrainedElement="_4veiFppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4veiGZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4veiGppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiG5pAEeOXzvVK2MY5wA" name="" memberEnd="_4veiDJpAEeOXzvVK2MY5wA _4vfGk5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiHJpAEeOXzvVK2MY5wA" name="located at" memberEnd="_4vehpppAEeOXzvVK2MY5wA _4vehUppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiHZpAEeOXzvVK2MY5wA" name="receives" memberEnd="_4veho5pAEeOXzvVK2MY5wA _4vehfZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiHppAEeOXzvVK2MY5wA" name="person B" memberEnd="_4vehlppAEeOXzvVK2MY5wA _4vehrJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiH5pAEeOXzvVK2MY5wA" name="person A" memberEnd="_4vehk5pAEeOXzvVK2MY5wA _4vehqZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiIJpAEeOXzvVK2MY5wA" name="maintains" memberEnd="_4veh_JpAEeOXzvVK2MY5wA _4vehh5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiIZpAEeOXzvVK2MY5wA" name="as tax payer" memberEnd="_4vehaJpAEeOXzvVK2MY5wA _4veiCZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiIppAEeOXzvVK2MY5wA" name="supports" memberEnd="_4veh_5pAEeOXzvVK2MY5wA _4vehYJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiI5pAEeOXzvVK2MY5wA" name="is part of" memberEnd="_4vehXZpAEeOXzvVK2MY5wA _4vehippAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiJJpAEeOXzvVK2MY5wA" name="incurred over" memberEnd="_4vfF3ZpAEeOXzvVK2MY5wA _4vehZZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiJZpAEeOXzvVK2MY5wA" name="is subject to" memberEnd="_4veh85pAEeOXzvVK2MY5wA _4vehTJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiJppAEeOXzvVK2MY5wA" name="Tax_Class">
        <ownedAttribute xmi:id="_4veiJ5pAEeOXzvVK2MY5wA" name="tax_class" visibility="public" type="_4vfGCZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4veiKJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4vehSppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiKZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiKppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiK5pAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiLJpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiLZpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfGGZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiLppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiL5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiMJpAEeOXzvVK2MY5wA" name="current_tax_class" visibility="private" type="_4veiJppAEeOXzvVK2MY5wA" association="_4veiNppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiMZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiMppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiM5pAEeOXzvVK2MY5wA" name="prev" visibility="private" type="_4veiJppAEeOXzvVK2MY5wA" association="_4veiNppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiNJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiNZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4veiNppAEeOXzvVK2MY5wA" name="replaced by" memberEnd="_4veiMJpAEeOXzvVK2MY5wA _4veiM5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4veiN5pAEeOXzvVK2MY5wA" name="Income_Concepts">
      <ownedComment xmi:id="_4veiOJpAEeOXzvVK2MY5wA" annotatedElement="_4vfFRJpAEeOXzvVK2MY5wA">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiOZpAEeOXzvVK2MY5wA" name="Income_Type">
        <ownedAttribute xmi:id="_4veiOppAEeOXzvVK2MY5wA" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_4veiO5pAEeOXzvVK2MY5wA" annotatedElement="_4veiOppAEeOXzvVK2MY5wA">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4veiPJpAEeOXzvVK2MY5wA" name="income" visibility="private" type="_4vfFSppAEeOXzvVK2MY5wA" association="_4vfFRZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4veiPZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4veiPppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiP5pAEeOXzvVK2MY5wA" name="Trade_and_Business_Income">
        <generalization xmi:id="_4veiQJpAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiQZpAEeOXzvVK2MY5wA" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_4veiQppAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiQ5pAEeOXzvVK2MY5wA" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_4veiRJpAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiRZpAEeOXzvVK2MY5wA" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_4veiRppAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4veiR5pAEeOXzvVK2MY5wA" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4veiSJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiSZpAEeOXzvVK2MY5wA" name="Capital_and_Investments_Income">
        <generalization xmi:id="_4veiSppAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiS5pAEeOXzvVK2MY5wA" name="Employment_Income">
        <generalization xmi:id="_4veiTJpAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4veiTZpAEeOXzvVK2MY5wA" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_4vfFQJpAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFQZpAEeOXzvVK2MY5wA" name="Sundry_Income">
        <generalization xmi:id="_4vfFQppAEeOXzvVK2MY5wA" general="_4veiOZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFQ5pAEeOXzvVK2MY5wA" name="Directors_Fee">
        <generalization xmi:id="_4vfFRJpAEeOXzvVK2MY5wA" general="_4veiQ5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfFRZpAEeOXzvVK2MY5wA" name="has as type" memberEnd="_4vfFWZpAEeOXzvVK2MY5wA _4veiPJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFRppAEeOXzvVK2MY5wA" name="Foreign_Income">
        <generalization xmi:id="_4vfFR5pAEeOXzvVK2MY5wA" general="_4vfFSppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFSJpAEeOXzvVK2MY5wA" name="Local_Income">
        <generalization xmi:id="_4vfFSZpAEeOXzvVK2MY5wA" general="_4vfFSppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFSppAEeOXzvVK2MY5wA" name="Income">
        <ownedRule xmi:id="_4vfFS5pAEeOXzvVK2MY5wA" name="Tax_Deduction_FD-constraint" constrainedElement="_4vfFSppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFTJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfFTZpAEeOXzvVK2MY5wA" name="Tax_Deduction_FO-constraint" constrainedElement="_4vfFSppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFTppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_4vfFT5pAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4vfF7ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfFUJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfFUZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFUppAEeOXzvVK2MY5wA" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFU5pAEeOXzvVK2MY5wA" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFVJpAEeOXzvVK2MY5wA" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFVZpAEeOXzvVK2MY5wA" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFVppAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfGE5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfFV5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfFWJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFWZpAEeOXzvVK2MY5wA" name="income_type" visibility="private" type="_4veiOZpAEeOXzvVK2MY5wA" association="_4vfFRZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfFWppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfFW5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFXJpAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_4vfF1ppAEeOXzvVK2MY5wA" association="_4vfF1ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfFXZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfFXppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFX5pAEeOXzvVK2MY5wA" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfFYJpAEeOXzvVK2MY5wA" name="compute_duration_of_contract" isQuery="true" postcondition="_4vfFYppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFYZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFYppAEeOXzvVK2MY5wA" name="get_duration" constrainedElement="_4vfFYJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFY5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFZJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfFZZpAEeOXzvVK2MY5wA" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_4vfFZppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vfFZ5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfFaJpAEeOXzvVK2MY5wA" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vfFaZpAEeOXzvVK2MY5wA" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFappAEeOXzvVK2MY5wA" name="Permanent_Expense">
        <generalization xmi:id="_4vfFa5pAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFbJpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_4vfFyJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFbZpAEeOXzvVK2MY5wA" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFbppAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfFb5pAEeOXzvVK2MY5wA" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_4vfFcZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFcJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFcZpAEeOXzvVK2MY5wA" name="is_eligible" constrainedElement="_4vfFb5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFcppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFc5pAEeOXzvVK2MY5wA" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfFdJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFdZpAEeOXzvVK2MY5wA" name="Interest_Expense">
        <generalization xmi:id="_4vfFdppAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFd5pAEeOXzvVK2MY5wA" name="Special_Expense_DS">
        <generalization xmi:id="_4vfFeJpAEeOXzvVK2MY5wA" general="_4vfF1ppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFeZpAEeOXzvVK2MY5wA" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_4vfFeppAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFe5pAEeOXzvVK2MY5wA" name="category" visibility="public" type="_4vfFy5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFfJpAEeOXzvVK2MY5wA" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFfZpAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_4vfFfppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFf5pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfFgJpAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_4vfFgppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFgZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFgppAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_4vfFgJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFg5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFhJpAEeOXzvVK2MY5wA" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFhZpAEeOXzvVK2MY5wA" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_4vfFhppAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFh5pAEeOXzvVK2MY5wA" name="category" visibility="public" type="_4vfF0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFiJpAEeOXzvVK2MY5wA" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFiZpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFippAEeOXzvVK2MY5wA" name="Donation">
        <generalization xmi:id="_4vfFi5pAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFjJpAEeOXzvVK2MY5wA" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFjZpAEeOXzvVK2MY5wA" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFjppAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFj5pAEeOXzvVK2MY5wA" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfFkJpAEeOXzvVK2MY5wA" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_4vfFkppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFkZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFkppAEeOXzvVK2MY5wA" name="is_leagaly_approved_beneficiary" constrainedElement="_4vfFkJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFk5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFlJpAEeOXzvVK2MY5wA" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFlZpAEeOXzvVK2MY5wA" name="Loss_Carryforward">
        <ownedRule xmi:id="_4vfFlppAEeOXzvVK2MY5wA" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_4vfFlZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFl5pAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_4vfFmJpAEeOXzvVK2MY5wA" general="_4vfFd5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFmZpAEeOXzvVK2MY5wA" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFmppAEeOXzvVK2MY5wA" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFm5pAEeOXzvVK2MY5wA" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFnJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFnZpAEeOXzvVK2MY5wA" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_4vfFnppAEeOXzvVK2MY5wA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfFn5pAEeOXzvVK2MY5wA" name="is_accountability_regular" isQuery="true" postcondition="_4vfFoZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFoJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFoZpAEeOXzvVK2MY5wA" name="is_accounatbility_regular" constrainedElement="_4vfFn5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFoppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFo5pAEeOXzvVK2MY5wA" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfFpJpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfFpZpAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" isQuery="true" postcondition="_4vfFp5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFpppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFp5pAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" constrainedElement="_4vfFpZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFqJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFqZpAEeOXzvVK2MY5wA" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfFqppAEeOXzvVK2MY5wA" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_4vfFrJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFq5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFrJpAEeOXzvVK2MY5wA" name="partner_in_business" constrainedElement="_4vfFqppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFrZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFrppAEeOXzvVK2MY5wA" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfFr5pAEeOXzvVK2MY5wA" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_4vfFsZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFsJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFsZpAEeOXzvVK2MY5wA" name="inherited_business_ownership" constrainedElement="_4vfFr5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFsppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFs5pAEeOXzvVK2MY5wA" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFtJpAEeOXzvVK2MY5wA" name="Spousal_Expense_AC">
        <generalization xmi:id="_4vfFtZpAEeOXzvVK2MY5wA" general="_4vfF1ppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFtppAEeOXzvVK2MY5wA" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_4vfFt5pAEeOXzvVK2MY5wA" general="_4vfF1ppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfFuJpAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfFuZpAEeOXzvVK2MY5wA" name="ce_type" visibility="public" type="_4vfGH5pAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_4vfFuppAEeOXzvVK2MY5wA" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_4vfFu5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vfFvJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfFvZpAEeOXzvVK2MY5wA" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_4vfFv5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfFvppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfFv5pAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" constrainedElement="_4vfFvZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfFwJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfFwZpAEeOXzvVK2MY5wA" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFwppAEeOXzvVK2MY5wA" name="Travel_Expense_FD">
        <generalization xmi:id="_4vfFw5pAEeOXzvVK2MY5wA" general="_4vfFxppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFxJpAEeOXzvVK2MY5wA" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_4vfFxZpAEeOXzvVK2MY5wA" general="_4vfFxppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfFxppAEeOXzvVK2MY5wA" name="Professional_Expense">
        <generalization xmi:id="_4vfFx5pAEeOXzvVK2MY5wA" general="_4vfF1ppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfFyJpAEeOXzvVK2MY5wA" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_4vfFyZpAEeOXzvVK2MY5wA" name="MISCELLANEOUS_DEBT" classifier="_4vfFyJpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfFyppAEeOXzvVK2MY5wA" name="ALIMONY" classifier="_4vfFyJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfFy5pAEeOXzvVK2MY5wA" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_4vfFzJpAEeOXzvVK2MY5wA" name="PRIVATE_INSURANCE" classifier="_4vfFy5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfFzZpAEeOXzvVK2MY5wA" name="PRIVATE_LIFE_INSURANCE" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfFzppAEeOXzvVK2MY5wA" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_4vfFy5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfFz5pAEeOXzvVK2MY5wA" name="HOUSING_SAVING_PLAN" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfF0JpAEeOXzvVK2MY5wA" name="OLD_AGE_PENSION_PLAN" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfF0ZpAEeOXzvVK2MY5wA" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_4vfF0ppAEeOXzvVK2MY5wA" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfF05pAEeOXzvVK2MY5wA" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_4vfF1JpAEeOXzvVK2MY5wA" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_4vfF0ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfF1ZpAEeOXzvVK2MY5wA" name="influences" memberEnd="_4vfF4ZpAEeOXzvVK2MY5wA _4vfFXJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfF1ppAEeOXzvVK2MY5wA" name="Expense">
        <ownedAttribute xmi:id="_4vfF15pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4vfGG5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfF2JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfF2ZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF2ppAEeOXzvVK2MY5wA" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF25pAEeOXzvVK2MY5wA" name="expense_purpose" visibility="public" type="_4vfGI5pAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_4vfF3JpAEeOXzvVK2MY5wA" name="OTHER" type="_4vfGI5pAEeOXzvVK2MY5wA" instance="_4vfGJ5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF3ZpAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_4vehWppAEeOXzvVK2MY5wA" association="_4veiJJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfF3ppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfF35pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF4JpAEeOXzvVK2MY5wA" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF4ZpAEeOXzvVK2MY5wA" name="income" visibility="private" type="_4vfFSppAEeOXzvVK2MY5wA" association="_4vfF1ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfF4ppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfF45pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfF5JpAEeOXzvVK2MY5wA" name="deduction" visibility="private" type="_4vfHIppAEeOXzvVK2MY5wA" association="_4vfHMZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfF5ZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfF5ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfF55pAEeOXzvVK2MY5wA" name="Grantor">
      <ownedLiteral xmi:id="_4vfF6JpAEeOXzvVK2MY5wA" name="ACD" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF6ZpAEeOXzvVK2MY5wA" name="Employer" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF6ppAEeOXzvVK2MY5wA" name="CNPF" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF65pAEeOXzvVK2MY5wA" name="CEDIES" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF7JpAEeOXzvVK2MY5wA" name="SNJ" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF7ZpAEeOXzvVK2MY5wA" name="CNAP" classifier="_4vfF55pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfF7ppAEeOXzvVK2MY5wA" name="earns" memberEnd="_4veh8JpAEeOXzvVK2MY5wA _4vfFT5pAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfF75pAEeOXzvVK2MY5wA" name="Country">
      <ownedLiteral xmi:id="_4vfF8JpAEeOXzvVK2MY5wA" name="LU" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF8ZpAEeOXzvVK2MY5wA" name="FR" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF8ppAEeOXzvVK2MY5wA" name="BE" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF85pAEeOXzvVK2MY5wA" name="DE" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF9JpAEeOXzvVK2MY5wA" name="NL" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF9ZpAEeOXzvVK2MY5wA" name="OTHER" classifier="_4vfF75pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfF9ppAEeOXzvVK2MY5wA" name="credited for" memberEnd="_4veh9ppAEeOXzvVK2MY5wA _4vfGrppAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_4vfF95pAEeOXzvVK2MY5wA" name="Date">
      <ownedAttribute xmi:id="_4vfF-JpAEeOXzvVK2MY5wA" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfF-ZpAEeOXzvVK2MY5wA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfF-ppAEeOXzvVK2MY5wA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_4vfF-5pAEeOXzvVK2MY5wA" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_4vfF_JpAEeOXzvVK2MY5wA" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfF_ZpAEeOXzvVK2MY5wA" name="Job_Activity">
      <ownedLiteral xmi:id="_4vfF_ppAEeOXzvVK2MY5wA" name="Salary" classifier="_4vfF_ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfF_5pAEeOXzvVK2MY5wA" name="Pension" classifier="_4vfF_ZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGAJpAEeOXzvVK2MY5wA" name="Annuity" classifier="_4vfF_ZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGAZpAEeOXzvVK2MY5wA" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_4vfGAppAEeOXzvVK2MY5wA" name="Principal" classifier="_4vfGAZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGA5pAEeOXzvVK2MY5wA" name="Additional" classifier="_4vfGAZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGBJpAEeOXzvVK2MY5wA" name="Tax_Office">
      <ownedLiteral xmi:id="_4vfGBZpAEeOXzvVK2MY5wA" name="RTS_2" classifier="_4vfGBJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGBppAEeOXzvVK2MY5wA" name="RTS_3" classifier="_4vfGBJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGB5pAEeOXzvVK2MY5wA" name="RTS_Esch" classifier="_4vfGBJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGCJpAEeOXzvVK2MY5wA" name="RTS_Ettelbruck" classifier="_4vfGBJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGCZpAEeOXzvVK2MY5wA" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_4vfGCppAEeOXzvVK2MY5wA" name="One" classifier="_4vfGCZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGC5pAEeOXzvVK2MY5wA" name="One_A" classifier="_4vfGCZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGDJpAEeOXzvVK2MY5wA" name="Two" classifier="_4vfGCZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGDZpAEeOXzvVK2MY5wA" name="Town">
      <ownedLiteral xmi:id="_4vfGDppAEeOXzvVK2MY5wA" name="Luxembourg_city" classifier="_4vfGDZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGD5pAEeOXzvVK2MY5wA" name="Bertrange" classifier="_4vfGDZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGEJpAEeOXzvVK2MY5wA" name="Strassen" classifier="_4vfGDZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGEZpAEeOXzvVK2MY5wA" name="Bettembourg" classifier="_4vfGDZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGEppAEeOXzvVK2MY5wA" name="Beaufort" classifier="_4vfGDZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfGE5pAEeOXzvVK2MY5wA" name="linked to" memberEnd="_4vfFVppAEeOXzvVK2MY5wA _4vfGbZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGFJpAEeOXzvVK2MY5wA" name="Dependent_Type">
      <ownedLiteral xmi:id="_4vfGFZpAEeOXzvVK2MY5wA" name="CHILD" classifier="_4vfGFJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGFppAEeOXzvVK2MY5wA" name="SPOUSE" classifier="_4vfGFJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGF5pAEeOXzvVK2MY5wA" name="RELATIVE" classifier="_4vfGFJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGGJpAEeOXzvVK2MY5wA" name="OTHER_FAMILY_MEMBER" classifier="_4vfGFJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfGGZpAEeOXzvVK2MY5wA" name="provides" memberEnd="_4vfGcJpAEeOXzvVK2MY5wA _4veiLZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfGGppAEeOXzvVK2MY5wA" name="receives" memberEnd="_4veiAppAEeOXzvVK2MY5wA _4vfHJ5pAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_4vfGG5pAEeOXzvVK2MY5wA" name="declares" memberEnd="_4veiBppAEeOXzvVK2MY5wA _4vfF15pAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGHJpAEeOXzvVK2MY5wA" name="Type_of_Rate">
      <ownedLiteral xmi:id="_4vfGHZpAEeOXzvVK2MY5wA" name="REGULAR" classifier="_4vfGHJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGHppAEeOXzvVK2MY5wA" name="REAL_COST" classifier="_4vfGHJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGH5pAEeOXzvVK2MY5wA" name="CE_Type">
      <ownedLiteral xmi:id="_4vfGIJpAEeOXzvVK2MY5wA" name="INALIDITY_AND_INFIRMITY" classifier="_4vfGH5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGIZpAEeOXzvVK2MY5wA" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_4vfGH5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGIppAEeOXzvVK2MY5wA" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_4vfGH5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGI5pAEeOXzvVK2MY5wA" name="Expense_Purpose">
      <ownedLiteral xmi:id="_4vfGJJpAEeOXzvVK2MY5wA" name="HOUSE_CARE" classifier="_4vfGI5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGJZpAEeOXzvVK2MY5wA" name="CHILD_CARE" classifier="_4vfGI5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGJppAEeOXzvVK2MY5wA" name="DEPENDENCE_CARE" classifier="_4vfGI5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGJ5pAEeOXzvVK2MY5wA" name="OTHER" classifier="_4vfGI5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_4vfGKJpAEeOXzvVK2MY5wA" name="Constants">
      <ownedLiteral xmi:id="_4vfGKZpAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGKppAEeOXzvVK2MY5wA" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGK5pAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGLJpAEeOXzvVK2MY5wA" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGLZpAEeOXzvVK2MY5wA" name="MINIMUM_SALARY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGLppAEeOXzvVK2MY5wA" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGL5pAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGMJpAEeOXzvVK2MY5wA" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGMZpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGMppAEeOXzvVK2MY5wA" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGM5pAEeOXzvVK2MY5wA" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGNJpAEeOXzvVK2MY5wA" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGNZpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGNppAEeOXzvVK2MY5wA"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGN5pAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGOJpAEeOXzvVK2MY5wA" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGOZpAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGOppAEeOXzvVK2MY5wA" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGO5pAEeOXzvVK2MY5wA" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGPJpAEeOXzvVK2MY5wA" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGPZpAEeOXzvVK2MY5wA" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGPppAEeOXzvVK2MY5wA" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGP5pAEeOXzvVK2MY5wA" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGQJpAEeOXzvVK2MY5wA" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGQZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_DAILY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGQppAEeOXzvVK2MY5wA" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGQ5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_MONTHLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGRJpAEeOXzvVK2MY5wA" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGRZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_YEARLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGRppAEeOXzvVK2MY5wA" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGR5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_DAILY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGSJpAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGSZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_MONTHLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGSppAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGS5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_YEARLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGTJpAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGTZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_DAILY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGTppAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGT5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_MONTHLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGUJpAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGUZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_YEARLY" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGUppAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGU5pAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_4vfGKJpAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_4vfGVJpAEeOXzvVK2MY5wA" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_4vfGVZpAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_4vfGKJpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_4vfGVppAEeOXzvVK2MY5wA" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_4vfGKJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vfGV5pAEeOXzvVK2MY5wA" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGWJpAEeOXzvVK2MY5wA" name="Tax_Card">
        <ownedRule xmi:id="_4vfGWZpAEeOXzvVK2MY5wA" name="SubjectToWithholdingTax-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGWppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGW5pAEeOXzvVK2MY5wA" name="Tax_Credits-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGXJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGXZpAEeOXzvVK2MY5wA" name="Tax_Card_AC-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGXppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGX5pAEeOXzvVK2MY5wA" name="Tax_Card_FD-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGYJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGYZpAEeOXzvVK2MY5wA" name="Tax_Card_DS-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGYppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGY5pAEeOXzvVK2MY5wA" name="Tax_Card_CE-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGZJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_4vfGZZpAEeOXzvVK2MY5wA" name="Tax_Card_FO-constraint" constrainedElement="_4vfGWJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfGZppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_4vfGZ5pAEeOXzvVK2MY5wA" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGaJpAEeOXzvVK2MY5wA" name="tax_card_type" visibility="public" type="_4vfGAZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfGaZpAEeOXzvVK2MY5wA" name="tax_office" visibility="public" type="_4vfGBJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfGappAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGa5pAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_4vlNQppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGbJpAEeOXzvVK2MY5wA" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGbZpAEeOXzvVK2MY5wA" name="income" visibility="private" type="_4vfFSppAEeOXzvVK2MY5wA" association="_4vfGE5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGbppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGb5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGcJpAEeOXzvVK2MY5wA" name="tax_Class" visibility="private" type="_4veiJppAEeOXzvVK2MY5wA" association="_4vfGGZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGcZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGcppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGc5pAEeOXzvVK2MY5wA" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGdJpAEeOXzvVK2MY5wA" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGdZpAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGdppAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGd5pAEeOXzvVK2MY5wA" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGeJpAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGeZpAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGeppAEeOXzvVK2MY5wA" name="tax_payers_address" visibility="public" type="_4vehUZpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_4vfGe5pAEeOXzvVK2MY5wA" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGfJpAEeOXzvVK2MY5wA" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGfZpAEeOXzvVK2MY5wA" name="jobs_activity_type" visibility="public" type="_4vfF_ZpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_4vfGfppAEeOXzvVK2MY5wA" name="jobs_place_of_work" visibility="public" type="_4vfGDZpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_4vfGf5pAEeOXzvVK2MY5wA" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGgJpAEeOXzvVK2MY5wA" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGgZpAEeOXzvVK2MY5wA" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGgppAEeOXzvVK2MY5wA" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGg5pAEeOXzvVK2MY5wA" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGhJpAEeOXzvVK2MY5wA" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGhZpAEeOXzvVK2MY5wA" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGhppAEeOXzvVK2MY5wA" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGh5pAEeOXzvVK2MY5wA" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGiJpAEeOXzvVK2MY5wA" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGiZpAEeOXzvVK2MY5wA" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGippAEeOXzvVK2MY5wA" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGi5pAEeOXzvVK2MY5wA" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGjJpAEeOXzvVK2MY5wA" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGjZpAEeOXzvVK2MY5wA" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGjppAEeOXzvVK2MY5wA" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGj5pAEeOXzvVK2MY5wA" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGkJpAEeOXzvVK2MY5wA" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGkZpAEeOXzvVK2MY5wA" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGkppAEeOXzvVK2MY5wA" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGk5pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4veiG5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGlJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGlZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGlppAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_4vfGrJpAEeOXzvVK2MY5wA" aggregation="shared" association="_4vfGo5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGl5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGmJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGmZpAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_4vfHIppAEeOXzvVK2MY5wA" aggregation="shared" association="_4vfHIZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGmppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGm5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGnJpAEeOXzvVK2MY5wA" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGnZpAEeOXzvVK2MY5wA" name="previous" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfGpJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGnppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGn5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGoJpAEeOXzvVK2MY5wA" name="current_tax_card" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfGpJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGoZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGoppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfGo5pAEeOXzvVK2MY5wA" name="include" memberEnd="_4vfGuJpAEeOXzvVK2MY5wA _4vfGlppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfGpJpAEeOXzvVK2MY5wA" name="invalidated by" memberEnd="_4vfGnZpAEeOXzvVK2MY5wA _4vfGoJpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vfGpZpAEeOXzvVK2MY5wA" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGpppAEeOXzvVK2MY5wA" name="CIM">
        <generalization xmi:id="_4vfGp5pAEeOXzvVK2MY5wA" general="_4vfGrJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGqJpAEeOXzvVK2MY5wA" name="CIP">
        <generalization xmi:id="_4vfGqZpAEeOXzvVK2MY5wA" general="_4vfGrJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGqppAEeOXzvVK2MY5wA" name="CIS">
        <generalization xmi:id="_4vfGq5pAEeOXzvVK2MY5wA" general="_4vfGrJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGrJpAEeOXzvVK2MY5wA" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_4vfGrZpAEeOXzvVK2MY5wA" name="grantedBy" visibility="public" type="_4vfF55pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfGrppAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4vfF9ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGr5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGsJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGsZpAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGsppAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGs5pAEeOXzvVK2MY5wA" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGtJpAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGtZpAEeOXzvVK2MY5wA" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGtppAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGt5pAEeOXzvVK2MY5wA" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGuJpAEeOXzvVK2MY5wA" name="taxation_Frame" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfGo5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfGuZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfGuppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_4vfGu5pAEeOXzvVK2MY5wA" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGvJpAEeOXzvVK2MY5wA" name="FD">
        <generalization xmi:id="_4vfGvZpAEeOXzvVK2MY5wA" general="_4vfHHJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfGvppAEeOXzvVK2MY5wA" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfGv5pAEeOXzvVK2MY5wA" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfGwJpAEeOXzvVK2MY5wA" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_4vfGwZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vfGwppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGw5pAEeOXzvVK2MY5wA" name="FO">
        <generalization xmi:id="_4vfGxJpAEeOXzvVK2MY5wA" general="_4vfHHJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfGxZpAEeOXzvVK2MY5wA" name="rate_type_for_FO" visibility="public" type="_4vfGHJpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedOperation xmi:id="_4vfGxppAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_4vfGx5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_4vfGyJpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfGyZpAEeOXzvVK2MY5wA" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_4vfGyppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_4vfGy5pAEeOXzvVK2MY5wA" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_4vfGzJpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfGzZpAEeOXzvVK2MY5wA" name="CE">
        <eAnnotations xmi:id="_4vfGzppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_4vfGz5pAEeOXzvVK2MY5wA" general="_4vfHIppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfG0JpAEeOXzvVK2MY5wA" name="ce_deduction_type" visibility="public" type="_4vfGH5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfG0ZpAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfG0ppAEeOXzvVK2MY5wA" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfG05pAEeOXzvVK2MY5wA" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_4vfG1ZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfG1JpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfG1ZpAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" constrainedElement="_4vfG05pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfG1ppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfG15pAEeOXzvVK2MY5wA" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfG2JpAEeOXzvVK2MY5wA" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_4vfG2ppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfG2ZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfG2ppAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" constrainedElement="_4vfG2JpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfG25pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfG3JpAEeOXzvVK2MY5wA" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfG3ZpAEeOXzvVK2MY5wA" name="AC">
        <generalization xmi:id="_4vfG3ppAEeOXzvVK2MY5wA" general="_4vfHIppAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_4vfG35pAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" isQuery="true" postcondition="_4vfG4ZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfG4JpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfG4ZpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" constrainedElement="_4vfG35pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfG4ppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfG45pAEeOXzvVK2MY5wA" name="IN_income" type="_4vfFSppAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_4vfG5JpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfG5ZpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_4vfG55pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfG5ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfG55pAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_4vfG5ZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfG6JpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfG6ZpAEeOXzvVK2MY5wA" name="IN_income" type="_4vfFSppAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_4vfG6ppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfG65pAEeOXzvVK2MY5wA" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_4vfG7JpAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfG7ZpAEeOXzvVK2MY5wA" name="permanent_expense_category" visibility="public" type="_4vfFyJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfG7ppAEeOXzvVK2MY5wA" name="DS_for_Interest_Expense">
        <generalization xmi:id="_4vfG75pAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_4vfG8JpAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_4vfG8ppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfG8ZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfG8ppAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_4vfG8JpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfG85pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfG9JpAEeOXzvVK2MY5wA" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfG9ZpAEeOXzvVK2MY5wA" name="IN_children_with_allowances" type="_4vehWppAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfG9ppAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfG95pAEeOXzvVK2MY5wA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfG-JpAEeOXzvVK2MY5wA" name="IN_legal_union" type="_4vehjZpAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfG-ZpAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfG-ppAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfG-5pAEeOXzvVK2MY5wA" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_4vfG_JpAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfG_ZpAEeOXzvVK2MY5wA" name="insurance_category" visibility="public" type="_4vfF0ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfG_ppAEeOXzvVK2MY5wA" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_4vfG_5pAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfHAJpAEeOXzvVK2MY5wA" name="private_insurance_and_plan_category" visibility="public" type="_4vfFy5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfHAZpAEeOXzvVK2MY5wA" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHAppAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHA5pAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_4vfHBJpAEeOXzvVK2MY5wA" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_4vfHBppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfHBZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfHBppAEeOXzvVK2MY5wA" name="get_increase_for_life_insurance" constrainedElement="_4vfHBJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfHB5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfHCJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfHCZpAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_4vfHC5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfHCppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfHC5pAEeOXzvVK2MY5wA" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_4vfHCZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfHDJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_4vfHDZpAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_4vfHD5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfHDppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfHD5pAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_4vfHDZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfHEJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfHEZpAEeOXzvVK2MY5wA" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_4vfHEppAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfHE5pAEeOXzvVK2MY5wA" name="DS_for_Donation">
        <generalization xmi:id="_4vfHFJpAEeOXzvVK2MY5wA" general="_4vfHHppAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_4vfHFZpAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_4vfHF5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_4vfHFppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_4vfHF5pAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_4vfHFZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_4vfHGJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_4vfHGZpAEeOXzvVK2MY5wA" name="IN_maximum_percentage" type="_4vfGKJpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_4vfHGppAEeOXzvVK2MY5wA" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_4vfHG5pAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfHHJpAEeOXzvVK2MY5wA" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_4vfHHZpAEeOXzvVK2MY5wA" general="_4vfHIppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfHHppAEeOXzvVK2MY5wA" name="DS">
        <generalization xmi:id="_4vfHH5pAEeOXzvVK2MY5wA" general="_4vfHIppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_4vfHIJpAEeOXzvVK2MY5wA" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfHIZpAEeOXzvVK2MY5wA" name="considers" memberEnd="_4vfHK5pAEeOXzvVK2MY5wA _4vfGmZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4vfHIppAEeOXzvVK2MY5wA" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_4vfHI5pAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHJJpAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHJZpAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHJppAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHJ5pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_4vehxppAEeOXzvVK2MY5wA" association="_4vfGGppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfHKJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfHKZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHKppAEeOXzvVK2MY5wA" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHK5pAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_4vfGWJpAEeOXzvVK2MY5wA" association="_4vfHIZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfHLJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfHLZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4vfHLppAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_4vfF1ppAEeOXzvVK2MY5wA" association="_4vfHMZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vfHL5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vfHMJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_4vfHMZpAEeOXzvVK2MY5wA" name="is computed based on" memberEnd="_4vfHLppAEeOXzvVK2MY5wA _4vfF5JpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <profileApplication xmi:id="_4vfHMppAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_4vfHM5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_4vfHNJpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_4vfHNZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_4vhjwZpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_4vhjv5pAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_4vfHNppAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_4vfHN5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_4vmbWppAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_4vmbWJpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_4vfHOJpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_4vfHOZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_4vg9tppAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_4vg9tJpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_4vfHOppAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_4vfHO5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_4vd5dZpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_4vd5c5pAEeOXzvVK2MY5wA"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_4vfHPJpAEeOXzvVK2MY5wA" base_Comment="_4veiO5pAEeOXzvVK2MY5wA"/>
  <Default:Documentation xmi:id="_4vfHPZpAEeOXzvVK2MY5wA" base_Comment="_4vehjppAEeOXzvVK2MY5wA"/>
</xmi:XMI>
