<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_vv1UYJezEeOBeaAb9MJyhQ">
  <uml:Package xmi:id="_vvzg7JezEeOBeaAb9MJyhQ" name="TaxCard">
    <packageImport xmi:id="_vvzg7ZezEeOBeaAb9MJyhQ">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_vvzg7pezEeOBeaAb9MJyhQ">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_vvzg75ezEeOBeaAb9MJyhQ" name="Tax_Card_Domain">
      <packageImport xmi:id="_vvzg8JezEeOBeaAb9MJyhQ" importedPackage="_vv0GZJezEeOBeaAb9MJyhQ"/>
      <packageImport xmi:id="_vvzg8ZezEeOBeaAb9MJyhQ" importedPackage="_vvzg9pezEeOBeaAb9MJyhQ"/>
      <packageImport xmi:id="_vvzg8pezEeOBeaAb9MJyhQ" importedPackage="_vv0GTpezEeOBeaAb9MJyhQ"/>
      <packageImport xmi:id="_vvzg85ezEeOBeaAb9MJyhQ" importedPackage="_vvzh9pezEeOBeaAb9MJyhQ"/>
      <packageImport xmi:id="_vvzg9JezEeOBeaAb9MJyhQ" importedPackage="_vvziOJezEeOBeaAb9MJyhQ"/>
      <packageImport xmi:id="_vvzg9ZezEeOBeaAb9MJyhQ" importedPackage="_vv0GAJezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vvzg9pezEeOBeaAb9MJyhQ" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzg95ezEeOBeaAb9MJyhQ" name="taxed under" memberEnd="_vvzhp5ezEeOBeaAb9MJyhQ _vvzh5pezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzg-JezEeOBeaAb9MJyhQ" name="Income_Tax">
        <ownedAttribute xmi:id="_vvzg-ZezEeOBeaAb9MJyhQ" name="taxPayer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzh45ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzg-pezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzg-5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzg_JezEeOBeaAb9MJyhQ" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzg_ZezEeOBeaAb9MJyhQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzg_pezEeOBeaAb9MJyhQ" name="Address">
        <ownedAttribute xmi:id="_vvzg_5ezEeOBeaAb9MJyhQ" name="taxPayer" visibility="private" type="_vvzhT5ezEeOBeaAb9MJyhQ" association="_vvzh2pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhAJezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhAZezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhApezEeOBeaAb9MJyhQ" name="country" visibility="public" type="_vv0FmpezEeOBeaAb9MJyhQ">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_vvzhA5ezEeOBeaAb9MJyhQ" name="LU" type="_vv0FmpezEeOBeaAb9MJyhQ" instance="_vv0Fm5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhBJezEeOBeaAb9MJyhQ" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhBZezEeOBeaAb9MJyhQ" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhBpezEeOBeaAb9MJyhQ" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhB5ezEeOBeaAb9MJyhQ" name="Dependent">
        <generalization xmi:id="_vvzhCJezEeOBeaAb9MJyhQ" general="_vvzhT5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvzhCZezEeOBeaAb9MJyhQ" name="dependent_type" visibility="public" type="_vv0Fv5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvzhCpezEeOBeaAb9MJyhQ" name="household" visibility="private" type="_vvzhNpezEeOBeaAb9MJyhQ" association="_vvzh4ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhC5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhDJezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhDZezEeOBeaAb9MJyhQ" name="responsible_person" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzh4JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhDpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhD5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhEJezEeOBeaAb9MJyhQ" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvzhEZezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhEpezEeOBeaAb9MJyhQ" name="expense" visibility="private" type="_vv0FgJezEeOBeaAb9MJyhQ" association="_vvzh4pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhE5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhFJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhFZezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzh35ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhFpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhF5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvzhGJezEeOBeaAb9MJyhQ" name="compute_if_dependent_receives_allowances_eligible_for_CIM">
          <eAnnotations xmi:id="_vvzhGZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhGpezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vvzhG5ezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhHJezEeOBeaAb9MJyhQ" name="compute_if_dependent_receives_allowances_eligible_for_DS">
          <eAnnotations xmi:id="_vvzhHZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhHpezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vvzhH5ezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhIJezEeOBeaAb9MJyhQ" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care">
          <eAnnotations xmi:id="_vvzhIZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhIpezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vvzhI5ezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhJJezEeOBeaAb9MJyhQ" name="is_dependent_following_continued_studies" postcondition="_vvzhJ5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhJZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhJpezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzhJ5ezEeOBeaAb9MJyhQ" name="is_dependent_following_continued_studies" constrainedElement="_vvzhJJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhKJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzhKZezEeOBeaAb9MJyhQ" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhKpezEeOBeaAb9MJyhQ" name="External_Allowance">
        <ownedAttribute xmi:id="_vvzhK5ezEeOBeaAb9MJyhQ" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhLJezEeOBeaAb9MJyhQ" name="grantor" visibility="public" type="_vv0FkpezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvzhLZezEeOBeaAb9MJyhQ" name="person" visibility="private" type="_vvzhT5ezEeOBeaAb9MJyhQ" association="_vvzh25ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhLpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhL5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhMJezEeOBeaAb9MJyhQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhMZezEeOBeaAb9MJyhQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhMpezEeOBeaAb9MJyhQ" name="Fiscal_Address">
        <generalization xmi:id="_vvzhM5ezEeOBeaAb9MJyhQ" general="_vvzg_pezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhNJezEeOBeaAb9MJyhQ" name="Habitual_Address">
        <generalization xmi:id="_vvzhNZezEeOBeaAb9MJyhQ" general="_vvzg_pezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhNpezEeOBeaAb9MJyhQ" name="Household">
        <ownedAttribute xmi:id="_vvzhN5ezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzh3pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhOJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhOZezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhOpezEeOBeaAb9MJyhQ" name="dependent" visibility="private" type="_vvzhB5ezEeOBeaAb9MJyhQ" association="_vvzh4ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhO5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhPJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhPZezEeOBeaAb9MJyhQ" name="Legal_Union_Record">
        <ownedComment xmi:id="_vvzhPpezEeOBeaAb9MJyhQ" annotatedElement="_vvzhPZezEeOBeaAb9MJyhQ">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_vvzhP5ezEeOBeaAb9MJyhQ" name="Legal_Union-different_people-constraint" constrainedElement="_vvzhPZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhQJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vvzhQZezEeOBeaAb9MJyhQ" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhQpezEeOBeaAb9MJyhQ" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhQ5ezEeOBeaAb9MJyhQ" name="individual_A" visibility="private" type="_vvzhT5ezEeOBeaAb9MJyhQ" association="_vvzh3ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhRJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhRZezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhRpezEeOBeaAb9MJyhQ" name="individual_B" visibility="private" type="_vvzhT5ezEeOBeaAb9MJyhQ" association="_vvzh3JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhR5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhSJezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhSZezEeOBeaAb9MJyhQ" name="Marriage_Record">
        <generalization xmi:id="_vvzhSpezEeOBeaAb9MJyhQ" general="_vvzhPZezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhS5ezEeOBeaAb9MJyhQ" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_vvzhTJezEeOBeaAb9MJyhQ" general="_vvzhdpezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhTZezEeOBeaAb9MJyhQ" name="Partnership_Record">
        <generalization xmi:id="_vvzhTpezEeOBeaAb9MJyhQ" general="_vvzhPZezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhT5ezEeOBeaAb9MJyhQ" name="Physical_Person">
        <ownedAttribute xmi:id="_vvzhUJezEeOBeaAb9MJyhQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhUZezEeOBeaAb9MJyhQ" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhUpezEeOBeaAb9MJyhQ" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhU5ezEeOBeaAb9MJyhQ" name="allowances" visibility="private" type="_vvzhKpezEeOBeaAb9MJyhQ" association="_vvzh25ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhVJezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhVZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhVpezEeOBeaAb9MJyhQ" name="addresses" visibility="private" type="_vvzg_pezEeOBeaAb9MJyhQ" association="_vvzh2pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhV5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhWJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhWZezEeOBeaAb9MJyhQ" name="legal_union_A" visibility="private" type="_vvzhPZezEeOBeaAb9MJyhQ" association="_vvzh3ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhWpezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhW5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhXJezEeOBeaAb9MJyhQ" name="legal_union_B" visibility="private" type="_vvzhPZezEeOBeaAb9MJyhQ" association="_vvzh3JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhXZezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhXpezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhX5ezEeOBeaAb9MJyhQ" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhYJezEeOBeaAb9MJyhQ" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhYZezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhYpezEeOBeaAb9MJyhQ" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvzhY5ezEeOBeaAb9MJyhQ" name="is_separated_from">
          <eAnnotations xmi:id="_vvzhZJezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhZZezEeOBeaAb9MJyhQ" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vvzhZpezEeOBeaAb9MJyhQ" name="IN_person" type="_vvzhT5ezEeOBeaAb9MJyhQ"/>
          <ownedParameter xmi:id="_vvzhZ5ezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhaJezEeOBeaAb9MJyhQ" name="is_person_assisting_spouse" postcondition="_vvzha5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhaZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhapezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzha5ezEeOBeaAb9MJyhQ" name="is_assisting_spouse" constrainedElement="_vvzhaJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhbJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzhbZezEeOBeaAb9MJyhQ" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhbpezEeOBeaAb9MJyhQ" name="is_person_affiliated_personnaly_to_social_security" postcondition="_vvzhcZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhb5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhcJezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzhcZezEeOBeaAb9MJyhQ" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_vvzhbpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhcpezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzhc5ezEeOBeaAb9MJyhQ" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhdJezEeOBeaAb9MJyhQ" name="Resident_Tax_Payer">
        <generalization xmi:id="_vvzhdZezEeOBeaAb9MJyhQ" general="_vvzhdpezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzhdpezEeOBeaAb9MJyhQ" name="Tax_Payer">
        <ownedRule xmi:id="_vvzhd5ezEeOBeaAb9MJyhQ" name="NonResidentTaxPayer-constraint" constrainedElement="_vvzhS5ezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzheJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzheZezEeOBeaAb9MJyhQ" name="ResidentTaxPayer-constraint" constrainedElement="_vvzhdJezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhepezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhe5ezEeOBeaAb9MJyhQ" name="SubjectToIncomeTax-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhfJezEeOBeaAb9MJyhQ" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhfZezEeOBeaAb9MJyhQ" name="TaxCredit-CIS-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhfpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = self^^get_tax_liability_in_days(self.incomeTax.tax_year.oclAsType(Integer))->first().result in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9; if(employement_income->size()>0 and total_income.div(tax_liability)>=3 and total_income.mod(tax_liability)>12 and total_income>936) then&#xA;&#x9;&#x9; &#x9;&#x9;     &#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;/**CIS CREDITED FOR THE SALARY PER DAY**/&#xA;&#x9;&#x9;&#x9;a_CIS.daily=Constants::FLAT_RATE_CIS_DAILY and&#xA;&#x9;&#x9;&#x9;a_CIS.monthly = Constants::FLAT_RATE_CIS_MONTHLY and&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY&#xA;&#x9;&#x9;&#x9;&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;      &#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhf5ezEeOBeaAb9MJyhQ" name="TaxCredit-CIP-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhgJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;days:Integer = self^^get_tax_liability_in_days(self.incomeTax.tax_year.oclAsType(Integer))->first().result in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9; if(employement_income->size()>0 and total_income.div(days)>=1) then&#xA;&#x9;&#x9;     &#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;/**CIP CREDITED FOR THE PENSION AND ANNUITIES PER DAY**/&#xA;&#x9;&#x9;&#x9;a_CIP.daily=Constants::FLAT_RATE_CIP_DAILY and&#xA;&#x9;&#x9;&#x9;a_CIP.monthly = Constants::FLAT_RATE_CIP_MONTHLY and&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY&#xA;&#x9;&#x9;&#x9;&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;   </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhgZezEeOBeaAb9MJyhQ" name="TaxCredit-CIM-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhgpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let current_tax_class: Tax_Class = self.tax_class->select(tc|tc.valid_until_date->isEmpty())->any(true),&#xA;&#x9; set_of_CIM: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9; size_set_of_CIM:Integer = set_of_CIM->size(),&#xA;&#x9; a_CIM: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIM->any(true),&#xA;&#x9; current_tax_classes_category_two: Set(Tax_Class) = self.tax_class->select(tc|tc.valid_from_date = self.incomeTax.tax_year and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tc.valid_until_date=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tc.tax_class=Tax_Class_Category::Two),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;current_employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) in&#xA;       &#x9;&#x9;&#xA;&#xA;       if (current_employement_income->size()>0 and self.oclIsTypeOf(Resident_Tax_Payer)) then&#xA;&#x9;&#x9;&#x9;if current_tax_class.tax_class = Tax_Class_Category::One_A and current_tax_classes_category_two->size()=0 then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep^^compute_if_dependent_receives_allowances_eligible_for_CIM()->first().result=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#x9;&#x9;size_set_of_CIM = 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.daily = Constants::FLAT_RATE_CIM_DAILY and /**2,5**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.monthly = Constants::FLAT_RATE_CIM_MONTHLY and /**62,5**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhg5ezEeOBeaAb9MJyhQ" name="Legal_Union-monogamus-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhhJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhhZezEeOBeaAb9MJyhQ" name="TaxClass-unique-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhhpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhh5ezEeOBeaAb9MJyhQ" name="TaxDeduction-CE-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhiJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum(),&#xA;&#x9; &#xA;&#x9; caclulated_deduction_due_to_dependence_and_care: Integer = 0, &#xA;&#x9; calculated_rate_for_children_not_part_of_household : Integer=0 in&#xA;&#x9;&#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE)^^is_above_thresholded_deduction_percentage_for_CE()->first().result()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self^^is_dependent_part_of_the_household(expense.dependent)->first().result = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self^^is_dependent_part_of_the_household(expense.dependent)->first().result = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE) in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_house_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE  FOR HOUSE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;caclulated_deduction_due_to_dependence_and_care=caclulated_deduction_due_to_dependence_and_care + expenses_for_house_care.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let sum_of_expenses:Integer = 0 in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses = expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent^^compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care()->first().result =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(caclulated_deduction_due_to_dependence_and_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;caclulated_deduction_due_to_dependence_and_care = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;caclulated_deduction_due_to_dependence_and_care=caclulated_deduction_due_to_dependence_and_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;caclulated_deduction_due_to_dependence_and_care=&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;caclulated_deduction_due_to_dependence_and_care +&#x9;CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**the dependent relative flat rate is the sum of all flat rates for each dependent relative**/&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = caclulated_deduction_due_to_dependence_and_care&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self^^is_dependent_part_of_the_household(expense.dependent)->first().result = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent^^compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care()->first().result =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;calculated_rate_for_children_not_part_of_household =Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;calculated_rate_for_children_not_part_of_household=calculated_rate_for_children_not_part_of_household + sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->any(true).deductible_amount = calculated_rate_for_children_not_part_of_household&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;caclulated_deduction_due_to_dependence_and_care + &#xA;&#x9;&#x9;&#x9;calculated_rate_for_children_not_part_of_household  */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhiZezEeOBeaAb9MJyhQ" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhipezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac^^is_eligible_income_for_AC(inc)->first().result),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac^^is_eligible_income_for_AC(inc)->first().result),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac^^is_eligible_income_for_AC_assisting_spouse(inc)->first().result),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac^^is_eligible_income_for_AC_assisting_spouse(inc)->first().result),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc^^compute_duration_of_contract()->first().result &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc^^compute_duration_of_contract()->first().result &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhi5ezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhjJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self^^get_tax_liability_in_months()->first().result(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self^^is_separated_from(al.dependent)->first().result()=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhjZezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhjpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;interest_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps^^compute_if_dependent_receives_allowances_eligible_for_DS()->first().result =true),&#xA;tax_liability : Integer = self^^get_tax_liability_in_months()->first().result() in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhj5ezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhkJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;employment_incomes: Set (Income_Concepts::Income) = self.incomes->select(income|income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income)),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = self^^get_tax_liability_in_months()->first().result()  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if employment_incomes->size()>0 then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if employment_incomes->size()>0 then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhkZezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhkpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self^^get_tax_liability_in_months()->first().result()   in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() in&#xA;&#x9;if life_insurance.declared_amount->size()>0 then&#xA;      sum_insurance_and_plan =sum_insurance_and_plan + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#x9;and&#xA;&#x9;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;and&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhk5ezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-5-donation" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhlJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhlZezEeOBeaAb9MJyhQ" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhlpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let &#xA;losses: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;losses_successor: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = self.income_Tax_Deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if losses->size()>0 then&#xA;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;else&#xA;&#x9;if losses_successor->size()>0 then&#xA;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;endif&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhl5ezEeOBeaAb9MJyhQ" name="TaxCard-unique-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhmJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhmZezEeOBeaAb9MJyhQ" name="TaxDeduction-FD-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhmpezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>true&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvzhm5ezEeOBeaAb9MJyhQ" name="TaxDeduction-FO-constraint" constrainedElement="_vvzhdpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhnJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>true&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_vvzhnZezEeOBeaAb9MJyhQ" general="_vvzhT5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvzhnpezEeOBeaAb9MJyhQ" name="incomes" visibility="private" type="_vvziF5ezEeOBeaAb9MJyhQ" association="_vv0FmZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhn5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhoJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhoZezEeOBeaAb9MJyhQ" name="incomeTax" visibility="private" type="_vvzg-JezEeOBeaAb9MJyhQ" association="_vvzh45ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhopezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzho5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhpJezEeOBeaAb9MJyhQ" name="income_Tax_Credit" visibility="private" type="_vv0GVZezEeOBeaAb9MJyhQ" association="_vv0FoZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhpZezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhppezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhp5ezEeOBeaAb9MJyhQ" name="tax_class" visibility="private" type="_vvzh5JezEeOBeaAb9MJyhQ" association="_vvzg95ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhqJezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhqZezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhqpezEeOBeaAb9MJyhQ" name="household" visibility="private" type="_vvzhNpezEeOBeaAb9MJyhQ" association="_vvzh3pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhq5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhrJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhrZezEeOBeaAb9MJyhQ" name="dependents" visibility="private" type="_vvzhB5ezEeOBeaAb9MJyhQ" association="_vvzh4JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhrpezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhr5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhsJezEeOBeaAb9MJyhQ" name="income_Tax_Deduction" visibility="private" type="_vv0G1pezEeOBeaAb9MJyhQ" association="_vv0FxZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhsZezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhspezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhs5ezEeOBeaAb9MJyhQ" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhtJezEeOBeaAb9MJyhQ" name="expenses" visibility="private" type="_vv0FgJezEeOBeaAb9MJyhQ" association="_vv0FxpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhtZezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhtpezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzht5ezEeOBeaAb9MJyhQ" name="dependent" visibility="private" type="_vvzhB5ezEeOBeaAb9MJyhQ" association="_vvzh35ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhuJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhuZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzhupezEeOBeaAb9MJyhQ" name="tax_Card" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" aggregation="shared" association="_vvzh2ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzhu5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzhvJezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvzhvZezEeOBeaAb9MJyhQ" name="get_tax_liability_in_days" postcondition="_vvzhwJezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhvpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhv5ezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzhwJezEeOBeaAb9MJyhQ" name="working_days" constrainedElement="_vvzhvZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhwZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result=1</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzhwpezEeOBeaAb9MJyhQ" name="IN_year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_vvzhw5ezEeOBeaAb9MJyhQ" name="">
              <language></language>
              <body></body>
            </defaultValue>
          </ownedParameter>
          <ownedParameter xmi:id="_vvzhxJezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_vvzhxZezEeOBeaAb9MJyhQ" name="">
              <language></language>
              <body></body>
            </defaultValue>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhxpezEeOBeaAb9MJyhQ" name="is_dependent_part_of_the_household" postcondition="_vvzhyZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhx5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhyJezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzhyZezEeOBeaAb9MJyhQ" name="is_child_part_of_household" constrainedElement="_vvzhxpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzhypezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzhy5ezEeOBeaAb9MJyhQ" name="IN_dependent" type="_vvzhB5ezEeOBeaAb9MJyhQ"/>
          <ownedParameter xmi:id="_vvzhzJezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzhzZezEeOBeaAb9MJyhQ" name="number_of_months_of_allowance" postcondition="_vvzh0JezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzhzpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzhz5ezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzh0JezEeOBeaAb9MJyhQ" name="number_od_months_of_allowance" constrainedElement="_vvzhzZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzh0ZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzh0pezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvzh05ezEeOBeaAb9MJyhQ" name="get_tax_liability_in_months" postcondition="_vvzh1pezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvzh1JezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvzh1ZezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvzh1pezEeOBeaAb9MJyhQ" name="tax_liability" constrainedElement="_vvzh05ezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvzh15ezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result = 1 </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvzh2JezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh2ZezEeOBeaAb9MJyhQ" name="" memberEnd="_vvzhupezEeOBeaAb9MJyhQ _vv0GPJezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh2pezEeOBeaAb9MJyhQ" name="located at" memberEnd="_vvzhVpezEeOBeaAb9MJyhQ _vvzg_5ezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh25ezEeOBeaAb9MJyhQ" name="receives" memberEnd="_vvzhU5ezEeOBeaAb9MJyhQ _vvzhLZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh3JezEeOBeaAb9MJyhQ" name="person B" memberEnd="_vvzhRpezEeOBeaAb9MJyhQ _vvzhXJezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh3ZezEeOBeaAb9MJyhQ" name="person A" memberEnd="_vvzhQ5ezEeOBeaAb9MJyhQ _vvzhWZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh3pezEeOBeaAb9MJyhQ" name="maintains" memberEnd="_vvzhqpezEeOBeaAb9MJyhQ _vvzhN5ezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh35ezEeOBeaAb9MJyhQ" name="as tax payer" memberEnd="_vvzhFZezEeOBeaAb9MJyhQ _vvzht5ezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh4JezEeOBeaAb9MJyhQ" name="supports" memberEnd="_vvzhrZezEeOBeaAb9MJyhQ _vvzhDZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh4ZezEeOBeaAb9MJyhQ" name="is part of" memberEnd="_vvzhCpezEeOBeaAb9MJyhQ _vvzhOpezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh4pezEeOBeaAb9MJyhQ" name="incurred over" memberEnd="_vv0Fh5ezEeOBeaAb9MJyhQ _vvzhEpezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh45ezEeOBeaAb9MJyhQ" name="is subject to" memberEnd="_vvzhoZezEeOBeaAb9MJyhQ _vvzg-ZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzh5JezEeOBeaAb9MJyhQ" name="Tax_Class">
        <ownedAttribute xmi:id="_vvzh5ZezEeOBeaAb9MJyhQ" name="tax_class" visibility="public" type="_vv0FtJezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvzh5pezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzg95ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzh55ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzh6JezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh6ZezEeOBeaAb9MJyhQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh6pezEeOBeaAb9MJyhQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh65ezEeOBeaAb9MJyhQ" name="tax_card" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0FxJezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzh7JezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzh7ZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh7pezEeOBeaAb9MJyhQ" name="current_tax_class" visibility="private" type="_vvzh5JezEeOBeaAb9MJyhQ" association="_vvzh9JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzh75ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzh8JezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh8ZezEeOBeaAb9MJyhQ" name="prev" visibility="private" type="_vvzh5JezEeOBeaAb9MJyhQ" association="_vvzh9JezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzh8pezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzh85ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvzh9JezEeOBeaAb9MJyhQ" name="replaced by" memberEnd="_vvzh7pezEeOBeaAb9MJyhQ _vvzh8ZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzh9ZezEeOBeaAb9MJyhQ" name="Set(Dependent)"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vvzh9pezEeOBeaAb9MJyhQ" name="Income_Concepts">
      <ownedComment xmi:id="_vvzh95ezEeOBeaAb9MJyhQ" annotatedElement="_vvziEZezEeOBeaAb9MJyhQ">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzh-JezEeOBeaAb9MJyhQ" name="Income_Type">
        <ownedAttribute xmi:id="_vvzh-ZezEeOBeaAb9MJyhQ" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_vvzh-pezEeOBeaAb9MJyhQ" annotatedElement="_vvzh-ZezEeOBeaAb9MJyhQ">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzh-5ezEeOBeaAb9MJyhQ" name="income" visibility="private" type="_vvziF5ezEeOBeaAb9MJyhQ" association="_vvziEpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvzh_JezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvzh_ZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvzh_pezEeOBeaAb9MJyhQ" name="Trade_and_Business_Income">
        <generalization xmi:id="_vvzh_5ezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziAJezEeOBeaAb9MJyhQ" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_vvziAZezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziApezEeOBeaAb9MJyhQ" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_vvziA5ezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziBJezEeOBeaAb9MJyhQ" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_vvziBZezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziBpezEeOBeaAb9MJyhQ" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvziB5ezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziCJezEeOBeaAb9MJyhQ" name="Capital_and_Investments_Income">
        <generalization xmi:id="_vvziCZezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziCpezEeOBeaAb9MJyhQ" name="Employment_Income">
        <generalization xmi:id="_vvziC5ezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziDJezEeOBeaAb9MJyhQ" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_vvziDZezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziDpezEeOBeaAb9MJyhQ" name="Sundry_Income">
        <generalization xmi:id="_vvziD5ezEeOBeaAb9MJyhQ" general="_vvzh-JezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziEJezEeOBeaAb9MJyhQ" name="Directors_Fee">
        <generalization xmi:id="_vvziEZezEeOBeaAb9MJyhQ" general="_vvziApezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vvziEpezEeOBeaAb9MJyhQ" name="has as type" memberEnd="_vvziJpezEeOBeaAb9MJyhQ _vvzh-5ezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziE5ezEeOBeaAb9MJyhQ" name="Foreign_Income">
        <generalization xmi:id="_vvziFJezEeOBeaAb9MJyhQ" general="_vvziF5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziFZezEeOBeaAb9MJyhQ" name="Local_Income">
        <generalization xmi:id="_vvziFpezEeOBeaAb9MJyhQ" general="_vvziF5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziF5ezEeOBeaAb9MJyhQ" name="Income">
        <ownedRule xmi:id="_vvziGJezEeOBeaAb9MJyhQ" name="Tax_Deduction_FD-constraint" constrainedElement="_vvziF5ezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziGZezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vvziGpezEeOBeaAb9MJyhQ" name="Tax_Deduction_FO-constraint" constrainedElement="_vvziF5ezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziG5ezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>fo.oclAsType(Income_Tax_Deduction_Concepts::FO) .regular_flat_rate_for_FO) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .regular_flat_rate_for_FO+fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .disability_flat_rate_for_FO&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .disability_flat_rate_for_FO&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) </body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vvziHJezEeOBeaAb9MJyhQ" name="taxPayer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vv0FmZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvziHZezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvziHpezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziH5ezEeOBeaAb9MJyhQ" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziIJezEeOBeaAb9MJyhQ" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziIZezEeOBeaAb9MJyhQ" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziIpezEeOBeaAb9MJyhQ" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziI5ezEeOBeaAb9MJyhQ" name="tax_card" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0FvpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvziJJezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvziJZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziJpezEeOBeaAb9MJyhQ" name="income_type" visibility="private" type="_vvzh-JezEeOBeaAb9MJyhQ" association="_vvziEpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvziJ5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvziKJezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziKZezEeOBeaAb9MJyhQ" name="expenses" visibility="private" type="_vv0FgJezEeOBeaAb9MJyhQ" association="_vv0Ff5ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvziKpezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vvziK5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvziLJezEeOBeaAb9MJyhQ" name="compute_duration_of_contract" postcondition="_vvziL5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvziLZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvziLpezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvziL5ezEeOBeaAb9MJyhQ" name="get_duration" constrainedElement="_vvziLJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziMJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvziMZezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vvziMpezEeOBeaAb9MJyhQ" name="compute_duration_of_contract_within_taxation_year">
          <eAnnotations xmi:id="_vvziM5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvziNJezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vvziNZezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vvziNpezEeOBeaAb9MJyhQ" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziN5ezEeOBeaAb9MJyhQ" name="Set(Income)"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vvziOJezEeOBeaAb9MJyhQ" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziOZezEeOBeaAb9MJyhQ" name="Permanent_Expense">
        <generalization xmi:id="_vvziOpezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziO5ezEeOBeaAb9MJyhQ" name="category" visibility="public" type="_vv0FcpezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziPJezEeOBeaAb9MJyhQ" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvziPZezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvziPpezEeOBeaAb9MJyhQ" name="is_expense_eligible_for_deduction" postcondition="_vvziQZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvziP5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvziQJezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvziQZezEeOBeaAb9MJyhQ" name="is_eligible" constrainedElement="_vvziPpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziQpezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvziQ5ezEeOBeaAb9MJyhQ" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vvziRJezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziRZezEeOBeaAb9MJyhQ" name="Interest_Expense">
        <generalization xmi:id="_vvziRpezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziR5ezEeOBeaAb9MJyhQ" name="Special_Expense_DS">
        <generalization xmi:id="_vvziSJezEeOBeaAb9MJyhQ" general="_vv0FgJezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziSZezEeOBeaAb9MJyhQ" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_vvziSpezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziS5ezEeOBeaAb9MJyhQ" name="category" visibility="public" type="_vv0FdZezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziTJezEeOBeaAb9MJyhQ" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziTZezEeOBeaAb9MJyhQ" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_vvziTpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvziT5ezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvziUJezEeOBeaAb9MJyhQ" name="is_private_insurance_and_plan_eligible_for_deduction" postcondition="_vvziU5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvziUZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvziUpezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvziU5ezEeOBeaAb9MJyhQ" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_vvziUJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziVJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvziVZezEeOBeaAb9MJyhQ" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziVpezEeOBeaAb9MJyhQ" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_vvziV5ezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziWJezEeOBeaAb9MJyhQ" name="category" visibility="public" type="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziWZezEeOBeaAb9MJyhQ" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvziWpezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziW5ezEeOBeaAb9MJyhQ" name="Donation">
        <generalization xmi:id="_vvziXJezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziXZezEeOBeaAb9MJyhQ" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvziXpezEeOBeaAb9MJyhQ" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vvziX5ezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vvziYJezEeOBeaAb9MJyhQ" name="get_beneficiary_eligibility_for_deduction" postcondition="_vvziY5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vvziYZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vvziYpezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vvziY5ezEeOBeaAb9MJyhQ" name="is_leagaly_approved_beneficiary" constrainedElement="_vvziYJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziZJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vvziZZezEeOBeaAb9MJyhQ" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vvziZpezEeOBeaAb9MJyhQ" name="Loss_Carryforward">
        <ownedRule xmi:id="_vvziZ5ezEeOBeaAb9MJyhQ" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_vvziZpezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvziaJezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_vvziaZezEeOBeaAb9MJyhQ" general="_vvziR5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vvziapezEeOBeaAb9MJyhQ" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vvzia5ezEeOBeaAb9MJyhQ" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FQJezEeOBeaAb9MJyhQ" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv0FQZezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FQpezEeOBeaAb9MJyhQ" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv0FQ5ezEeOBeaAb9MJyhQ" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv0FRJezEeOBeaAb9MJyhQ" name="is_accountability_regular" postcondition="_vv0FR5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0FRZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FRpezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0FR5ezEeOBeaAb9MJyhQ" name="is_accounatbility_regular" constrainedElement="_vv0FRJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0FSJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0FSZezEeOBeaAb9MJyhQ" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0FSpezEeOBeaAb9MJyhQ" name="is_compensated_by_other_means" postcondition="_vv0FTZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0FS5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FTJezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0FTZezEeOBeaAb9MJyhQ" name="is_compensated_by_other_means" constrainedElement="_vv0FSpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0FTpezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0FT5ezEeOBeaAb9MJyhQ" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0FUJezEeOBeaAb9MJyhQ" name="has_been_tax_payer_partner_in_business" postcondition="_vv0FU5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0FUZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FUpezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0FU5ezEeOBeaAb9MJyhQ" name="partner_in_business" constrainedElement="_vv0FUJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0FVJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0FVZezEeOBeaAb9MJyhQ" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0FVpezEeOBeaAb9MJyhQ" name="has_tax_payer_inherited_business_ownership" postcondition="_vv0FWZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0FV5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FWJezEeOBeaAb9MJyhQ" key="agent"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0FWZezEeOBeaAb9MJyhQ" name="inherited_business_ownership" constrainedElement="_vv0FVpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0FWpezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0FW5ezEeOBeaAb9MJyhQ" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FXJezEeOBeaAb9MJyhQ" name="Spousal_Expense_AC">
        <generalization xmi:id="_vv0FXZezEeOBeaAb9MJyhQ" general="_vv0FgJezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FXpezEeOBeaAb9MJyhQ" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_vv0FX5ezEeOBeaAb9MJyhQ" general="_vv0FgJezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0FYJezEeOBeaAb9MJyhQ" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FYZezEeOBeaAb9MJyhQ" name="ce_type" visibility="public" type="_vv0FypezEeOBeaAb9MJyhQ"/>
        <ownedOperation xmi:id="_vv0FYpezEeOBeaAb9MJyhQ" name="is_above_thresholded_deduction_percentage_for_CE">
          <eAnnotations xmi:id="_vv0FY5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FZJezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vv0FZZezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0FZpezEeOBeaAb9MJyhQ" name="compute_thresholded_deduction_percentage_for_CE" postcondition="_vv0FaZezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0FZ5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0FaJezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0FaZezEeOBeaAb9MJyhQ" name="thresholded_deduction_percentage" constrainedElement="_vv0FZpezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0FapezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0Fa5ezEeOBeaAb9MJyhQ" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FbJezEeOBeaAb9MJyhQ" name="Travel_Expense_FD">
        <generalization xmi:id="_vv0FbZezEeOBeaAb9MJyhQ" general="_vv0FcJezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FbpezEeOBeaAb9MJyhQ" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_vv0Fb5ezEeOBeaAb9MJyhQ" general="_vv0FcJezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FcJezEeOBeaAb9MJyhQ" name="Professional_Expense">
        <generalization xmi:id="_vv0FcZezEeOBeaAb9MJyhQ" general="_vv0FgJezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FcpezEeOBeaAb9MJyhQ" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_vv0Fc5ezEeOBeaAb9MJyhQ" name="MISCELLANEOUS_DEBT" classifier="_vv0FcpezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FdJezEeOBeaAb9MJyhQ" name="ALIMONY" classifier="_vv0FcpezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FdZezEeOBeaAb9MJyhQ" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_vv0FdpezEeOBeaAb9MJyhQ" name="PRIVATE_INSURANCE" classifier="_vv0FdZezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0Fd5ezEeOBeaAb9MJyhQ" name="PRIVATE_LIFE_INSURANCE" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FeJezEeOBeaAb9MJyhQ" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_vv0FdZezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FeZezEeOBeaAb9MJyhQ" name="HOUSING_SAVING_PLAN" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FepezEeOBeaAb9MJyhQ" name="OLD_AGE_PENSION_PLAN" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0Fe5ezEeOBeaAb9MJyhQ" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_vv0FfJezEeOBeaAb9MJyhQ" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FfZezEeOBeaAb9MJyhQ" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
        <ownedLiteral xmi:id="_vv0FfpezEeOBeaAb9MJyhQ" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv0Ff5ezEeOBeaAb9MJyhQ" name="influences" memberEnd="_vv0Fi5ezEeOBeaAb9MJyhQ _vvziKZezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FgJezEeOBeaAb9MJyhQ" name="Expense">
        <ownedAttribute xmi:id="_vv0FgZezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vv0FxpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0FgpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0Fg5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FhJezEeOBeaAb9MJyhQ" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FhZezEeOBeaAb9MJyhQ" name="expense_purpose" visibility="public" type="_vv0FzpezEeOBeaAb9MJyhQ">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_vv0FhpezEeOBeaAb9MJyhQ" name="OTHER" type="_vv0FzpezEeOBeaAb9MJyhQ" instance="_vv0F0pezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0Fh5ezEeOBeaAb9MJyhQ" name="dependent" visibility="private" type="_vvzhB5ezEeOBeaAb9MJyhQ" association="_vvzh4pezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0FiJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0FiZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FipezEeOBeaAb9MJyhQ" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0Fi5ezEeOBeaAb9MJyhQ" name="income" visibility="private" type="_vvziF5ezEeOBeaAb9MJyhQ" association="_vv0Ff5ezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0FjJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0FjZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0FjpezEeOBeaAb9MJyhQ" name="deduction" visibility="private" type="_vv0G1pezEeOBeaAb9MJyhQ" association="_vv0G5ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0Fj5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0FkJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0FkZezEeOBeaAb9MJyhQ" name="Set(Expense)"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FkpezEeOBeaAb9MJyhQ" name="Grantor">
      <ownedLiteral xmi:id="_vv0Fk5ezEeOBeaAb9MJyhQ" name="ACD" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FlJezEeOBeaAb9MJyhQ" name="Employer" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FlZezEeOBeaAb9MJyhQ" name="CNPF" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FlpezEeOBeaAb9MJyhQ" name="CEDIES" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fl5ezEeOBeaAb9MJyhQ" name="SNJ" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FmJezEeOBeaAb9MJyhQ" name="CNAP" classifier="_vv0FkpezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FmZezEeOBeaAb9MJyhQ" name="earns" memberEnd="_vvzhnpezEeOBeaAb9MJyhQ _vvziHJezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FmpezEeOBeaAb9MJyhQ" name="Country">
      <ownedLiteral xmi:id="_vv0Fm5ezEeOBeaAb9MJyhQ" name="LU" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FnJezEeOBeaAb9MJyhQ" name="FR" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FnZezEeOBeaAb9MJyhQ" name="BE" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FnpezEeOBeaAb9MJyhQ" name="DE" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fn5ezEeOBeaAb9MJyhQ" name="NL" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FoJezEeOBeaAb9MJyhQ" name="OTHER" classifier="_vv0FmpezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FoZezEeOBeaAb9MJyhQ" name="credited for" memberEnd="_vvzhpJezEeOBeaAb9MJyhQ _vv0GV5ezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_vv0FopezEeOBeaAb9MJyhQ" name="Date">
      <ownedAttribute xmi:id="_vv0Fo5ezEeOBeaAb9MJyhQ" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0FpJezEeOBeaAb9MJyhQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0FpZezEeOBeaAb9MJyhQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_vv0FppezEeOBeaAb9MJyhQ" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_vv0Fp5ezEeOBeaAb9MJyhQ" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FqJezEeOBeaAb9MJyhQ" name="Job_Activity">
      <ownedLiteral xmi:id="_vv0FqZezEeOBeaAb9MJyhQ" name="Salary" classifier="_vv0FqJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FqpezEeOBeaAb9MJyhQ" name="Pension" classifier="_vv0FqJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fq5ezEeOBeaAb9MJyhQ" name="Annuity" classifier="_vv0FqJezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FrJezEeOBeaAb9MJyhQ" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_vv0FrZezEeOBeaAb9MJyhQ" name="Principal" classifier="_vv0FrJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FrpezEeOBeaAb9MJyhQ" name="Additional" classifier="_vv0FrJezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0Fr5ezEeOBeaAb9MJyhQ" name="Tax_Office">
      <ownedLiteral xmi:id="_vv0FsJezEeOBeaAb9MJyhQ" name="RTS_2" classifier="_vv0Fr5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FsZezEeOBeaAb9MJyhQ" name="RTS_3" classifier="_vv0Fr5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FspezEeOBeaAb9MJyhQ" name="RTS_Esch" classifier="_vv0Fr5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fs5ezEeOBeaAb9MJyhQ" name="RTS_Ettelbruck" classifier="_vv0Fr5ezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FtJezEeOBeaAb9MJyhQ" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_vv0FtZezEeOBeaAb9MJyhQ" name="One" classifier="_vv0FtJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FtpezEeOBeaAb9MJyhQ" name="One_A" classifier="_vv0FtJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Ft5ezEeOBeaAb9MJyhQ" name="Two" classifier="_vv0FtJezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FuJezEeOBeaAb9MJyhQ" name="Town">
      <ownedLiteral xmi:id="_vv0FuZezEeOBeaAb9MJyhQ" name="Luxembourg_city" classifier="_vv0FuJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FupezEeOBeaAb9MJyhQ" name="Bertrange" classifier="_vv0FuJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fu5ezEeOBeaAb9MJyhQ" name="Strassen" classifier="_vv0FuJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FvJezEeOBeaAb9MJyhQ" name="Bettembourg" classifier="_vv0FuJezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FvZezEeOBeaAb9MJyhQ" name="Beaufort" classifier="_vv0FuJezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FvpezEeOBeaAb9MJyhQ" name="linked to" memberEnd="_vvziI5ezEeOBeaAb9MJyhQ _vv0GFpezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0Fv5ezEeOBeaAb9MJyhQ" name="Dependent_Type">
      <ownedLiteral xmi:id="_vv0FwJezEeOBeaAb9MJyhQ" name="CHILD" classifier="_vv0Fv5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FwZezEeOBeaAb9MJyhQ" name="SPOUSE" classifier="_vv0Fv5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FwpezEeOBeaAb9MJyhQ" name="RELATIVE" classifier="_vv0Fv5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0Fw5ezEeOBeaAb9MJyhQ" name="OTHER_FAMILY_MEMBER" classifier="_vv0Fv5ezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FxJezEeOBeaAb9MJyhQ" name="provides" memberEnd="_vv0GGZezEeOBeaAb9MJyhQ _vvzh65ezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FxZezEeOBeaAb9MJyhQ" name="receives" memberEnd="_vvzhsJezEeOBeaAb9MJyhQ _vv0G25ezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv0FxpezEeOBeaAb9MJyhQ" name="declares" memberEnd="_vvzhtJezEeOBeaAb9MJyhQ _vv0FgZezEeOBeaAb9MJyhQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0Fx5ezEeOBeaAb9MJyhQ" name="Type_of_Rate">
      <ownedLiteral xmi:id="_vv0FyJezEeOBeaAb9MJyhQ" name="REGULAR" classifier="_vv0Fx5ezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FyZezEeOBeaAb9MJyhQ" name="REAL_COST" classifier="_vv0Fx5ezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FypezEeOBeaAb9MJyhQ" name="CE_Type">
      <ownedLiteral xmi:id="_vv0Fy5ezEeOBeaAb9MJyhQ" name="INALIDITY_AND_INFIRMITY" classifier="_vv0FypezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FzJezEeOBeaAb9MJyhQ" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_vv0FypezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0FzZezEeOBeaAb9MJyhQ" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_vv0FypezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0FzpezEeOBeaAb9MJyhQ" name="Expense_Purpose">
      <ownedLiteral xmi:id="_vv0Fz5ezEeOBeaAb9MJyhQ" name="HOUSE_CARE" classifier="_vv0FzpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0F0JezEeOBeaAb9MJyhQ" name="CHILD_CARE" classifier="_vv0FzpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0F0ZezEeOBeaAb9MJyhQ" name="DEPENDENCE_CARE" classifier="_vv0FzpezEeOBeaAb9MJyhQ"/>
      <ownedLiteral xmi:id="_vv0F0pezEeOBeaAb9MJyhQ" name="OTHER" classifier="_vv0FzpezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv0F05ezEeOBeaAb9MJyhQ" name="Constants">
      <ownedLiteral xmi:id="_vv0F1JezEeOBeaAb9MJyhQ" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F1ZezEeOBeaAb9MJyhQ" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F1pezEeOBeaAb9MJyhQ" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F15ezEeOBeaAb9MJyhQ" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F2JezEeOBeaAb9MJyhQ" name="MINIMUM_SALARY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F2ZezEeOBeaAb9MJyhQ" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F2pezEeOBeaAb9MJyhQ" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F25ezEeOBeaAb9MJyhQ" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F3JezEeOBeaAb9MJyhQ" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F3ZezEeOBeaAb9MJyhQ" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F3pezEeOBeaAb9MJyhQ" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F35ezEeOBeaAb9MJyhQ" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F4JezEeOBeaAb9MJyhQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F4ZezEeOBeaAb9MJyhQ"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F4pezEeOBeaAb9MJyhQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F45ezEeOBeaAb9MJyhQ" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F5JezEeOBeaAb9MJyhQ" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F5ZezEeOBeaAb9MJyhQ" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F5pezEeOBeaAb9MJyhQ" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F55ezEeOBeaAb9MJyhQ" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F6JezEeOBeaAb9MJyhQ" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F6ZezEeOBeaAb9MJyhQ" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F6pezEeOBeaAb9MJyhQ" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F65ezEeOBeaAb9MJyhQ" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F7JezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIM_DAILY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F7ZezEeOBeaAb9MJyhQ" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F7pezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIM_MONTHLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F75ezEeOBeaAb9MJyhQ" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F8JezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIM_YEARLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F8ZezEeOBeaAb9MJyhQ" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F8pezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIP_DAILY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F85ezEeOBeaAb9MJyhQ" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F9JezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIP_MONTHLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F9ZezEeOBeaAb9MJyhQ" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F9pezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIP_YEARLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F95ezEeOBeaAb9MJyhQ" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F-JezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIS_DAILY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F-ZezEeOBeaAb9MJyhQ" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F-pezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIS_MONTHLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F-5ezEeOBeaAb9MJyhQ" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F_JezEeOBeaAb9MJyhQ" name="FLAT_RATE_CIS_YEARLY" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F_ZezEeOBeaAb9MJyhQ" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv0F_pezEeOBeaAb9MJyhQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_vv0F05ezEeOBeaAb9MJyhQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv0F_5ezEeOBeaAb9MJyhQ" value="480"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv0GAJezEeOBeaAb9MJyhQ" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GAZezEeOBeaAb9MJyhQ" name="Tax_Card">
        <ownedRule xmi:id="_vv0GApezEeOBeaAb9MJyhQ" name="SubjectToWithholdingTax-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GA5ezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GBJezEeOBeaAb9MJyhQ" name="Tax_Credits-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GBZezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GBpezEeOBeaAb9MJyhQ" name="Tax_Card_AC-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GB5ezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GCJezEeOBeaAb9MJyhQ" name="Tax_Card_FD-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GCZezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GCpezEeOBeaAb9MJyhQ" name="Tax_Card_DS-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GC5ezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GDJezEeOBeaAb9MJyhQ" name="Tax_Card_CE-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GDZezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv0GDpezEeOBeaAb9MJyhQ" name="Tax_Card_FO-constraint" constrainedElement="_vv0GAZezEeOBeaAb9MJyhQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GD5ezEeOBeaAb9MJyhQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vv0GEJezEeOBeaAb9MJyhQ" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GEZezEeOBeaAb9MJyhQ" name="tax_card_type" visibility="public" type="_vv0FrJezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GEpezEeOBeaAb9MJyhQ" name="tax_office" visibility="public" type="_vv0Fr5ezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GE5ezEeOBeaAb9MJyhQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GFJezEeOBeaAb9MJyhQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vu12AZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GFZezEeOBeaAb9MJyhQ" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GFpezEeOBeaAb9MJyhQ" name="income" visibility="private" type="_vvziF5ezEeOBeaAb9MJyhQ" association="_vv0FvpezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GF5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GGJezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GGZezEeOBeaAb9MJyhQ" name="tax_Class" visibility="private" type="_vvzh5JezEeOBeaAb9MJyhQ" association="_vv0FxJezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GGpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GG5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GHJezEeOBeaAb9MJyhQ" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GHZezEeOBeaAb9MJyhQ" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GHpezEeOBeaAb9MJyhQ" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GH5ezEeOBeaAb9MJyhQ" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GIJezEeOBeaAb9MJyhQ" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GIZezEeOBeaAb9MJyhQ" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GIpezEeOBeaAb9MJyhQ" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GI5ezEeOBeaAb9MJyhQ" name="tax_payers_address" visibility="public" type="_vvzg_pezEeOBeaAb9MJyhQ" isDerived="true"/>
        <ownedAttribute xmi:id="_vv0GJJezEeOBeaAb9MJyhQ" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GJZezEeOBeaAb9MJyhQ" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GJpezEeOBeaAb9MJyhQ" name="jobs_activity_type" visibility="public" type="_vv0FqJezEeOBeaAb9MJyhQ" isDerived="true"/>
        <ownedAttribute xmi:id="_vv0GJ5ezEeOBeaAb9MJyhQ" name="jobs_place_of_work" visibility="public" type="_vv0FuJezEeOBeaAb9MJyhQ" isDerived="true"/>
        <ownedAttribute xmi:id="_vv0GKJezEeOBeaAb9MJyhQ" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GKZezEeOBeaAb9MJyhQ" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GKpezEeOBeaAb9MJyhQ" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GK5ezEeOBeaAb9MJyhQ" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GLJezEeOBeaAb9MJyhQ" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GLZezEeOBeaAb9MJyhQ" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GLpezEeOBeaAb9MJyhQ" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GL5ezEeOBeaAb9MJyhQ" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GMJezEeOBeaAb9MJyhQ" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GMZezEeOBeaAb9MJyhQ" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GMpezEeOBeaAb9MJyhQ" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GM5ezEeOBeaAb9MJyhQ" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GNJezEeOBeaAb9MJyhQ" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GNZezEeOBeaAb9MJyhQ" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GNpezEeOBeaAb9MJyhQ" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GN5ezEeOBeaAb9MJyhQ" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GOJezEeOBeaAb9MJyhQ" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GOZezEeOBeaAb9MJyhQ" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GOpezEeOBeaAb9MJyhQ" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GO5ezEeOBeaAb9MJyhQ" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GPJezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vvzh2ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GPZezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GPpezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GP5ezEeOBeaAb9MJyhQ" name="income_Tax_Credit" visibility="private" type="_vv0GVZezEeOBeaAb9MJyhQ" aggregation="shared" association="_vv0GTJezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GQJezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GQZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GQpezEeOBeaAb9MJyhQ" name="income_Tax_Deduction" visibility="private" type="_vv0G1pezEeOBeaAb9MJyhQ" aggregation="shared" association="_vv0G1ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GQ5ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GRJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GRZezEeOBeaAb9MJyhQ" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GRpezEeOBeaAb9MJyhQ" name="previous" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0GTZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GR5ezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GSJezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GSZezEeOBeaAb9MJyhQ" name="current_tax_card" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0GTZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GSpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GS5ezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv0GTJezEeOBeaAb9MJyhQ" name="include" memberEnd="_vv0GYZezEeOBeaAb9MJyhQ _vv0GP5ezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv0GTZezEeOBeaAb9MJyhQ" name="invalidated by" memberEnd="_vv0GRpezEeOBeaAb9MJyhQ _vv0GSZezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv0GTpezEeOBeaAb9MJyhQ" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GT5ezEeOBeaAb9MJyhQ" name="CIM">
        <generalization xmi:id="_vv0GUJezEeOBeaAb9MJyhQ" general="_vv0GVZezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GUZezEeOBeaAb9MJyhQ" name="CIP">
        <generalization xmi:id="_vv0GUpezEeOBeaAb9MJyhQ" general="_vv0GVZezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GU5ezEeOBeaAb9MJyhQ" name="CIS">
        <generalization xmi:id="_vv0GVJezEeOBeaAb9MJyhQ" general="_vv0GVZezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GVZezEeOBeaAb9MJyhQ" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_vv0GVpezEeOBeaAb9MJyhQ" name="grantedBy" visibility="public" type="_vv0FkpezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GV5ezEeOBeaAb9MJyhQ" name="taxPayer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vv0FoZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GWJezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GWZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GWpezEeOBeaAb9MJyhQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GW5ezEeOBeaAb9MJyhQ" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GXJezEeOBeaAb9MJyhQ" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GXZezEeOBeaAb9MJyhQ" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GXpezEeOBeaAb9MJyhQ" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GX5ezEeOBeaAb9MJyhQ" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GYJezEeOBeaAb9MJyhQ" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GYZezEeOBeaAb9MJyhQ" name="taxation_Frame" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0GTJezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GYpezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GY5ezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv0GZJezEeOBeaAb9MJyhQ" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GZZezEeOBeaAb9MJyhQ" name="FD">
        <generalization xmi:id="_vv0GZpezEeOBeaAb9MJyhQ" general="_vv0G0JezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GZ5ezEeOBeaAb9MJyhQ" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GaJezEeOBeaAb9MJyhQ" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv0GaZezEeOBeaAb9MJyhQ" name="compute_distance_unit_between_home_and_workpalce">
          <eAnnotations xmi:id="_vv0GapezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0Ga5ezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vv0GbJezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GbZezEeOBeaAb9MJyhQ" name="FO">
        <generalization xmi:id="_vv0GbpezEeOBeaAb9MJyhQ" general="_vv0G0JezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0Gb5ezEeOBeaAb9MJyhQ" name="regular_flat_rate_for_FO" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GcJezEeOBeaAb9MJyhQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GcZezEeOBeaAb9MJyhQ" name="disability_flat_rate_for_FO" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GcpezEeOBeaAb9MJyhQ" name="rate_type_for_FO" visibility="public" type="_vv0Fx5ezEeOBeaAb9MJyhQ" isDerived="true"/>
        <ownedOperation xmi:id="_vv0Gc5ezEeOBeaAb9MJyhQ" name="compute_disability_flat_rate">
          <eAnnotations xmi:id="_vv0GdJezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GdZezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0GdpezEeOBeaAb9MJyhQ" name="compute_regular_flat_rate">
          <eAnnotations xmi:id="_vv0Gd5ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GeJezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GeZezEeOBeaAb9MJyhQ" name="CE">
        <eAnnotations xmi:id="_vv0GepezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_vv0Ge5ezEeOBeaAb9MJyhQ" general="_vv0G1pezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GfJezEeOBeaAb9MJyhQ" name="ce_deduction_type" visibility="public" type="_vv0FypezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GfZezEeOBeaAb9MJyhQ" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GfpezEeOBeaAb9MJyhQ" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv0Gf5ezEeOBeaAb9MJyhQ" name="compute_disability_flat_rate_for_CE" postcondition="_vv0GgpezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GgJezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GgZezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GgpezEeOBeaAb9MJyhQ" name="compute_disability_flat_rate" constrainedElement="_vv0Gf5ezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0Gg5ezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GhJezEeOBeaAb9MJyhQ" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0GhZezEeOBeaAb9MJyhQ" name="compute_dependent_relative_flat_rate_for_CE" postcondition="_vv0GiJezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GhpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0Gh5ezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GiJezEeOBeaAb9MJyhQ" name="dependent_relative_flat_rate" constrainedElement="_vv0GhZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GiZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GipezEeOBeaAb9MJyhQ" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0Gi5ezEeOBeaAb9MJyhQ" name="AC">
        <generalization xmi:id="_vv0GjJezEeOBeaAb9MJyhQ" general="_vv0G1pezEeOBeaAb9MJyhQ"/>
        <ownedOperation xmi:id="_vv0GjZezEeOBeaAb9MJyhQ" name="is_eligible_income_for_AC" postcondition="_vv0GkJezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GjpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0Gj5ezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GkJezEeOBeaAb9MJyhQ" name="is_eligible_income_for_AC" constrainedElement="_vv0GjZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GkZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GkpezEeOBeaAb9MJyhQ" name="IN_income" type="_vvziF5ezEeOBeaAb9MJyhQ"/>
          <ownedParameter xmi:id="_vv0Gk5ezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0GlJezEeOBeaAb9MJyhQ" name="is_eligible_income_for_AC_assisting_spouse" postcondition="_vv0Gl5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GlZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GlpezEeOBeaAb9MJyhQ" key="computation"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0Gl5ezEeOBeaAb9MJyhQ" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_vv0GlJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GmJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GmZezEeOBeaAb9MJyhQ" name="IN_income" type="_vvziF5ezEeOBeaAb9MJyhQ"/>
          <ownedParameter xmi:id="_vv0GmpezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0Gm5ezEeOBeaAb9MJyhQ" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_vv0GnJezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GnZezEeOBeaAb9MJyhQ" name="permanent_expense_category" visibility="public" type="_vv0FcpezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GnpezEeOBeaAb9MJyhQ" name="DS_for_Interest_Expense">
        <generalization xmi:id="_vv0Gn5ezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
        <ownedOperation xmi:id="_vv0GoJezEeOBeaAb9MJyhQ" name="compute_maximum_deductible_amount" postcondition="_vv0Go5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GoZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GopezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0Go5ezEeOBeaAb9MJyhQ" name="maximum_deductible_amount" constrainedElement="_vv0GoJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GpJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GpZezEeOBeaAb9MJyhQ" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv0GppezEeOBeaAb9MJyhQ" name="IN_children_with_allowances" type="_vvzhB5ezEeOBeaAb9MJyhQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0Gp5ezEeOBeaAb9MJyhQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0GqJezEeOBeaAb9MJyhQ"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv0GqZezEeOBeaAb9MJyhQ" name="IN_legal_union" type="_vvzhPZezEeOBeaAb9MJyhQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0GqpezEeOBeaAb9MJyhQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0Gq5ezEeOBeaAb9MJyhQ"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GrJezEeOBeaAb9MJyhQ" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_vv0GrZezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GrpezEeOBeaAb9MJyhQ" name="insurance_category" visibility="public" type="_vv0Fe5ezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0Gr5ezEeOBeaAb9MJyhQ" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_vv0GsJezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GsZezEeOBeaAb9MJyhQ" name="private_insurance_and_plan_category" visibility="public" type="_vv0FdZezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0GspezEeOBeaAb9MJyhQ" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0Gs5ezEeOBeaAb9MJyhQ" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0GtJezEeOBeaAb9MJyhQ" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv0GtZezEeOBeaAb9MJyhQ" name="compute_increase_for_life_insurance" postcondition="_vv0GuJezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GtpezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0Gt5ezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GuJezEeOBeaAb9MJyhQ" name="get_increase_for_life_insurance" constrainedElement="_vv0GtZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GuZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GupezEeOBeaAb9MJyhQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0Gu5ezEeOBeaAb9MJyhQ" name="compute_maximum_deductible_amount_for_private_insruance" postcondition="_vv0GvpezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GvJezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GvZezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GvpezEeOBeaAb9MJyhQ" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_vv0Gu5ezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0Gv5ezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_vv0GwJezEeOBeaAb9MJyhQ" name="compute_maximum_deductible_amount_for_old_age_pension_plan" postcondition="_vv0Gw5ezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GwZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0GwpezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0Gw5ezEeOBeaAb9MJyhQ" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_vv0GwJezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GxJezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0GxZezEeOBeaAb9MJyhQ" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_vv0GxpezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0Gx5ezEeOBeaAb9MJyhQ" name="DS_for_Donation">
        <generalization xmi:id="_vv0GyJezEeOBeaAb9MJyhQ" general="_vv0G0pezEeOBeaAb9MJyhQ"/>
        <ownedOperation xmi:id="_vv0GyZezEeOBeaAb9MJyhQ" name="compute_maximum_deductible_amount_for_donation" postcondition="_vv0GzJezEeOBeaAb9MJyhQ">
          <eAnnotations xmi:id="_vv0GypezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv0Gy5ezEeOBeaAb9MJyhQ" key="lookup"/>
          </eAnnotations>
          <ownedRule xmi:id="_vv0GzJezEeOBeaAb9MJyhQ" name="maximum_deductible_amount" constrainedElement="_vv0GyZezEeOBeaAb9MJyhQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv0GzZezEeOBeaAb9MJyhQ">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv0GzpezEeOBeaAb9MJyhQ" name="IN_maximum_percentage" type="_vv0F05ezEeOBeaAb9MJyhQ"/>
          <ownedParameter xmi:id="_vv0Gz5ezEeOBeaAb9MJyhQ" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0G0JezEeOBeaAb9MJyhQ" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_vv0G0ZezEeOBeaAb9MJyhQ" general="_vv0G1pezEeOBeaAb9MJyhQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0G0pezEeOBeaAb9MJyhQ" name="DS">
        <generalization xmi:id="_vv0G05ezEeOBeaAb9MJyhQ" general="_vv0G1pezEeOBeaAb9MJyhQ"/>
        <ownedAttribute xmi:id="_vv0G1JezEeOBeaAb9MJyhQ" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv0G1ZezEeOBeaAb9MJyhQ" name="considers" memberEnd="_vv0G35ezEeOBeaAb9MJyhQ _vv0GQpezEeOBeaAb9MJyhQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv0G1pezEeOBeaAb9MJyhQ" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_vv0G15ezEeOBeaAb9MJyhQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G2JezEeOBeaAb9MJyhQ" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G2ZezEeOBeaAb9MJyhQ" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G2pezEeOBeaAb9MJyhQ" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G25ezEeOBeaAb9MJyhQ" name="tax_Payer" visibility="private" type="_vvzhdpezEeOBeaAb9MJyhQ" association="_vv0FxZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0G3JezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0G3ZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G3pezEeOBeaAb9MJyhQ" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G35ezEeOBeaAb9MJyhQ" name="tax_card" visibility="private" type="_vv0GAZezEeOBeaAb9MJyhQ" association="_vv0G1ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0G4JezEeOBeaAb9MJyhQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0G4ZezEeOBeaAb9MJyhQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv0G4pezEeOBeaAb9MJyhQ" name="expenses" visibility="private" type="_vv0FgJezEeOBeaAb9MJyhQ" association="_vv0G5ZezEeOBeaAb9MJyhQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv0G45ezEeOBeaAb9MJyhQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv0G5JezEeOBeaAb9MJyhQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv0G5ZezEeOBeaAb9MJyhQ" name="is computed based on" memberEnd="_vv0G4pezEeOBeaAb9MJyhQ _vv0FjpezEeOBeaAb9MJyhQ"/>
    </packagedElement>
    <profileApplication xmi:id="_vv0G5pezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G55ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_vv0G6JezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G6ZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_vv1UYJezEeOBeaAb9MJyhQ"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_vv1UXpezEeOBeaAb9MJyhQ"/>
    </profileApplication>
    <profileApplication xmi:id="_vv0G6pezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G65ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_vu0ngpezEeOBeaAb9MJyhQ"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_vu0ngJezEeOBeaAb9MJyhQ"/>
    </profileApplication>
    <profileApplication xmi:id="_vv0G7JezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G7ZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_vu3qa5ezEeOBeaAb9MJyhQ"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_vu3qaZezEeOBeaAb9MJyhQ"/>
    </profileApplication>
    <profileApplication xmi:id="_vv0G7pezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G75ezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_vv0JrJezEeOBeaAb9MJyhQ"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_vv0JqpezEeOBeaAb9MJyhQ"/>
    </profileApplication>
    <profileApplication xmi:id="_vv0G8JezEeOBeaAb9MJyhQ">
      <eAnnotations xmi:id="_vv0G8ZezEeOBeaAb9MJyhQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="CTIE_Profile_Final.profile.uml#_vvWNl5ezEeOBeaAb9MJyhQ"/>
      </eAnnotations>
      <appliedProfile href="CTIE_Profile_Final.profile.uml#_vvWNlZezEeOBeaAb9MJyhQ"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_vv0G8pezEeOBeaAb9MJyhQ" base_Comment="_vvzh-pezEeOBeaAb9MJyhQ"/>
  <Default:Documentation xmi:id="_vv0G85ezEeOBeaAb9MJyhQ" base_Comment="_vvzhPpezEeOBeaAb9MJyhQ"/>
</xmi:XMI>
