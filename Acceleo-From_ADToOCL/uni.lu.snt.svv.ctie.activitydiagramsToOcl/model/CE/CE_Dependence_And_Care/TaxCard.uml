<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_vwz-IJpAEeOXzvVK2MY5wA">
  <uml:Package xmi:id="_vv1GqZpAEeOXzvVK2MY5wA" name="TaxCard">
    <packageImport xmi:id="_vv1GqppAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_vv1Gq5pAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_vv1GrJpAEeOXzvVK2MY5wA">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_vv258ppAEeOXzvVK2MY5wA"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1GrZpAEeOXzvVK2MY5wA" name="Tax_Card_Domain">
      <packageImport xmi:id="_vv1GrppAEeOXzvVK2MY5wA" importedPackage="_vv1sFZpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_vv1Gr5pAEeOXzvVK2MY5wA" importedPackage="_vv1GtJpAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_vv1GsJpAEeOXzvVK2MY5wA" importedPackage="_vv1r_5pAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_vv1GsZpAEeOXzvVK2MY5wA" importedPackage="_vv1qg5pAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_vv1GsppAEeOXzvVK2MY5wA" importedPackage="_vv1qw5pAEeOXzvVK2MY5wA"/>
      <packageImport xmi:id="_vv1Gs5pAEeOXzvVK2MY5wA" importedPackage="_vv1rsZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1GtJpAEeOXzvVK2MY5wA" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1GtZpAEeOXzvVK2MY5wA" name="taxed under" memberEnd="_vv1qRZpAEeOXzvVK2MY5wA _vv1qdJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1GtppAEeOXzvVK2MY5wA" name="Income_Tax">
        <ownedAttribute xmi:id="_vv1Gt5pAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1qcZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1GuJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1GuZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1GuppAEeOXzvVK2MY5wA" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1Gu5pAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1GvJpAEeOXzvVK2MY5wA" name="Address">
        <ownedAttribute xmi:id="_vv1GvZpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_vv1p65pAEeOXzvVK2MY5wA" association="_vv1qaJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1GvppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1Gv5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1GwJpAEeOXzvVK2MY5wA" name="country" visibility="public" type="_vv1rSZpAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_vv1GwZpAEeOXzvVK2MY5wA" name="LU" type="_vv1rSZpAEeOXzvVK2MY5wA" instance="_vv1rSppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1GwppAEeOXzvVK2MY5wA" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1Gw5pAEeOXzvVK2MY5wA" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1GxJpAEeOXzvVK2MY5wA" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1GxZpAEeOXzvVK2MY5wA" name="Dependent">
        <generalization xmi:id="_vv1GxppAEeOXzvVK2MY5wA" general="_vv1p65pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1Gx5pAEeOXzvVK2MY5wA" name="dependent_type" visibility="public" type="_vv1rbppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1GyJpAEeOXzvVK2MY5wA" name="household" visibility="private" type="_vv1p0ppAEeOXzvVK2MY5wA" association="_vv1qb5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1GyZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1GyppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1Gy5pAEeOXzvVK2MY5wA" name="responsible_person" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1qbppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1GzJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1GzZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1GzppAEeOXzvVK2MY5wA" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1psJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1psZpAEeOXzvVK2MY5wA" name="expense" visibility="private" type="_vv1rMJpAEeOXzvVK2MY5wA" association="_vv1qcJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1psppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1ps5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1ptJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1qbZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1ptZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1ptppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1pt5pAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_vv1puJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1puZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1puppAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_vv1pu5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1pvJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1pvZpAEeOXzvVK2MY5wA" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_vv1pvppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1pv5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1pwJpAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_vv1pwppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1pwZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1pwppAEeOXzvVK2MY5wA" name="is_dependent_following_continued_studies" constrainedElement="_vv1pwJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1pw5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1pxJpAEeOXzvVK2MY5wA" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1pxZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1pxppAEeOXzvVK2MY5wA" name="External_Allowance">
        <ownedAttribute xmi:id="_vv1px5pAEeOXzvVK2MY5wA" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1pyJpAEeOXzvVK2MY5wA" name="grantor" visibility="public" type="_vv1rQZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1pyZpAEeOXzvVK2MY5wA" name="person" visibility="private" type="_vv1p65pAEeOXzvVK2MY5wA" association="_vv1qaZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1pyppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1py5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1pzJpAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1pzZpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1pzppAEeOXzvVK2MY5wA" name="Fiscal_Address">
        <generalization xmi:id="_vv1pz5pAEeOXzvVK2MY5wA" general="_vv1GvJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p0JpAEeOXzvVK2MY5wA" name="Habitual_Address">
        <generalization xmi:id="_vv1p0ZpAEeOXzvVK2MY5wA" general="_vv1GvJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p0ppAEeOXzvVK2MY5wA" name="Household">
        <ownedAttribute xmi:id="_vv1p05pAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1qbJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p1JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p1ZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p1ppAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_vv1GxZpAEeOXzvVK2MY5wA" association="_vv1qb5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p15pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p2JpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p2ZpAEeOXzvVK2MY5wA" name="Legal_Union_Record">
        <ownedComment xmi:id="_vv1p2ppAEeOXzvVK2MY5wA" annotatedElement="_vv1p2ZpAEeOXzvVK2MY5wA">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_vv1p25pAEeOXzvVK2MY5wA" name="Legal_Union-different_people-constraint" constrainedElement="_vv1p2ZpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1p3JpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vv1p3ZpAEeOXzvVK2MY5wA" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p3ppAEeOXzvVK2MY5wA" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p35pAEeOXzvVK2MY5wA" name="individual_A" visibility="private" type="_vv1p65pAEeOXzvVK2MY5wA" association="_vv1qa5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p4JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p4ZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p4ppAEeOXzvVK2MY5wA" name="individual_B" visibility="private" type="_vv1p65pAEeOXzvVK2MY5wA" association="_vv1qappAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p45pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p5JpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p5ZpAEeOXzvVK2MY5wA" name="Marriage_Record">
        <generalization xmi:id="_vv1p5ppAEeOXzvVK2MY5wA" general="_vv1p2ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p55pAEeOXzvVK2MY5wA" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_vv1p6JpAEeOXzvVK2MY5wA" general="_vv1qEppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p6ZpAEeOXzvVK2MY5wA" name="Partnership_Record">
        <generalization xmi:id="_vv1p6ppAEeOXzvVK2MY5wA" general="_vv1p2ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1p65pAEeOXzvVK2MY5wA" name="Physical_Person">
        <ownedAttribute xmi:id="_vv1p7JpAEeOXzvVK2MY5wA" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p7ZpAEeOXzvVK2MY5wA" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p7ppAEeOXzvVK2MY5wA" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p75pAEeOXzvVK2MY5wA" name="allowances" visibility="private" type="_vv1pxppAEeOXzvVK2MY5wA" association="_vv1qaZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p8JpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p8ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p8ppAEeOXzvVK2MY5wA" name="addresses" visibility="private" type="_vv1GvJpAEeOXzvVK2MY5wA" association="_vv1qaJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p85pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p9JpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p9ZpAEeOXzvVK2MY5wA" name="legal_union_A" visibility="private" type="_vv1p2ZpAEeOXzvVK2MY5wA" association="_vv1qa5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p9ppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p95pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p-JpAEeOXzvVK2MY5wA" name="legal_union_B" visibility="private" type="_vv1p2ZpAEeOXzvVK2MY5wA" association="_vv1qappAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1p-ZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p-ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p-5pAEeOXzvVK2MY5wA" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p_JpAEeOXzvVK2MY5wA" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv1p_ZpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1p_ppAEeOXzvVK2MY5wA" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1p_5pAEeOXzvVK2MY5wA" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_vv1qAJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv1qAZpAEeOXzvVK2MY5wA" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vv1qAppAEeOXzvVK2MY5wA" name="IN_person" type="_vv1p65pAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_vv1qA5pAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1qBJpAEeOXzvVK2MY5wA" name="is_person_assisting_spouse" isQuery="true" postcondition="_vv1qBppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qBZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qBppAEeOXzvVK2MY5wA" name="is_assisting_spouse" constrainedElement="_vv1qBJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qB5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qCJpAEeOXzvVK2MY5wA" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1qCZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1qCppAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_vv1qDJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qC5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qDJpAEeOXzvVK2MY5wA" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_vv1qCppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qDZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qDppAEeOXzvVK2MY5wA" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1qD5pAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qEJpAEeOXzvVK2MY5wA" name="Resident_Tax_Payer">
        <generalization xmi:id="_vv1qEZpAEeOXzvVK2MY5wA" general="_vv1qEppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qEppAEeOXzvVK2MY5wA" name="Tax_Payer">
        <ownedRule xmi:id="_vv1qE5pAEeOXzvVK2MY5wA" name="NonResidentTaxPayer-constraint" constrainedElement="_vv1p55pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qFJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qFZpAEeOXzvVK2MY5wA" name="ResidentTaxPayer-constraint" constrainedElement="_vv1qEJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qFppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qF5pAEeOXzvVK2MY5wA" name="SubjectToIncomeTax-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qGJpAEeOXzvVK2MY5wA" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qGZpAEeOXzvVK2MY5wA" name="TaxCredit-CIS-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qGppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qG5pAEeOXzvVK2MY5wA" name="TaxCredit-CIP-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qHJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qHZpAEeOXzvVK2MY5wA" name="TaxCredit-CIM-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qHppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qH5pAEeOXzvVK2MY5wA" name="Legal_Union-monogamus-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qIJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qIZpAEeOXzvVK2MY5wA" name="TaxClass-unique-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qIppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qI5pAEeOXzvVK2MY5wA" name="TaxDeduction-CE-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qJJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qJZpAEeOXzvVK2MY5wA" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qJppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qJ5pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qKJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qKZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qKppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qK5pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qLJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qLZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qLppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qL5pAEeOXzvVK2MY5wA" name="TaxDeduction-DS-5-donation" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qMJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qMZpAEeOXzvVK2MY5wA" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qMppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qM5pAEeOXzvVK2MY5wA" name="TaxCard-unique-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qNJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qNZpAEeOXzvVK2MY5wA" name="TaxDeduction-FD-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qNppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qN5pAEeOXzvVK2MY5wA" name="TaxDeduction-FO-constraint" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qOJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qOZpAEeOXzvVK2MY5wA" name="test_for_iterate" constrainedElement="_vv1qEppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qOppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_vv1qO5pAEeOXzvVK2MY5wA" general="_vv1p65pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1qPJpAEeOXzvVK2MY5wA" name="incomes" visibility="private" type="_vv1qpJpAEeOXzvVK2MY5wA" association="_vv1rSJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qPZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qPppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qP5pAEeOXzvVK2MY5wA" name="incomeTax" visibility="private" type="_vv1GtppAEeOXzvVK2MY5wA" association="_vv1qcZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qQJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qQZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qQppAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_vv1sBppAEeOXzvVK2MY5wA" association="_vv1rUJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qQ5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qRJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qRZpAEeOXzvVK2MY5wA" name="tax_class" visibility="private" type="_vv1qcppAEeOXzvVK2MY5wA" association="_vv1GtZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qRppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qR5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qSJpAEeOXzvVK2MY5wA" name="household" visibility="private" type="_vv1p0ppAEeOXzvVK2MY5wA" association="_vv1qbJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qSZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qSppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qS5pAEeOXzvVK2MY5wA" name="dependents" visibility="private" type="_vv1GxZpAEeOXzvVK2MY5wA" association="_vv1qbppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qTJpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qTZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qTppAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_vv1sfJpAEeOXzvVK2MY5wA" association="_vv1rdJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qT5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qUJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qUZpAEeOXzvVK2MY5wA" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qUppAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_vv1rMJpAEeOXzvVK2MY5wA" association="_vv1rdZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qU5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qVJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qVZpAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_vv1GxZpAEeOXzvVK2MY5wA" association="_vv1qbZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qVppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qV5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qWJpAEeOXzvVK2MY5wA" name="tax_Card" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" aggregation="shared" association="_vv1qZ5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qWZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qWppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qW5pAEeOXzvVK2MY5wA" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1qXJpAEeOXzvVK2MY5wA" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_vv1qXppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qXZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qXppAEeOXzvVK2MY5wA" name="is_child_part_of_household" constrainedElement="_vv1qXJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qX5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qYJpAEeOXzvVK2MY5wA" name="IN_dependent" type="_vv1GxZpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_vv1qYZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1qYppAEeOXzvVK2MY5wA" name="number_of_months_of_allowance" isQuery="true" postcondition="_vv1qZJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qY5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qZJpAEeOXzvVK2MY5wA" name="number_od_months_of_allowance" constrainedElement="_vv1qYppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qZZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qZppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qZ5pAEeOXzvVK2MY5wA" name="" memberEnd="_vv1qWJpAEeOXzvVK2MY5wA _vv1r7ZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qaJpAEeOXzvVK2MY5wA" name="located at" memberEnd="_vv1p8ppAEeOXzvVK2MY5wA _vv1GvZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qaZpAEeOXzvVK2MY5wA" name="receives" memberEnd="_vv1p75pAEeOXzvVK2MY5wA _vv1pyZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qappAEeOXzvVK2MY5wA" name="person B" memberEnd="_vv1p4ppAEeOXzvVK2MY5wA _vv1p-JpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qa5pAEeOXzvVK2MY5wA" name="person A" memberEnd="_vv1p35pAEeOXzvVK2MY5wA _vv1p9ZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qbJpAEeOXzvVK2MY5wA" name="maintains" memberEnd="_vv1qSJpAEeOXzvVK2MY5wA _vv1p05pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qbZpAEeOXzvVK2MY5wA" name="as tax payer" memberEnd="_vv1ptJpAEeOXzvVK2MY5wA _vv1qVZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qbppAEeOXzvVK2MY5wA" name="supports" memberEnd="_vv1qS5pAEeOXzvVK2MY5wA _vv1Gy5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qb5pAEeOXzvVK2MY5wA" name="is part of" memberEnd="_vv1GyJpAEeOXzvVK2MY5wA _vv1p1ppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qcJpAEeOXzvVK2MY5wA" name="incurred over" memberEnd="_vv1rN5pAEeOXzvVK2MY5wA _vv1psZpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qcZpAEeOXzvVK2MY5wA" name="is subject to" memberEnd="_vv1qP5pAEeOXzvVK2MY5wA _vv1Gt5pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qcppAEeOXzvVK2MY5wA" name="Tax_Class">
        <ownedAttribute xmi:id="_vv1qc5pAEeOXzvVK2MY5wA" name="tax_class" visibility="public" type="_vv1rY5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1qdJpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1GtZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qdZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qdppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qd5pAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qeJpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qeZpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1rc5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qeppAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qe5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qfJpAEeOXzvVK2MY5wA" name="current_tax_class" visibility="private" type="_vv1qcppAEeOXzvVK2MY5wA" association="_vv1qgppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qfZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qfppAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qf5pAEeOXzvVK2MY5wA" name="prev" visibility="private" type="_vv1qcppAEeOXzvVK2MY5wA" association="_vv1qgppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qgJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qgZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qgppAEeOXzvVK2MY5wA" name="replaced by" memberEnd="_vv1qfJpAEeOXzvVK2MY5wA _vv1qf5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1qg5pAEeOXzvVK2MY5wA" name="Income_Concepts">
      <ownedComment xmi:id="_vv1qhJpAEeOXzvVK2MY5wA" annotatedElement="_vv1qnppAEeOXzvVK2MY5wA">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qhZpAEeOXzvVK2MY5wA" name="Income_Type">
        <ownedAttribute xmi:id="_vv1qhppAEeOXzvVK2MY5wA" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_vv1qh5pAEeOXzvVK2MY5wA" annotatedElement="_vv1qhppAEeOXzvVK2MY5wA">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qiJpAEeOXzvVK2MY5wA" name="income" visibility="private" type="_vv1qpJpAEeOXzvVK2MY5wA" association="_vv1qn5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qiZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qippAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qi5pAEeOXzvVK2MY5wA" name="Trade_and_Business_Income">
        <generalization xmi:id="_vv1qjJpAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qjZpAEeOXzvVK2MY5wA" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_vv1qjppAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qj5pAEeOXzvVK2MY5wA" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_vv1qkJpAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qkZpAEeOXzvVK2MY5wA" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_vv1qkppAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1qk5pAEeOXzvVK2MY5wA" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1qlJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qlZpAEeOXzvVK2MY5wA" name="Capital_and_Investments_Income">
        <generalization xmi:id="_vv1qlppAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1ql5pAEeOXzvVK2MY5wA" name="Employment_Income">
        <generalization xmi:id="_vv1qmJpAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qmZpAEeOXzvVK2MY5wA" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_vv1qmppAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qm5pAEeOXzvVK2MY5wA" name="Sundry_Income">
        <generalization xmi:id="_vv1qnJpAEeOXzvVK2MY5wA" general="_vv1qhZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qnZpAEeOXzvVK2MY5wA" name="Directors_Fee">
        <generalization xmi:id="_vv1qnppAEeOXzvVK2MY5wA" general="_vv1qj5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1qn5pAEeOXzvVK2MY5wA" name="has as type" memberEnd="_vv1qs5pAEeOXzvVK2MY5wA _vv1qiJpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qoJpAEeOXzvVK2MY5wA" name="Foreign_Income">
        <generalization xmi:id="_vv1qoZpAEeOXzvVK2MY5wA" general="_vv1qpJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qoppAEeOXzvVK2MY5wA" name="Local_Income">
        <generalization xmi:id="_vv1qo5pAEeOXzvVK2MY5wA" general="_vv1qpJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qpJpAEeOXzvVK2MY5wA" name="Income">
        <ownedRule xmi:id="_vv1qpZpAEeOXzvVK2MY5wA" name="Tax_Deduction_FD-constraint" constrainedElement="_vv1qpJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qpppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1qp5pAEeOXzvVK2MY5wA" name="Tax_Deduction_FO-constraint" constrainedElement="_vv1qpJpAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qqJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vv1qqZpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1rSJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qqppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qq5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qrJpAEeOXzvVK2MY5wA" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qrZpAEeOXzvVK2MY5wA" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qrppAEeOXzvVK2MY5wA" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qr5pAEeOXzvVK2MY5wA" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qsJpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1rbZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qsZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qsppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qs5pAEeOXzvVK2MY5wA" name="income_type" visibility="private" type="_vv1qhZpAEeOXzvVK2MY5wA" association="_vv1qn5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qtJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1qtZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1qtppAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_vv1rMJpAEeOXzvVK2MY5wA" association="_vv1rL5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1qt5pAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1quJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1quZpAEeOXzvVK2MY5wA" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1quppAEeOXzvVK2MY5wA" name="compute_duration_of_contract" isQuery="true" postcondition="_vv1qvJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qu5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qvJpAEeOXzvVK2MY5wA" name="get_duration" constrainedElement="_vv1quppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qvZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qvppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1qv5pAEeOXzvVK2MY5wA" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_vv1qwJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1qwZpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1qwppAEeOXzvVK2MY5wA" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1qw5pAEeOXzvVK2MY5wA" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qxJpAEeOXzvVK2MY5wA" name="Permanent_Expense">
        <generalization xmi:id="_vv1qxZpAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1qxppAEeOXzvVK2MY5wA" name="category" visibility="public" type="_vv1rIppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1qx5pAEeOXzvVK2MY5wA" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1qyJpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1qyZpAEeOXzvVK2MY5wA" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_vv1qy5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1qyppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1qy5pAEeOXzvVK2MY5wA" name="is_eligible" constrainedElement="_vv1qyZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1qzJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1qzZpAEeOXzvVK2MY5wA" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1qzppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1qz5pAEeOXzvVK2MY5wA" name="Interest_Expense">
        <generalization xmi:id="_vv1q0JpAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1q0ZpAEeOXzvVK2MY5wA" name="Special_Expense_DS">
        <generalization xmi:id="_vv1q0ppAEeOXzvVK2MY5wA" general="_vv1rMJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1q05pAEeOXzvVK2MY5wA" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_vv1q1JpAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q1ZpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_vv1rJZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q1ppAEeOXzvVK2MY5wA" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q15pAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_vv1q2JpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1q2ZpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1q2ppAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_vv1q3JpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1q25pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1q3JpAEeOXzvVK2MY5wA" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_vv1q2ppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1q3ZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1q3ppAEeOXzvVK2MY5wA" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1q35pAEeOXzvVK2MY5wA" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_vv1q4JpAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q4ZpAEeOXzvVK2MY5wA" name="category" visibility="public" type="_vv1rK5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q4ppAEeOXzvVK2MY5wA" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1q45pAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1q5JpAEeOXzvVK2MY5wA" name="Donation">
        <generalization xmi:id="_vv1q5ZpAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q5ppAEeOXzvVK2MY5wA" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q55pAEeOXzvVK2MY5wA" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1q6JpAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q6ZpAEeOXzvVK2MY5wA" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1q6ppAEeOXzvVK2MY5wA" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_vv1q7JpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1q65pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1q7JpAEeOXzvVK2MY5wA" name="is_leagaly_approved_beneficiary" constrainedElement="_vv1q6ppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1q7ZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1q7ppAEeOXzvVK2MY5wA" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1q75pAEeOXzvVK2MY5wA" name="Loss_Carryforward">
        <ownedRule xmi:id="_vv1q8JpAEeOXzvVK2MY5wA" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_vv1q75pAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1q8ZpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_vv1q8ppAEeOXzvVK2MY5wA" general="_vv1q0ZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1q85pAEeOXzvVK2MY5wA" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q9JpAEeOXzvVK2MY5wA" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q9ZpAEeOXzvVK2MY5wA" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1q9ppAEeOXzvVK2MY5wA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1q95pAEeOXzvVK2MY5wA" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_vv1q-JpAEeOXzvVK2MY5wA" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1q-ZpAEeOXzvVK2MY5wA" name="is_accountability_regular" isQuery="true" postcondition="_vv1q-5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1q-ppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1q-5pAEeOXzvVK2MY5wA" name="is_accounatbility_regular" constrainedElement="_vv1q-ZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1q_JpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1q_ZpAEeOXzvVK2MY5wA" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1q_ppAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1q_5pAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" isQuery="true" postcondition="_vv1rAZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1rAJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1rAZpAEeOXzvVK2MY5wA" name="is_compensated_by_other_means" constrainedElement="_vv1q_5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rAppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1rA5pAEeOXzvVK2MY5wA" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1rBJpAEeOXzvVK2MY5wA" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_vv1rBppAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1rBZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1rBppAEeOXzvVK2MY5wA" name="partner_in_business" constrainedElement="_vv1rBJpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rB5pAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1rCJpAEeOXzvVK2MY5wA" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1rCZpAEeOXzvVK2MY5wA" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_vv1rC5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1rCppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1rC5pAEeOXzvVK2MY5wA" name="inherited_business_ownership" constrainedElement="_vv1rCZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rDJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1rDZpAEeOXzvVK2MY5wA" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rDppAEeOXzvVK2MY5wA" name="Spousal_Expense_AC">
        <generalization xmi:id="_vv1rD5pAEeOXzvVK2MY5wA" general="_vv1rMJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rEJpAEeOXzvVK2MY5wA" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_vv1rEZpAEeOXzvVK2MY5wA" general="_vv1rMJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1rEppAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rE5pAEeOXzvVK2MY5wA" name="ce_type" visibility="public" type="_vv1reZpAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_vv1rFJpAEeOXzvVK2MY5wA" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_vv1rFZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1rFppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1rF5pAEeOXzvVK2MY5wA" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_vv1rGZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1rGJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1rGZpAEeOXzvVK2MY5wA" name="thresholded_deduction_percentage" constrainedElement="_vv1rF5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rGppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1rG5pAEeOXzvVK2MY5wA" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rHJpAEeOXzvVK2MY5wA" name="Travel_Expense_FD">
        <generalization xmi:id="_vv1rHZpAEeOXzvVK2MY5wA" general="_vv1rIJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rHppAEeOXzvVK2MY5wA" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_vv1rH5pAEeOXzvVK2MY5wA" general="_vv1rIJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rIJpAEeOXzvVK2MY5wA" name="Professional_Expense">
        <generalization xmi:id="_vv1rIZpAEeOXzvVK2MY5wA" general="_vv1rMJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rIppAEeOXzvVK2MY5wA" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_vv1rI5pAEeOXzvVK2MY5wA" name="MISCELLANEOUS_DEBT" classifier="_vv1rIppAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rJJpAEeOXzvVK2MY5wA" name="ALIMONY" classifier="_vv1rIppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rJZpAEeOXzvVK2MY5wA" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_vv1rJppAEeOXzvVK2MY5wA" name="PRIVATE_INSURANCE" classifier="_vv1rJZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rJ5pAEeOXzvVK2MY5wA" name="PRIVATE_LIFE_INSURANCE" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rKJpAEeOXzvVK2MY5wA" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_vv1rJZpAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rKZpAEeOXzvVK2MY5wA" name="HOUSING_SAVING_PLAN" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rKppAEeOXzvVK2MY5wA" name="OLD_AGE_PENSION_PLAN" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rK5pAEeOXzvVK2MY5wA" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_vv1rLJpAEeOXzvVK2MY5wA" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rLZpAEeOXzvVK2MY5wA" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
        <ownedLiteral xmi:id="_vv1rLppAEeOXzvVK2MY5wA" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_vv1rK5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1rL5pAEeOXzvVK2MY5wA" name="influences" memberEnd="_vv1rO5pAEeOXzvVK2MY5wA _vv1qtppAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rMJpAEeOXzvVK2MY5wA" name="Expense">
        <ownedAttribute xmi:id="_vv1rMZpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1rdZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rMppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rM5pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rNJpAEeOXzvVK2MY5wA" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rNZpAEeOXzvVK2MY5wA" name="expense_purpose" visibility="public" type="_vv1rfZpAEeOXzvVK2MY5wA">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_vv1rNppAEeOXzvVK2MY5wA" name="OTHER" type="_vv1rfZpAEeOXzvVK2MY5wA" instance="_vv1rgZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rN5pAEeOXzvVK2MY5wA" name="dependent" visibility="private" type="_vv1GxZpAEeOXzvVK2MY5wA" association="_vv1qcJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rOJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rOZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rOppAEeOXzvVK2MY5wA" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rO5pAEeOXzvVK2MY5wA" name="income" visibility="private" type="_vv1qpJpAEeOXzvVK2MY5wA" association="_vv1rL5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rPJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rPZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rPppAEeOXzvVK2MY5wA" name="deduction" visibility="private" type="_vv1sfJpAEeOXzvVK2MY5wA" association="_vv1si5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rP5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rQJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rQZpAEeOXzvVK2MY5wA" name="Grantor">
      <ownedLiteral xmi:id="_vv1rQppAEeOXzvVK2MY5wA" name="ACD" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rQ5pAEeOXzvVK2MY5wA" name="Employer" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rRJpAEeOXzvVK2MY5wA" name="CNPF" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rRZpAEeOXzvVK2MY5wA" name="CEDIES" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rRppAEeOXzvVK2MY5wA" name="SNJ" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rR5pAEeOXzvVK2MY5wA" name="CNAP" classifier="_vv1rQZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rSJpAEeOXzvVK2MY5wA" name="earns" memberEnd="_vv1qPJpAEeOXzvVK2MY5wA _vv1qqZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rSZpAEeOXzvVK2MY5wA" name="Country">
      <ownedLiteral xmi:id="_vv1rSppAEeOXzvVK2MY5wA" name="LU" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rS5pAEeOXzvVK2MY5wA" name="FR" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rTJpAEeOXzvVK2MY5wA" name="BE" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rTZpAEeOXzvVK2MY5wA" name="DE" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rTppAEeOXzvVK2MY5wA" name="NL" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rT5pAEeOXzvVK2MY5wA" name="OTHER" classifier="_vv1rSZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rUJpAEeOXzvVK2MY5wA" name="credited for" memberEnd="_vv1qQppAEeOXzvVK2MY5wA _vv1sCJpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_vv1rUZpAEeOXzvVK2MY5wA" name="Date">
      <ownedAttribute xmi:id="_vv1rUppAEeOXzvVK2MY5wA" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rU5pAEeOXzvVK2MY5wA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rVJpAEeOXzvVK2MY5wA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_vv1rVZpAEeOXzvVK2MY5wA" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_vv1rVppAEeOXzvVK2MY5wA" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rV5pAEeOXzvVK2MY5wA" name="Job_Activity">
      <ownedLiteral xmi:id="_vv1rWJpAEeOXzvVK2MY5wA" name="Salary" classifier="_vv1rV5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rWZpAEeOXzvVK2MY5wA" name="Pension" classifier="_vv1rV5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rWppAEeOXzvVK2MY5wA" name="Annuity" classifier="_vv1rV5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rW5pAEeOXzvVK2MY5wA" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_vv1rXJpAEeOXzvVK2MY5wA" name="Principal" classifier="_vv1rW5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rXZpAEeOXzvVK2MY5wA" name="Additional" classifier="_vv1rW5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rXppAEeOXzvVK2MY5wA" name="Tax_Office">
      <ownedLiteral xmi:id="_vv1rX5pAEeOXzvVK2MY5wA" name="RTS_2" classifier="_vv1rXppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rYJpAEeOXzvVK2MY5wA" name="RTS_3" classifier="_vv1rXppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rYZpAEeOXzvVK2MY5wA" name="RTS_Esch" classifier="_vv1rXppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rYppAEeOXzvVK2MY5wA" name="RTS_Ettelbruck" classifier="_vv1rXppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rY5pAEeOXzvVK2MY5wA" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_vv1rZJpAEeOXzvVK2MY5wA" name="One" classifier="_vv1rY5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rZZpAEeOXzvVK2MY5wA" name="One_A" classifier="_vv1rY5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rZppAEeOXzvVK2MY5wA" name="Two" classifier="_vv1rY5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rZ5pAEeOXzvVK2MY5wA" name="Town">
      <ownedLiteral xmi:id="_vv1raJpAEeOXzvVK2MY5wA" name="Luxembourg_city" classifier="_vv1rZ5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1raZpAEeOXzvVK2MY5wA" name="Bertrange" classifier="_vv1rZ5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rappAEeOXzvVK2MY5wA" name="Strassen" classifier="_vv1rZ5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1ra5pAEeOXzvVK2MY5wA" name="Bettembourg" classifier="_vv1rZ5pAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rbJpAEeOXzvVK2MY5wA" name="Beaufort" classifier="_vv1rZ5pAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rbZpAEeOXzvVK2MY5wA" name="linked to" memberEnd="_vv1qsJpAEeOXzvVK2MY5wA _vv1rx5pAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rbppAEeOXzvVK2MY5wA" name="Dependent_Type">
      <ownedLiteral xmi:id="_vv1rb5pAEeOXzvVK2MY5wA" name="CHILD" classifier="_vv1rbppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rcJpAEeOXzvVK2MY5wA" name="SPOUSE" classifier="_vv1rbppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rcZpAEeOXzvVK2MY5wA" name="RELATIVE" classifier="_vv1rbppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rcppAEeOXzvVK2MY5wA" name="OTHER_FAMILY_MEMBER" classifier="_vv1rbppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rc5pAEeOXzvVK2MY5wA" name="provides" memberEnd="_vv1ryppAEeOXzvVK2MY5wA _vv1qeZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rdJpAEeOXzvVK2MY5wA" name="receives" memberEnd="_vv1qTppAEeOXzvVK2MY5wA _vv1sgZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_vv1rdZpAEeOXzvVK2MY5wA" name="declares" memberEnd="_vv1qUppAEeOXzvVK2MY5wA _vv1rMZpAEeOXzvVK2MY5wA"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rdppAEeOXzvVK2MY5wA" name="Type_of_Rate">
      <ownedLiteral xmi:id="_vv1rd5pAEeOXzvVK2MY5wA" name="REGULAR" classifier="_vv1rdppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1reJpAEeOXzvVK2MY5wA" name="REAL_COST" classifier="_vv1rdppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1reZpAEeOXzvVK2MY5wA" name="CE_Type">
      <ownedLiteral xmi:id="_vv1reppAEeOXzvVK2MY5wA" name="INALIDITY_AND_INFIRMITY" classifier="_vv1reZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1re5pAEeOXzvVK2MY5wA" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_vv1reZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rfJpAEeOXzvVK2MY5wA" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_vv1reZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rfZpAEeOXzvVK2MY5wA" name="Expense_Purpose">
      <ownedLiteral xmi:id="_vv1rfppAEeOXzvVK2MY5wA" name="HOUSE_CARE" classifier="_vv1rfZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rf5pAEeOXzvVK2MY5wA" name="CHILD_CARE" classifier="_vv1rfZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rgJpAEeOXzvVK2MY5wA" name="DEPENDENCE_CARE" classifier="_vv1rfZpAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rgZpAEeOXzvVK2MY5wA" name="OTHER" classifier="_vv1rfZpAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_vv1rgppAEeOXzvVK2MY5wA" name="Constants">
      <ownedLiteral xmi:id="_vv1rg5pAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rhJpAEeOXzvVK2MY5wA" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rhZpAEeOXzvVK2MY5wA" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rhppAEeOXzvVK2MY5wA" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rh5pAEeOXzvVK2MY5wA" name="MINIMUM_SALARY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1riJpAEeOXzvVK2MY5wA" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1riZpAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rippAEeOXzvVK2MY5wA" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1ri5pAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rjJpAEeOXzvVK2MY5wA" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rjZpAEeOXzvVK2MY5wA" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rjppAEeOXzvVK2MY5wA" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rj5pAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rkJpAEeOXzvVK2MY5wA"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rkZpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rkppAEeOXzvVK2MY5wA" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rk5pAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rlJpAEeOXzvVK2MY5wA" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rlZpAEeOXzvVK2MY5wA" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rlppAEeOXzvVK2MY5wA" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rl5pAEeOXzvVK2MY5wA" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rmJpAEeOXzvVK2MY5wA" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rmZpAEeOXzvVK2MY5wA" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rmppAEeOXzvVK2MY5wA" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rm5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_DAILY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rnJpAEeOXzvVK2MY5wA" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rnZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_MONTHLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rnppAEeOXzvVK2MY5wA" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rn5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIM_YEARLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1roJpAEeOXzvVK2MY5wA" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1roZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_DAILY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1roppAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1ro5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_MONTHLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rpJpAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rpZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIP_YEARLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rpppAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rp5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_DAILY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rqJpAEeOXzvVK2MY5wA" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rqZpAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_MONTHLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rqppAEeOXzvVK2MY5wA" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rq5pAEeOXzvVK2MY5wA" name="FLAT_RATE_CIS_YEARLY" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rrJpAEeOXzvVK2MY5wA" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rrZpAEeOXzvVK2MY5wA" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_vv1rgppAEeOXzvVK2MY5wA">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_vv1rrppAEeOXzvVK2MY5wA" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_vv1rr5pAEeOXzvVK2MY5wA" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_vv1rgppAEeOXzvVK2MY5wA"/>
      <ownedLiteral xmi:id="_vv1rsJpAEeOXzvVK2MY5wA" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_vv1rgppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1rsZpAEeOXzvVK2MY5wA" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1rsppAEeOXzvVK2MY5wA" name="Tax_Card">
        <ownedRule xmi:id="_vv1rs5pAEeOXzvVK2MY5wA" name="SubjectToWithholdingTax-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rtJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1rtZpAEeOXzvVK2MY5wA" name="Tax_Credits-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rtppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1rt5pAEeOXzvVK2MY5wA" name="Tax_Card_AC-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1ruJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1ruZpAEeOXzvVK2MY5wA" name="Tax_Card_FD-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1ruppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1ru5pAEeOXzvVK2MY5wA" name="Tax_Card_DS-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rvJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1rvZpAEeOXzvVK2MY5wA" name="Tax_Card_CE-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rvppAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_vv1rv5pAEeOXzvVK2MY5wA" name="Tax_Card_FO-constraint" constrainedElement="_vv1rsppAEeOXzvVK2MY5wA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1rwJpAEeOXzvVK2MY5wA">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_vv1rwZpAEeOXzvVK2MY5wA" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rwppAEeOXzvVK2MY5wA" name="tax_card_type" visibility="public" type="_vv1rW5pAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1rw5pAEeOXzvVK2MY5wA" name="tax_office" visibility="public" type="_vv1rXppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1rxJpAEeOXzvVK2MY5wA" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rxZpAEeOXzvVK2MY5wA" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_vv26c5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rxppAEeOXzvVK2MY5wA" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rx5pAEeOXzvVK2MY5wA" name="income" visibility="private" type="_vv1qpJpAEeOXzvVK2MY5wA" association="_vv1rbZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1ryJpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1ryZpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1ryppAEeOXzvVK2MY5wA" name="tax_Class" visibility="private" type="_vv1qcppAEeOXzvVK2MY5wA" association="_vv1rc5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1ry5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1rzJpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rzZpAEeOXzvVK2MY5wA" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1rzppAEeOXzvVK2MY5wA" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1rz5pAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r0JpAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r0ZpAEeOXzvVK2MY5wA" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r0ppAEeOXzvVK2MY5wA" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r05pAEeOXzvVK2MY5wA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r1JpAEeOXzvVK2MY5wA" name="tax_payers_address" visibility="public" type="_vv1GvJpAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_vv1r1ZpAEeOXzvVK2MY5wA" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r1ppAEeOXzvVK2MY5wA" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r15pAEeOXzvVK2MY5wA" name="jobs_activity_type" visibility="public" type="_vv1rV5pAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_vv1r2JpAEeOXzvVK2MY5wA" name="jobs_place_of_work" visibility="public" type="_vv1rZ5pAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedAttribute xmi:id="_vv1r2ZpAEeOXzvVK2MY5wA" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r2ppAEeOXzvVK2MY5wA" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r25pAEeOXzvVK2MY5wA" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r3JpAEeOXzvVK2MY5wA" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r3ZpAEeOXzvVK2MY5wA" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r3ppAEeOXzvVK2MY5wA" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r35pAEeOXzvVK2MY5wA" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r4JpAEeOXzvVK2MY5wA" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r4ZpAEeOXzvVK2MY5wA" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r4ppAEeOXzvVK2MY5wA" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r45pAEeOXzvVK2MY5wA" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r5JpAEeOXzvVK2MY5wA" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r5ZpAEeOXzvVK2MY5wA" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r5ppAEeOXzvVK2MY5wA" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r55pAEeOXzvVK2MY5wA" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r6JpAEeOXzvVK2MY5wA" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r6ZpAEeOXzvVK2MY5wA" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r6ppAEeOXzvVK2MY5wA" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r65pAEeOXzvVK2MY5wA" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r7JpAEeOXzvVK2MY5wA" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r7ZpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1qZ5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r7ppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r75pAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r8JpAEeOXzvVK2MY5wA" name="income_Tax_Credit" visibility="private" type="_vv1sBppAEeOXzvVK2MY5wA" aggregation="shared" association="_vv1r_ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r8ZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r8ppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r85pAEeOXzvVK2MY5wA" name="income_Tax_Deduction" visibility="private" type="_vv1sfJpAEeOXzvVK2MY5wA" aggregation="shared" association="_vv1se5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r9JpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r9ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r9ppAEeOXzvVK2MY5wA" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r95pAEeOXzvVK2MY5wA" name="previous" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1r_ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r-JpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r-ZpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1r-ppAEeOXzvVK2MY5wA" name="current_tax_card" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1r_ppAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1r-5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1r_JpAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1r_ZpAEeOXzvVK2MY5wA" name="include" memberEnd="_vv1sEppAEeOXzvVK2MY5wA _vv1r8JpAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1r_ppAEeOXzvVK2MY5wA" name="invalidated by" memberEnd="_vv1r95pAEeOXzvVK2MY5wA _vv1r-ppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1r_5pAEeOXzvVK2MY5wA" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sAJpAEeOXzvVK2MY5wA" name="CIM">
        <generalization xmi:id="_vv1sAZpAEeOXzvVK2MY5wA" general="_vv1sBppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sAppAEeOXzvVK2MY5wA" name="CIP">
        <generalization xmi:id="_vv1sA5pAEeOXzvVK2MY5wA" general="_vv1sBppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sBJpAEeOXzvVK2MY5wA" name="CIS">
        <generalization xmi:id="_vv1sBZpAEeOXzvVK2MY5wA" general="_vv1sBppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sBppAEeOXzvVK2MY5wA" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_vv1sB5pAEeOXzvVK2MY5wA" name="grantedBy" visibility="public" type="_vv1rQZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sCJpAEeOXzvVK2MY5wA" name="taxPayer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1rUJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1sCZpAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sCppAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sC5pAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sDJpAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sDZpAEeOXzvVK2MY5wA" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sDppAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sD5pAEeOXzvVK2MY5wA" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sEJpAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sEZpAEeOXzvVK2MY5wA" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sEppAEeOXzvVK2MY5wA" name="taxation_Frame" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1r_ZpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1sE5pAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sFJpAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vv1sFZpAEeOXzvVK2MY5wA" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sFppAEeOXzvVK2MY5wA" name="FD">
        <generalization xmi:id="_vv1sF5pAEeOXzvVK2MY5wA" general="_vv1sdppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sGJpAEeOXzvVK2MY5wA" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sGZpAEeOXzvVK2MY5wA" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1sGppAEeOXzvVK2MY5wA" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_vv1sG5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1sHJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sHZpAEeOXzvVK2MY5wA" name="FO">
        <generalization xmi:id="_vv1sHppAEeOXzvVK2MY5wA" general="_vv1sdppAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sH5pAEeOXzvVK2MY5wA" name="rate_type_for_FO" visibility="public" type="_vv1rdppAEeOXzvVK2MY5wA" isDerived="true"/>
        <ownedOperation xmi:id="_vv1sIJpAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_vv1sIZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_vv1sIppAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1sI5pAEeOXzvVK2MY5wA" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_vv1sJJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vv1sJZpAEeOXzvVK2MY5wA" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_vv1sJppAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sJ5pAEeOXzvVK2MY5wA" name="CE">
        <eAnnotations xmi:id="_vv1sKJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_vv1sKZpAEeOXzvVK2MY5wA" general="_vv1sfJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sKppAEeOXzvVK2MY5wA" name="ce_deduction_type" visibility="public" type="_vv1reZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sK5pAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sLJpAEeOXzvVK2MY5wA" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1sLZpAEeOXzvVK2MY5wA" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_vv1sL5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sLppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sL5pAEeOXzvVK2MY5wA" name="compute_disability_flat_rate" constrainedElement="_vv1sLZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sMJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sMZpAEeOXzvVK2MY5wA" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1sMppAEeOXzvVK2MY5wA" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_vv1sNJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sM5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sNJpAEeOXzvVK2MY5wA" name="dependent_relative_flat_rate" constrainedElement="_vv1sMppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sNZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sNppAEeOXzvVK2MY5wA" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sN5pAEeOXzvVK2MY5wA" name="AC">
        <generalization xmi:id="_vv1sOJpAEeOXzvVK2MY5wA" general="_vv1sfJpAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_vv1sOZpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" isQuery="true" postcondition="_vv1sO5pAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sOppAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sO5pAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC" constrainedElement="_vv1sOZpAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sPJpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sPZpAEeOXzvVK2MY5wA" name="IN_income" type="_vv1qpJpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_vv1sPppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1sP5pAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_vv1sQZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sQJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sQZpAEeOXzvVK2MY5wA" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_vv1sP5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sQppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sQ5pAEeOXzvVK2MY5wA" name="IN_income" type="_vv1qpJpAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_vv1sRJpAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sRZpAEeOXzvVK2MY5wA" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_vv1sRppAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sR5pAEeOXzvVK2MY5wA" name="permanent_expense_category" visibility="public" type="_vv1rIppAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sSJpAEeOXzvVK2MY5wA" name="DS_for_Interest_Expense">
        <generalization xmi:id="_vv1sSZpAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_vv1sSppAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_vv1sTJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sS5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sTJpAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_vv1sSppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sTZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sTppAEeOXzvVK2MY5wA" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1sT5pAEeOXzvVK2MY5wA" name="IN_children_with_allowances" type="_vv1GxZpAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1sUJpAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sUZpAEeOXzvVK2MY5wA"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1sUppAEeOXzvVK2MY5wA" name="IN_legal_union" type="_vv1p2ZpAEeOXzvVK2MY5wA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1sU5pAEeOXzvVK2MY5wA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sVJpAEeOXzvVK2MY5wA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sVZpAEeOXzvVK2MY5wA" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_vv1sVppAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sV5pAEeOXzvVK2MY5wA" name="insurance_category" visibility="public" type="_vv1rK5pAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sWJpAEeOXzvVK2MY5wA" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_vv1sWZpAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sWppAEeOXzvVK2MY5wA" name="private_insurance_and_plan_category" visibility="public" type="_vv1rJZpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1sW5pAEeOXzvVK2MY5wA" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sXJpAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sXZpAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vv1sXppAEeOXzvVK2MY5wA" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_vv1sYJpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sX5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sYJpAEeOXzvVK2MY5wA" name="get_increase_for_life_insurance" constrainedElement="_vv1sXppAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sYZpAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sYppAEeOXzvVK2MY5wA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1sY5pAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_vv1sZZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1sZJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1sZZpAEeOXzvVK2MY5wA" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_vv1sY5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sZppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_vv1sZ5pAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_vv1saZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1saJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1saZpAEeOXzvVK2MY5wA" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_vv1sZ5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1sappAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sa5pAEeOXzvVK2MY5wA" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_vv1sbJpAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sbZpAEeOXzvVK2MY5wA" name="DS_for_Donation">
        <generalization xmi:id="_vv1sbppAEeOXzvVK2MY5wA" general="_vv1seJpAEeOXzvVK2MY5wA"/>
        <ownedOperation xmi:id="_vv1sb5pAEeOXzvVK2MY5wA" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_vv1scZpAEeOXzvVK2MY5wA">
          <eAnnotations xmi:id="_vv1scJpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_vv1scZpAEeOXzvVK2MY5wA" name="maximum_deductible_amount" constrainedElement="_vv1sb5pAEeOXzvVK2MY5wA">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv1scppAEeOXzvVK2MY5wA">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_vv1sc5pAEeOXzvVK2MY5wA" name="IN_maximum_percentage" type="_vv1rgppAEeOXzvVK2MY5wA"/>
          <ownedParameter xmi:id="_vv1sdJpAEeOXzvVK2MY5wA" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vv1sdZpAEeOXzvVK2MY5wA" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sdppAEeOXzvVK2MY5wA" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_vv1sd5pAEeOXzvVK2MY5wA" general="_vv1sfJpAEeOXzvVK2MY5wA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1seJpAEeOXzvVK2MY5wA" name="DS">
        <generalization xmi:id="_vv1seZpAEeOXzvVK2MY5wA" general="_vv1sfJpAEeOXzvVK2MY5wA"/>
        <ownedAttribute xmi:id="_vv1seppAEeOXzvVK2MY5wA" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1se5pAEeOXzvVK2MY5wA" name="considers" memberEnd="_vv1shZpAEeOXzvVK2MY5wA _vv1r85pAEeOXzvVK2MY5wA"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_vv1sfJpAEeOXzvVK2MY5wA" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_vv1sfZpAEeOXzvVK2MY5wA" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sfppAEeOXzvVK2MY5wA" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sf5pAEeOXzvVK2MY5wA" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sgJpAEeOXzvVK2MY5wA" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1sgZpAEeOXzvVK2MY5wA" name="tax_Payer" visibility="private" type="_vv1qEppAEeOXzvVK2MY5wA" association="_vv1rdJpAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1sgppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sg5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1shJpAEeOXzvVK2MY5wA" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1shZpAEeOXzvVK2MY5wA" name="tax_card" visibility="private" type="_vv1rsppAEeOXzvVK2MY5wA" association="_vv1se5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1shppAEeOXzvVK2MY5wA" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sh5pAEeOXzvVK2MY5wA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vv1siJpAEeOXzvVK2MY5wA" name="expenses" visibility="private" type="_vv1rMJpAEeOXzvVK2MY5wA" association="_vv1si5pAEeOXzvVK2MY5wA">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vv1siZpAEeOXzvVK2MY5wA" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vv1sippAEeOXzvVK2MY5wA" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vv1si5pAEeOXzvVK2MY5wA" name="is computed based on" memberEnd="_vv1siJpAEeOXzvVK2MY5wA _vv1rPppAEeOXzvVK2MY5wA"/>
    </packagedElement>
    <profileApplication xmi:id="_vv1sjJpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_vv1sjZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_vv1sjppAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_vv1sj5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_vwz-IJpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_vwz-HppAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_vv1skJpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_vv1skZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_vvz09ppAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_vvz09JpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_vv1skppAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_vv1sk5pAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_vw1yRppAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_vw1yRJpAEeOXzvVK2MY5wA"/>
    </profileApplication>
    <profileApplication xmi:id="_vv1slJpAEeOXzvVK2MY5wA">
      <eAnnotations xmi:id="_vv1slZpAEeOXzvVK2MY5wA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_vv0eSJpAEeOXzvVK2MY5wA"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_vv0eRppAEeOXzvVK2MY5wA"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_vv1slppAEeOXzvVK2MY5wA" base_Comment="_vv1qh5pAEeOXzvVK2MY5wA"/>
  <Default:Documentation xmi:id="_vv1sl5pAEeOXzvVK2MY5wA" base_Comment="_vv1p2ppAEeOXzvVK2MY5wA"/>
</xmi:XMI>
