<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_o84qlk_WEeSEs9SnxOIVHg">
  <uml:Package xmi:id="_o9270U_WEeSEs9SnxOIVHg" name="TaxCard">
    <packageImport xmi:id="_o9270k_WEeSEs9SnxOIVHg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_o92700_WEeSEs9SnxOIVHg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_o9271E_WEeSEs9SnxOIVHg">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_o8_8wk_WEeSEs9SnxOIVHg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_o9271U_WEeSEs9SnxOIVHg" name="Tax_Card_Domain">
      <packageImport xmi:id="_o9271k_WEeSEs9SnxOIVHg" importedPackage="_o93g2U_WEeSEs9SnxOIVHg"/>
      <packageImport xmi:id="_o92710_WEeSEs9SnxOIVHg" importedPackage="_o9273E_WEeSEs9SnxOIVHg"/>
      <packageImport xmi:id="_o9272E_WEeSEs9SnxOIVHg" importedPackage="_o93gw0_WEeSEs9SnxOIVHg"/>
      <packageImport xmi:id="_o9272U_WEeSEs9SnxOIVHg" importedPackage="_o928zk_WEeSEs9SnxOIVHg"/>
      <packageImport xmi:id="_o9272k_WEeSEs9SnxOIVHg" importedPackage="_o93fh0_WEeSEs9SnxOIVHg"/>
      <packageImport xmi:id="_o92720_WEeSEs9SnxOIVHg" importedPackage="_o93gdU_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o9273E_WEeSEs9SnxOIVHg" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_o9273U_WEeSEs9SnxOIVHg" name="taxed under" memberEnd="_o928kE_WEeSEs9SnxOIVHg _o928v0_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9273k_WEeSEs9SnxOIVHg" name="Income_Tax">
        <ownedAttribute xmi:id="_o92730_WEeSEs9SnxOIVHg" name="taxPayer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o928vE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o9274E_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o9274U_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o9274k_WEeSEs9SnxOIVHg" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o92740_WEeSEs9SnxOIVHg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9275E_WEeSEs9SnxOIVHg" name="Address">
        <ownedAttribute xmi:id="_o9275U_WEeSEs9SnxOIVHg" name="taxPayer" visibility="private" type="_o928Mk_WEeSEs9SnxOIVHg" association="_o928s0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o9275k_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o92750_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o9276E_WEeSEs9SnxOIVHg" name="country" visibility="public" type="_o93gDU_WEeSEs9SnxOIVHg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_o9276U_WEeSEs9SnxOIVHg" name="LU" type="_o93gDU_WEeSEs9SnxOIVHg" instance="_o93gDk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o9276k_WEeSEs9SnxOIVHg" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o92760_WEeSEs9SnxOIVHg" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o9277E_WEeSEs9SnxOIVHg" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9277U_WEeSEs9SnxOIVHg" name="Dependent">
        <generalization xmi:id="_o9277k_WEeSEs9SnxOIVHg" general="_o928Mk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o92770_WEeSEs9SnxOIVHg" name="dependent_type" visibility="public" type="_o93gMk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o9278E_WEeSEs9SnxOIVHg" name="household" visibility="private" type="_o928GU_WEeSEs9SnxOIVHg" association="_o928uk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o9278U_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o9278k_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o92780_WEeSEs9SnxOIVHg" name="responsible_person" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o928uU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o9279E_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o9279U_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o9279k_WEeSEs9SnxOIVHg" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o92790_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o927-E_WEeSEs9SnxOIVHg" name="expense" visibility="private" type="_o93f9E_WEeSEs9SnxOIVHg" association="_o928u0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o927-U_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o927-k_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o927-0_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o928uE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o927_E_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o927_U_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o927_k_WEeSEs9SnxOIVHg" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_o927_0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o928AE_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928AU_WEeSEs9SnxOIVHg" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_o928Ak_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o928A0_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928BE_WEeSEs9SnxOIVHg" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_o928BU_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o928Bk_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928B0_WEeSEs9SnxOIVHg" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_o928CU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o928CE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o928CU_WEeSEs9SnxOIVHg" name="is_dependent_following_continued_studies" constrainedElement="_o928B0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928Ck_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o928C0_WEeSEs9SnxOIVHg" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o928DE_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928DU_WEeSEs9SnxOIVHg" name="External_Allowance">
        <ownedAttribute xmi:id="_o928Dk_WEeSEs9SnxOIVHg" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928D0_WEeSEs9SnxOIVHg" name="grantor" visibility="public" type="_o93gBU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o928EE_WEeSEs9SnxOIVHg" name="person" visibility="private" type="_o928Mk_WEeSEs9SnxOIVHg" association="_o928tE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928EU_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928Ek_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928E0_WEeSEs9SnxOIVHg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928FE_WEeSEs9SnxOIVHg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928FU_WEeSEs9SnxOIVHg" name="Fiscal_Address">
        <generalization xmi:id="_o928Fk_WEeSEs9SnxOIVHg" general="_o9275E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928F0_WEeSEs9SnxOIVHg" name="Habitual_Address">
        <generalization xmi:id="_o928GE_WEeSEs9SnxOIVHg" general="_o9275E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928GU_WEeSEs9SnxOIVHg" name="Household">
        <ownedAttribute xmi:id="_o928Gk_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o928t0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928G0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928HE_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928HU_WEeSEs9SnxOIVHg" name="dependent" visibility="private" type="_o9277U_WEeSEs9SnxOIVHg" association="_o928uk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928Hk_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928H0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928IE_WEeSEs9SnxOIVHg" name="Legal_Union_Record">
        <ownedComment xmi:id="_o928IU_WEeSEs9SnxOIVHg" annotatedElement="_o928IE_WEeSEs9SnxOIVHg">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_o928Ik_WEeSEs9SnxOIVHg" name="Legal_Union-different_people-constraint" constrainedElement="_o928IE_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928I0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_o928JE_WEeSEs9SnxOIVHg" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928JU_WEeSEs9SnxOIVHg" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928Jk_WEeSEs9SnxOIVHg" name="individual_A" visibility="private" type="_o928Mk_WEeSEs9SnxOIVHg" association="_o928tk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928J0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928KE_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928KU_WEeSEs9SnxOIVHg" name="individual_B" visibility="private" type="_o928Mk_WEeSEs9SnxOIVHg" association="_o928tU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928Kk_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928K0_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928LE_WEeSEs9SnxOIVHg" name="Marriage_Record">
        <generalization xmi:id="_o928LU_WEeSEs9SnxOIVHg" general="_o928IE_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928Lk_WEeSEs9SnxOIVHg" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_o928L0_WEeSEs9SnxOIVHg" general="_o928WU_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928ME_WEeSEs9SnxOIVHg" name="Partnership_Record">
        <generalization xmi:id="_o928MU_WEeSEs9SnxOIVHg" general="_o928IE_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928Mk_WEeSEs9SnxOIVHg" name="Physical_Person">
        <ownedAttribute xmi:id="_o928M0_WEeSEs9SnxOIVHg" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928NE_WEeSEs9SnxOIVHg" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928NU_WEeSEs9SnxOIVHg" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928Nk_WEeSEs9SnxOIVHg" name="allowances" visibility="private" type="_o928DU_WEeSEs9SnxOIVHg" association="_o928tE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928N0_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928OE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928OU_WEeSEs9SnxOIVHg" name="addresses" visibility="private" type="_o9275E_WEeSEs9SnxOIVHg" association="_o928s0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928Ok_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928O0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928PE_WEeSEs9SnxOIVHg" name="legal_union_A" visibility="private" type="_o928IE_WEeSEs9SnxOIVHg" association="_o928tk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928PU_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928Pk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928P0_WEeSEs9SnxOIVHg" name="legal_union_B" visibility="private" type="_o928IE_WEeSEs9SnxOIVHg" association="_o928tU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928QE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928QU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928Qk_WEeSEs9SnxOIVHg" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928Q0_WEeSEs9SnxOIVHg" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_o928RE_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928RU_WEeSEs9SnxOIVHg" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o928Rk_WEeSEs9SnxOIVHg" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_o928R0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_o928SE_WEeSEs9SnxOIVHg" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_o928SU_WEeSEs9SnxOIVHg" name="IN_person" type="_o928Mk_WEeSEs9SnxOIVHg"/>
          <ownedParameter xmi:id="_o928Sk_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928S0_WEeSEs9SnxOIVHg" name="is_person_assisting_spouse" isQuery="true" postcondition="_o928TU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o928TE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o928TU_WEeSEs9SnxOIVHg" name="is_assisting_spouse" constrainedElement="_o928S0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928Tk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o928T0_WEeSEs9SnxOIVHg" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o928UE_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928UU_WEeSEs9SnxOIVHg" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_o928U0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o928Uk_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o928U0_WEeSEs9SnxOIVHg" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_o928UU_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928VE_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o928VU_WEeSEs9SnxOIVHg" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o928Vk_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928V0_WEeSEs9SnxOIVHg" name="Resident_Tax_Payer">
        <generalization xmi:id="_o928WE_WEeSEs9SnxOIVHg" general="_o928WU_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928WU_WEeSEs9SnxOIVHg" name="Tax_Payer">
        <ownedRule xmi:id="_o928Wk_WEeSEs9SnxOIVHg" name="NonResidentTaxPayer-constraint" constrainedElement="_o928Lk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928W0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928XE_WEeSEs9SnxOIVHg" name="ResidentTaxPayer-constraint" constrainedElement="_o928V0_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928XU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928Xk_WEeSEs9SnxOIVHg" name="SubjectToIncomeTax-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928X0_WEeSEs9SnxOIVHg" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928YE_WEeSEs9SnxOIVHg" name="TaxCredit-CIS-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928YU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928Yk_WEeSEs9SnxOIVHg" name="TaxCredit-CIP-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928Y0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928ZE_WEeSEs9SnxOIVHg" name="TaxCredit-CIM-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928ZU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928Zk_WEeSEs9SnxOIVHg" name="Legal_Union-monogamus-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928Z0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928aE_WEeSEs9SnxOIVHg" name="TaxClass-unique-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928aU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928ak_WEeSEs9SnxOIVHg" name="TaxDeduction-CE-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928a0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928bE_WEeSEs9SnxOIVHg" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928bU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928bk_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928b0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928cE_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928cU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928ck_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928c0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928dE_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928dU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928dk_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-5-donation" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928d0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928eE_WEeSEs9SnxOIVHg" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928eU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928ek_WEeSEs9SnxOIVHg" name="TaxCard-unique-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928e0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928fE_WEeSEs9SnxOIVHg" name="TaxDeduction-FD-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928fU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928fk_WEeSEs9SnxOIVHg" name="TaxDeduction-FO-constraint" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928f0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928gE_WEeSEs9SnxOIVHg" name="NEW_TaxDeduction-CE-INVALIDITY" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928gU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9;income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_invalidity_and_infirmity.declared_amount->sum() in&#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#x9;&#xA;else&#xA;false&#xA;endif&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928gk_WEeSEs9SnxOIVHg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928g0_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_dependence_and_care.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o928hE_WEeSEs9SnxOIVHg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE-CHILDREN-NOT-PART-OF-HOUSEHOLD" constrainedElement="_o928WU_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928hU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_care_for_children_not_part_of_the_household.declared_amount->sum() in&#xA;&#x9; &#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;     if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_o928hk_WEeSEs9SnxOIVHg" general="_o928Mk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o928h0_WEeSEs9SnxOIVHg" name="incomes" visibility="private" type="_o92870_WEeSEs9SnxOIVHg" association="_o93gDE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928iE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928iU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928ik_WEeSEs9SnxOIVHg" name="incomeTax" visibility="private" type="_o9273k_WEeSEs9SnxOIVHg" association="_o928vE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928i0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928jE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928jU_WEeSEs9SnxOIVHg" name="income_Tax_Credit" visibility="private" type="_o93gyk_WEeSEs9SnxOIVHg" association="_o93gFE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928jk_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928j0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928kE_WEeSEs9SnxOIVHg" name="tax_class" visibility="private" type="_o928vU_WEeSEs9SnxOIVHg" association="_o9273U_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928kU_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928kk_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928k0_WEeSEs9SnxOIVHg" name="household" visibility="private" type="_o928GU_WEeSEs9SnxOIVHg" association="_o928t0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928lE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928lU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928lk_WEeSEs9SnxOIVHg" name="dependents" visibility="private" type="_o9277U_WEeSEs9SnxOIVHg" association="_o928uU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928l0_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928mE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928mU_WEeSEs9SnxOIVHg" name="income_Tax_Deduction" visibility="private" type="_o93hQE_WEeSEs9SnxOIVHg" association="_o93gOE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928mk_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928m0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928nE_WEeSEs9SnxOIVHg" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928nU_WEeSEs9SnxOIVHg" name="expenses" visibility="private" type="_o93f9E_WEeSEs9SnxOIVHg" association="_o93gOU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928nk_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928n0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928oE_WEeSEs9SnxOIVHg" name="dependent" visibility="private" type="_o9277U_WEeSEs9SnxOIVHg" association="_o928uE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928oU_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928ok_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928o0_WEeSEs9SnxOIVHg" name="tax_Card" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" aggregation="shared" association="_o928sk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928pE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928pU_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928pk_WEeSEs9SnxOIVHg" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o928p0_WEeSEs9SnxOIVHg" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_o928qU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o928qE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o928qU_WEeSEs9SnxOIVHg" name="is_child_part_of_household" constrainedElement="_o928p0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928qk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o928q0_WEeSEs9SnxOIVHg" name="IN_dependent" type="_o9277U_WEeSEs9SnxOIVHg"/>
          <ownedParameter xmi:id="_o928rE_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o928rU_WEeSEs9SnxOIVHg" name="number_of_months_of_allowance" isQuery="true" postcondition="_o928r0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o928rk_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o928r0_WEeSEs9SnxOIVHg" name="number_od_months_of_allowance" constrainedElement="_o928rU_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o928sE_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o928sU_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928sk_WEeSEs9SnxOIVHg" name="" memberEnd="_o928o0_WEeSEs9SnxOIVHg _o93gsU_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928s0_WEeSEs9SnxOIVHg" name="located at" memberEnd="_o928OU_WEeSEs9SnxOIVHg _o9275U_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928tE_WEeSEs9SnxOIVHg" name="receives" memberEnd="_o928Nk_WEeSEs9SnxOIVHg _o928EE_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928tU_WEeSEs9SnxOIVHg" name="person B" memberEnd="_o928KU_WEeSEs9SnxOIVHg _o928P0_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928tk_WEeSEs9SnxOIVHg" name="person A" memberEnd="_o928Jk_WEeSEs9SnxOIVHg _o928PE_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928t0_WEeSEs9SnxOIVHg" name="maintains" memberEnd="_o928k0_WEeSEs9SnxOIVHg _o928Gk_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928uE_WEeSEs9SnxOIVHg" name="as tax payer" memberEnd="_o927-0_WEeSEs9SnxOIVHg _o928oE_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928uU_WEeSEs9SnxOIVHg" name="supports" memberEnd="_o928lk_WEeSEs9SnxOIVHg _o92780_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928uk_WEeSEs9SnxOIVHg" name="is part of" memberEnd="_o9278E_WEeSEs9SnxOIVHg _o928HU_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928u0_WEeSEs9SnxOIVHg" name="incurred over" memberEnd="_o93f-0_WEeSEs9SnxOIVHg _o927-E_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928vE_WEeSEs9SnxOIVHg" name="is subject to" memberEnd="_o928ik_WEeSEs9SnxOIVHg _o92730_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_o928vU_WEeSEs9SnxOIVHg" name="Tax_Class">
        <ownedAttribute xmi:id="_o928vk_WEeSEs9SnxOIVHg" name="tax_class" visibility="public" type="_o93gJ0_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o928v0_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o9273U_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928wE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928wU_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928wk_WEeSEs9SnxOIVHg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928w0_WEeSEs9SnxOIVHg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928xE_WEeSEs9SnxOIVHg" name="tax_card" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93gN0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928xU_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928xk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928x0_WEeSEs9SnxOIVHg" name="current_tax_class" visibility="private" type="_o928vU_WEeSEs9SnxOIVHg" association="_o928zU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928yE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928yU_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o928yk_WEeSEs9SnxOIVHg" name="prev" visibility="private" type="_o928vU_WEeSEs9SnxOIVHg" association="_o928zU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o928y0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o928zE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o928zU_WEeSEs9SnxOIVHg" name="replaced by" memberEnd="_o928x0_WEeSEs9SnxOIVHg _o928yk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o928zk_WEeSEs9SnxOIVHg" name="Income_Concepts">
      <ownedComment xmi:id="_o928z0_WEeSEs9SnxOIVHg" annotatedElement="_o9286U_WEeSEs9SnxOIVHg">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9280E_WEeSEs9SnxOIVHg" name="Income_Type">
        <ownedAttribute xmi:id="_o9280U_WEeSEs9SnxOIVHg" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_o9280k_WEeSEs9SnxOIVHg" annotatedElement="_o9280U_WEeSEs9SnxOIVHg">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o92800_WEeSEs9SnxOIVHg" name="income" visibility="private" type="_o92870_WEeSEs9SnxOIVHg" association="_o9286k_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o9281E_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o9281U_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9281k_WEeSEs9SnxOIVHg" name="Trade_and_Business_Income">
        <generalization xmi:id="_o92810_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9282E_WEeSEs9SnxOIVHg" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_o9282U_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9282k_WEeSEs9SnxOIVHg" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_o92820_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9283E_WEeSEs9SnxOIVHg" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_o9283U_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o9283k_WEeSEs9SnxOIVHg" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o92830_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9284E_WEeSEs9SnxOIVHg" name="Capital_and_Investments_Income">
        <generalization xmi:id="_o9284U_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9284k_WEeSEs9SnxOIVHg" name="Employment_Income">
        <generalization xmi:id="_o92840_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9285E_WEeSEs9SnxOIVHg" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_o9285U_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9285k_WEeSEs9SnxOIVHg" name="Sundry_Income">
        <generalization xmi:id="_o92850_WEeSEs9SnxOIVHg" general="_o9280E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9286E_WEeSEs9SnxOIVHg" name="Directors_Fee">
        <generalization xmi:id="_o9286U_WEeSEs9SnxOIVHg" general="_o9282k_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o9286k_WEeSEs9SnxOIVHg" name="has as type" memberEnd="_o93fbE_WEeSEs9SnxOIVHg _o92800_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_o92860_WEeSEs9SnxOIVHg" name="Foreign_Income">
        <generalization xmi:id="_o9287E_WEeSEs9SnxOIVHg" general="_o92870_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o9287U_WEeSEs9SnxOIVHg" name="Local_Income">
        <generalization xmi:id="_o9287k_WEeSEs9SnxOIVHg" general="_o92870_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o92870_WEeSEs9SnxOIVHg" name="Income">
        <ownedRule xmi:id="_o9288E_WEeSEs9SnxOIVHg" name="Tax_Deduction_FD-constraint" constrainedElement="_o92870_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o9288U_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93fYE_WEeSEs9SnxOIVHg" name="Tax_Deduction_FO-constraint" constrainedElement="_o92870_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fYU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_o93fYk_WEeSEs9SnxOIVHg" name="taxPayer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o93gDE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fY0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fZE_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fZU_WEeSEs9SnxOIVHg" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fZk_WEeSEs9SnxOIVHg" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fZ0_WEeSEs9SnxOIVHg" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93faE_WEeSEs9SnxOIVHg" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93faU_WEeSEs9SnxOIVHg" name="tax_card" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93gMU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fak_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fa0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fbE_WEeSEs9SnxOIVHg" name="income_type" visibility="private" type="_o9280E_WEeSEs9SnxOIVHg" association="_o9286k_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fbU_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fbk_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fb0_WEeSEs9SnxOIVHg" name="expenses" visibility="private" type="_o93f9E_WEeSEs9SnxOIVHg" association="_o93f80_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fcE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fcU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fck_WEeSEs9SnxOIVHg" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fc0_WEeSEs9SnxOIVHg" name="distances" visibility="private" type="_o93ff0_WEeSEs9SnxOIVHg" association="_o93fhk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fdE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fdU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93fdk_WEeSEs9SnxOIVHg" name="compute_duration_of_contract" isQuery="true" postcondition="_o93feE_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fd0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93feE_WEeSEs9SnxOIVHg" name="get_duration" constrainedElement="_o93fdk_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93feU_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fek_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93fe0_WEeSEs9SnxOIVHg" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_o93ffE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o93ffU_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93ffk_WEeSEs9SnxOIVHg" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93ff0_WEeSEs9SnxOIVHg" name="Distance">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_o93fgE_WEeSEs9SnxOIVHg" name="value" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_o84oOk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_o93fgU_WEeSEs9SnxOIVHg" name="month" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_o84oJE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_o93fgk_WEeSEs9SnxOIVHg" name="full_time_equivalent" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_o84oJE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fg0_WEeSEs9SnxOIVHg" name="income" visibility="private" type="_o92870_WEeSEs9SnxOIVHg" association="_o93fhk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93fhE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93fhU_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93fhk_WEeSEs9SnxOIVHg" name="has" memberEnd="_o93fg0_WEeSEs9SnxOIVHg _o93fc0_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o93fh0_WEeSEs9SnxOIVHg" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fiE_WEeSEs9SnxOIVHg" name="Permanent_Expense">
        <generalization xmi:id="_o93fiU_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fik_WEeSEs9SnxOIVHg" name="category" visibility="public" type="_o93f5k_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fi0_WEeSEs9SnxOIVHg" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93fjE_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93fjU_WEeSEs9SnxOIVHg" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_o93fj0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fjk_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fj0_WEeSEs9SnxOIVHg" name="is_eligible" constrainedElement="_o93fjU_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fkE_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fkU_WEeSEs9SnxOIVHg" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93fkk_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fk0_WEeSEs9SnxOIVHg" name="Interest_Expense">
        <generalization xmi:id="_o93flE_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93flU_WEeSEs9SnxOIVHg" name="Special_Expense_DS">
        <generalization xmi:id="_o93flk_WEeSEs9SnxOIVHg" general="_o93f9E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fl0_WEeSEs9SnxOIVHg" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_o93fmE_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fmU_WEeSEs9SnxOIVHg" name="category" visibility="public" type="_o93f6U_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fmk_WEeSEs9SnxOIVHg" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fm0_WEeSEs9SnxOIVHg" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_o93fnE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93fnU_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93fnk_WEeSEs9SnxOIVHg" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_o93foE_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fn0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93foE_WEeSEs9SnxOIVHg" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_o93fnk_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93foU_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fok_WEeSEs9SnxOIVHg" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fo0_WEeSEs9SnxOIVHg" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_o93fpE_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fpU_WEeSEs9SnxOIVHg" name="category" visibility="public" type="_o93f70_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fpk_WEeSEs9SnxOIVHg" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93fp0_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fqE_WEeSEs9SnxOIVHg" name="Donation">
        <generalization xmi:id="_o93fqU_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93fqk_WEeSEs9SnxOIVHg" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fq0_WEeSEs9SnxOIVHg" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93frE_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93frU_WEeSEs9SnxOIVHg" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93frk_WEeSEs9SnxOIVHg" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_o93fsE_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fr0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fsE_WEeSEs9SnxOIVHg" name="is_leagaly_approved_beneficiary" constrainedElement="_o93frk_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fsU_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fsk_WEeSEs9SnxOIVHg" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93fs0_WEeSEs9SnxOIVHg" name="Loss_Carryforward">
        <ownedRule xmi:id="_o93ftE_WEeSEs9SnxOIVHg" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_o93fs0_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93ftU_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_o93ftk_WEeSEs9SnxOIVHg" general="_o93flU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93ft0_WEeSEs9SnxOIVHg" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fuE_WEeSEs9SnxOIVHg" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fuU_WEeSEs9SnxOIVHg" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93fuk_WEeSEs9SnxOIVHg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93fu0_WEeSEs9SnxOIVHg" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_o93fvE_WEeSEs9SnxOIVHg" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93fvU_WEeSEs9SnxOIVHg" name="is_accountability_regular" isQuery="true" postcondition="_o93fv0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fvk_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fv0_WEeSEs9SnxOIVHg" name="is_accounatbility_regular" constrainedElement="_o93fvU_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fwE_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fwU_WEeSEs9SnxOIVHg" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93fwk_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93fw0_WEeSEs9SnxOIVHg" name="is_compensated_by_other_means" isQuery="true" postcondition="_o93fxU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fxE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fxU_WEeSEs9SnxOIVHg" name="is_compensated_by_other_means" constrainedElement="_o93fw0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fxk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fx0_WEeSEs9SnxOIVHg" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93fyE_WEeSEs9SnxOIVHg" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_o93fyk_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fyU_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fyk_WEeSEs9SnxOIVHg" name="partner_in_business" constrainedElement="_o93fyE_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93fy0_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93fzE_WEeSEs9SnxOIVHg" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93fzU_WEeSEs9SnxOIVHg" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_o93fz0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93fzk_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93fz0_WEeSEs9SnxOIVHg" name="inherited_business_ownership" constrainedElement="_o93fzU_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93f0E_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93f0U_WEeSEs9SnxOIVHg" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f0k_WEeSEs9SnxOIVHg" name="Spousal_Expense_AC">
        <generalization xmi:id="_o93f00_WEeSEs9SnxOIVHg" general="_o93f9E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f1E_WEeSEs9SnxOIVHg" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_o93f1U_WEeSEs9SnxOIVHg" general="_o93f9E_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93f1k_WEeSEs9SnxOIVHg" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f10_WEeSEs9SnxOIVHg" name="ce_type" visibility="public" type="_o93gPU_WEeSEs9SnxOIVHg"/>
        <ownedOperation xmi:id="_o93f2E_WEeSEs9SnxOIVHg" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_o93f2U_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o93f2k_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93f20_WEeSEs9SnxOIVHg" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_o93f3U_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93f3E_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93f3U_WEeSEs9SnxOIVHg" name="thresholded_deduction_percentage" constrainedElement="_o93f20_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93f3k_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93f30_WEeSEs9SnxOIVHg" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f4E_WEeSEs9SnxOIVHg" name="Travel_Expense_FD">
        <generalization xmi:id="_o93f4U_WEeSEs9SnxOIVHg" general="_o93f5E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f4k_WEeSEs9SnxOIVHg" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_o93f40_WEeSEs9SnxOIVHg" general="_o93f5E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f5E_WEeSEs9SnxOIVHg" name="Professional_Expense">
        <generalization xmi:id="_o93f5U_WEeSEs9SnxOIVHg" general="_o93f9E_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93f5k_WEeSEs9SnxOIVHg" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_o93f50_WEeSEs9SnxOIVHg" name="MISCELLANEOUS_DEBT" classifier="_o93f5k_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f6E_WEeSEs9SnxOIVHg" name="ALIMONY" classifier="_o93f5k_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93f6U_WEeSEs9SnxOIVHg" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_o93f6k_WEeSEs9SnxOIVHg" name="PRIVATE_INSURANCE" classifier="_o93f6U_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f60_WEeSEs9SnxOIVHg" name="PRIVATE_LIFE_INSURANCE" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f7E_WEeSEs9SnxOIVHg" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_o93f6U_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f7U_WEeSEs9SnxOIVHg" name="HOUSING_SAVING_PLAN" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f7k_WEeSEs9SnxOIVHg" name="OLD_AGE_PENSION_PLAN" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93f70_WEeSEs9SnxOIVHg" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_o93f8E_WEeSEs9SnxOIVHg" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f8U_WEeSEs9SnxOIVHg" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
        <ownedLiteral xmi:id="_o93f8k_WEeSEs9SnxOIVHg" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_o93f70_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93f80_WEeSEs9SnxOIVHg" name="influences" memberEnd="_o93f_0_WEeSEs9SnxOIVHg _o93fb0_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93f9E_WEeSEs9SnxOIVHg" name="Expense">
        <ownedAttribute xmi:id="_o93f9U_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o93gOU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93f9k_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93f90_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f-E_WEeSEs9SnxOIVHg" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f-U_WEeSEs9SnxOIVHg" name="expense_purpose" visibility="public" type="_o93gQU_WEeSEs9SnxOIVHg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_o93f-k_WEeSEs9SnxOIVHg" name="OTHER" type="_o93gQU_WEeSEs9SnxOIVHg" instance="_o93gRU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f-0_WEeSEs9SnxOIVHg" name="dependent" visibility="private" type="_o9277U_WEeSEs9SnxOIVHg" association="_o928u0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93f_E_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93f_U_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f_k_WEeSEs9SnxOIVHg" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93f_0_WEeSEs9SnxOIVHg" name="income" visibility="private" type="_o92870_WEeSEs9SnxOIVHg" association="_o93f80_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gAE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gAU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gAk_WEeSEs9SnxOIVHg" name="deduction" visibility="private" type="_o93hQE_WEeSEs9SnxOIVHg" association="_o93hT0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gA0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gBE_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gBU_WEeSEs9SnxOIVHg" name="Grantor">
      <ownedLiteral xmi:id="_o93gBk_WEeSEs9SnxOIVHg" name="ACD" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gB0_WEeSEs9SnxOIVHg" name="Employer" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gCE_WEeSEs9SnxOIVHg" name="CNPF" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gCU_WEeSEs9SnxOIVHg" name="CEDIES" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gCk_WEeSEs9SnxOIVHg" name="SNJ" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gC0_WEeSEs9SnxOIVHg" name="CNAP" classifier="_o93gBU_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gDE_WEeSEs9SnxOIVHg" name="earns" memberEnd="_o928h0_WEeSEs9SnxOIVHg _o93fYk_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gDU_WEeSEs9SnxOIVHg" name="Country">
      <ownedLiteral xmi:id="_o93gDk_WEeSEs9SnxOIVHg" name="LU" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gD0_WEeSEs9SnxOIVHg" name="FR" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gEE_WEeSEs9SnxOIVHg" name="BE" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gEU_WEeSEs9SnxOIVHg" name="DE" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gEk_WEeSEs9SnxOIVHg" name="NL" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gE0_WEeSEs9SnxOIVHg" name="OTHER" classifier="_o93gDU_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gFE_WEeSEs9SnxOIVHg" name="credited for" memberEnd="_o928jU_WEeSEs9SnxOIVHg _o93gzE_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_o93gFU_WEeSEs9SnxOIVHg" name="Date">
      <ownedAttribute xmi:id="_o93gFk_WEeSEs9SnxOIVHg" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gF0_WEeSEs9SnxOIVHg" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gGE_WEeSEs9SnxOIVHg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_o93gGU_WEeSEs9SnxOIVHg" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_o93gGk_WEeSEs9SnxOIVHg" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gG0_WEeSEs9SnxOIVHg" name="Job_Activity">
      <ownedLiteral xmi:id="_o93gHE_WEeSEs9SnxOIVHg" name="Salary" classifier="_o93gG0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gHU_WEeSEs9SnxOIVHg" name="Pension" classifier="_o93gG0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gHk_WEeSEs9SnxOIVHg" name="Annuity" classifier="_o93gG0_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gH0_WEeSEs9SnxOIVHg" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_o93gIE_WEeSEs9SnxOIVHg" name="Principal" classifier="_o93gH0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gIU_WEeSEs9SnxOIVHg" name="Additional" classifier="_o93gH0_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gIk_WEeSEs9SnxOIVHg" name="Tax_Office">
      <ownedLiteral xmi:id="_o93gI0_WEeSEs9SnxOIVHg" name="RTS_2" classifier="_o93gIk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gJE_WEeSEs9SnxOIVHg" name="RTS_3" classifier="_o93gIk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gJU_WEeSEs9SnxOIVHg" name="RTS_Esch" classifier="_o93gIk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gJk_WEeSEs9SnxOIVHg" name="RTS_Ettelbruck" classifier="_o93gIk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gJ0_WEeSEs9SnxOIVHg" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_o93gKE_WEeSEs9SnxOIVHg" name="One" classifier="_o93gJ0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gKU_WEeSEs9SnxOIVHg" name="One_A" classifier="_o93gJ0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gKk_WEeSEs9SnxOIVHg" name="Two" classifier="_o93gJ0_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gK0_WEeSEs9SnxOIVHg" name="Town">
      <ownedLiteral xmi:id="_o93gLE_WEeSEs9SnxOIVHg" name="Luxembourg_city" classifier="_o93gK0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gLU_WEeSEs9SnxOIVHg" name="Bertrange" classifier="_o93gK0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gLk_WEeSEs9SnxOIVHg" name="Strassen" classifier="_o93gK0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gL0_WEeSEs9SnxOIVHg" name="Bettembourg" classifier="_o93gK0_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gME_WEeSEs9SnxOIVHg" name="Beaufort" classifier="_o93gK0_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gMU_WEeSEs9SnxOIVHg" name="linked to" memberEnd="_o93faU_WEeSEs9SnxOIVHg _o93gi0_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gMk_WEeSEs9SnxOIVHg" name="Dependent_Type">
      <ownedLiteral xmi:id="_o93gM0_WEeSEs9SnxOIVHg" name="CHILD" classifier="_o93gMk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gNE_WEeSEs9SnxOIVHg" name="SPOUSE" classifier="_o93gMk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gNU_WEeSEs9SnxOIVHg" name="RELATIVE" classifier="_o93gMk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gNk_WEeSEs9SnxOIVHg" name="OTHER_FAMILY_MEMBER" classifier="_o93gMk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gN0_WEeSEs9SnxOIVHg" name="provides" memberEnd="_o93gjk_WEeSEs9SnxOIVHg _o928xE_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gOE_WEeSEs9SnxOIVHg" name="receives" memberEnd="_o928mU_WEeSEs9SnxOIVHg _o93hRU_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_o93gOU_WEeSEs9SnxOIVHg" name="declares" memberEnd="_o928nU_WEeSEs9SnxOIVHg _o93f9U_WEeSEs9SnxOIVHg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gOk_WEeSEs9SnxOIVHg" name="Type_of_Rate">
      <ownedLiteral xmi:id="_o93gO0_WEeSEs9SnxOIVHg" name="REGULAR" classifier="_o93gOk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gPE_WEeSEs9SnxOIVHg" name="REAL_COST" classifier="_o93gOk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gPU_WEeSEs9SnxOIVHg" name="CE_Type">
      <ownedLiteral xmi:id="_o93gPk_WEeSEs9SnxOIVHg" name="INALIDITY_AND_INFIRMITY" classifier="_o93gPU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gP0_WEeSEs9SnxOIVHg" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_o93gPU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gQE_WEeSEs9SnxOIVHg" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_o93gPU_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gQU_WEeSEs9SnxOIVHg" name="Expense_Purpose">
      <ownedLiteral xmi:id="_o93gQk_WEeSEs9SnxOIVHg" name="HOUSE_CARE" classifier="_o93gQU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gQ0_WEeSEs9SnxOIVHg" name="CHILD_CARE" classifier="_o93gQU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gRE_WEeSEs9SnxOIVHg" name="DEPENDENCE_CARE" classifier="_o93gQU_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gRU_WEeSEs9SnxOIVHg" name="OTHER" classifier="_o93gQU_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_o93gRk_WEeSEs9SnxOIVHg" name="Constants">
      <ownedLiteral xmi:id="_o93gR0_WEeSEs9SnxOIVHg" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gSE_WEeSEs9SnxOIVHg" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gSU_WEeSEs9SnxOIVHg" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gSk_WEeSEs9SnxOIVHg" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gS0_WEeSEs9SnxOIVHg" name="MINIMUM_SALARY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gTE_WEeSEs9SnxOIVHg" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gTU_WEeSEs9SnxOIVHg" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gTk_WEeSEs9SnxOIVHg" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gT0_WEeSEs9SnxOIVHg" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gUE_WEeSEs9SnxOIVHg" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gUU_WEeSEs9SnxOIVHg" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gUk_WEeSEs9SnxOIVHg" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gU0_WEeSEs9SnxOIVHg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gVE_WEeSEs9SnxOIVHg"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gVU_WEeSEs9SnxOIVHg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gVk_WEeSEs9SnxOIVHg" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gV0_WEeSEs9SnxOIVHg" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gWE_WEeSEs9SnxOIVHg" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gWU_WEeSEs9SnxOIVHg" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gWk_WEeSEs9SnxOIVHg" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gW0_WEeSEs9SnxOIVHg" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gXE_WEeSEs9SnxOIVHg" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gXU_WEeSEs9SnxOIVHg" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gXk_WEeSEs9SnxOIVHg" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gX0_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIM_DAILY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gYE_WEeSEs9SnxOIVHg" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gYU_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIM_MONTHLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gYk_WEeSEs9SnxOIVHg" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gY0_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIM_YEARLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gZE_WEeSEs9SnxOIVHg" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gZU_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIP_DAILY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gZk_WEeSEs9SnxOIVHg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gZ0_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIP_MONTHLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gaE_WEeSEs9SnxOIVHg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gaU_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIP_YEARLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gak_WEeSEs9SnxOIVHg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93ga0_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIS_DAILY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gbE_WEeSEs9SnxOIVHg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gbU_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIS_MONTHLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gbk_WEeSEs9SnxOIVHg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gb0_WEeSEs9SnxOIVHg" name="FLAT_RATE_CIS_YEARLY" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gcE_WEeSEs9SnxOIVHg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gcU_WEeSEs9SnxOIVHg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_o93gRk_WEeSEs9SnxOIVHg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_o93gck_WEeSEs9SnxOIVHg" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_o93gc0_WEeSEs9SnxOIVHg" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_o93gRk_WEeSEs9SnxOIVHg"/>
      <ownedLiteral xmi:id="_o93gdE_WEeSEs9SnxOIVHg" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_o93gRk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o93gdU_WEeSEs9SnxOIVHg" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_o93gdk_WEeSEs9SnxOIVHg" name="Tax_Card">
        <ownedRule xmi:id="_o93gd0_WEeSEs9SnxOIVHg" name="SubjectToWithholdingTax-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93geE_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93geU_WEeSEs9SnxOIVHg" name="Tax_Credits-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93gek_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93ge0_WEeSEs9SnxOIVHg" name="Tax_Card_AC-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93gfE_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93gfU_WEeSEs9SnxOIVHg" name="Tax_Card_FD-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93gfk_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93gf0_WEeSEs9SnxOIVHg" name="Tax_Card_DS-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93ggE_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93ggU_WEeSEs9SnxOIVHg" name="Tax_Card_CE-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93ggk_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_o93gg0_WEeSEs9SnxOIVHg" name="Tax_Card_FO-constraint" constrainedElement="_o93gdk_WEeSEs9SnxOIVHg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93ghE_WEeSEs9SnxOIVHg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_o93ghU_WEeSEs9SnxOIVHg" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93ghk_WEeSEs9SnxOIVHg" name="tax_card_type" visibility="public" type="_o93gH0_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93gh0_WEeSEs9SnxOIVHg" name="tax_office" visibility="public" type="_o93gIk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93giE_WEeSEs9SnxOIVHg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93giU_WEeSEs9SnxOIVHg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_o8_9Q0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gik_WEeSEs9SnxOIVHg" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gi0_WEeSEs9SnxOIVHg" name="income" visibility="private" type="_o92870_WEeSEs9SnxOIVHg" association="_o93gMU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gjE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gjU_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gjk_WEeSEs9SnxOIVHg" name="tax_Class" visibility="private" type="_o928vU_WEeSEs9SnxOIVHg" association="_o93gN0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gj0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gkE_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gkU_WEeSEs9SnxOIVHg" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gkk_WEeSEs9SnxOIVHg" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gk0_WEeSEs9SnxOIVHg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93glE_WEeSEs9SnxOIVHg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93glU_WEeSEs9SnxOIVHg" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93glk_WEeSEs9SnxOIVHg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gl0_WEeSEs9SnxOIVHg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gmE_WEeSEs9SnxOIVHg" name="tax_payers_address" visibility="public" type="_o9275E_WEeSEs9SnxOIVHg" isDerived="true"/>
        <ownedAttribute xmi:id="_o93gmU_WEeSEs9SnxOIVHg" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gmk_WEeSEs9SnxOIVHg" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gm0_WEeSEs9SnxOIVHg" name="jobs_activity_type" visibility="public" type="_o93gG0_WEeSEs9SnxOIVHg" isDerived="true"/>
        <ownedAttribute xmi:id="_o93gnE_WEeSEs9SnxOIVHg" name="jobs_place_of_work" visibility="public" type="_o93gK0_WEeSEs9SnxOIVHg" isDerived="true"/>
        <ownedAttribute xmi:id="_o93gnU_WEeSEs9SnxOIVHg" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gnk_WEeSEs9SnxOIVHg" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gn0_WEeSEs9SnxOIVHg" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93goE_WEeSEs9SnxOIVHg" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93goU_WEeSEs9SnxOIVHg" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gok_WEeSEs9SnxOIVHg" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93go0_WEeSEs9SnxOIVHg" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gpE_WEeSEs9SnxOIVHg" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gpU_WEeSEs9SnxOIVHg" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gpk_WEeSEs9SnxOIVHg" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gp0_WEeSEs9SnxOIVHg" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gqE_WEeSEs9SnxOIVHg" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gqU_WEeSEs9SnxOIVHg" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gqk_WEeSEs9SnxOIVHg" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gq0_WEeSEs9SnxOIVHg" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93grE_WEeSEs9SnxOIVHg" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93grU_WEeSEs9SnxOIVHg" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93grk_WEeSEs9SnxOIVHg" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gr0_WEeSEs9SnxOIVHg" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gsE_WEeSEs9SnxOIVHg" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gsU_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o928sk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gsk_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gs0_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gtE_WEeSEs9SnxOIVHg" name="income_Tax_Credit" visibility="private" type="_o93gyk_WEeSEs9SnxOIVHg" aggregation="shared" association="_o93gwU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gtU_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gtk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gt0_WEeSEs9SnxOIVHg" name="income_Tax_Deduction" visibility="private" type="_o93hQE_WEeSEs9SnxOIVHg" aggregation="shared" association="_o93hP0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93guE_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93guU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93guk_WEeSEs9SnxOIVHg" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gu0_WEeSEs9SnxOIVHg" name="previous" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93gwk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gvE_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gvU_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gvk_WEeSEs9SnxOIVHg" name="current_tax_card" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93gwk_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gv0_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gwE_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93gwU_WEeSEs9SnxOIVHg" name="include" memberEnd="_o93g1k_WEeSEs9SnxOIVHg _o93gtE_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93gwk_WEeSEs9SnxOIVHg" name="invalidated by" memberEnd="_o93gu0_WEeSEs9SnxOIVHg _o93gvk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o93gw0_WEeSEs9SnxOIVHg" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_o93gxE_WEeSEs9SnxOIVHg" name="CIM">
        <generalization xmi:id="_o93gxU_WEeSEs9SnxOIVHg" general="_o93gyk_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93gxk_WEeSEs9SnxOIVHg" name="CIP">
        <generalization xmi:id="_o93gx0_WEeSEs9SnxOIVHg" general="_o93gyk_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93gyE_WEeSEs9SnxOIVHg" name="CIS">
        <generalization xmi:id="_o93gyU_WEeSEs9SnxOIVHg" general="_o93gyk_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93gyk_WEeSEs9SnxOIVHg" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_o93gy0_WEeSEs9SnxOIVHg" name="grantedBy" visibility="public" type="_o93gBU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93gzE_WEeSEs9SnxOIVHg" name="taxPayer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o93gFE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93gzU_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93gzk_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93gz0_WEeSEs9SnxOIVHg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g0E_WEeSEs9SnxOIVHg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_o93g0U_WEeSEs9SnxOIVHg" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g0k_WEeSEs9SnxOIVHg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_o93g00_WEeSEs9SnxOIVHg" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g1E_WEeSEs9SnxOIVHg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_o93g1U_WEeSEs9SnxOIVHg" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g1k_WEeSEs9SnxOIVHg" name="taxation_Frame" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93gwU_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93g10_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93g2E_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_o93g2U_WEeSEs9SnxOIVHg" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_o93g2k_WEeSEs9SnxOIVHg" name="FD">
        <generalization xmi:id="_o93g20_WEeSEs9SnxOIVHg" general="_o93hOk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93g3E_WEeSEs9SnxOIVHg" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g3U_WEeSEs9SnxOIVHg" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93g3k_WEeSEs9SnxOIVHg" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_o93g30_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o93g4E_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93g4U_WEeSEs9SnxOIVHg" name="FO">
        <generalization xmi:id="_o93g4k_WEeSEs9SnxOIVHg" general="_o93hOk_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93g40_WEeSEs9SnxOIVHg" name="rate_type_for_FO" visibility="public" type="_o93gOk_WEeSEs9SnxOIVHg" isDerived="true"/>
        <ownedOperation xmi:id="_o93g5E_WEeSEs9SnxOIVHg" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_o93g5U_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_o93g5k_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93g50_WEeSEs9SnxOIVHg" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_o93g6E_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_o93g6U_WEeSEs9SnxOIVHg" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_o93g6k_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93g60_WEeSEs9SnxOIVHg" name="CE">
        <eAnnotations xmi:id="_o93g7E_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_o93g7U_WEeSEs9SnxOIVHg" general="_o93hQE_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93g7k_WEeSEs9SnxOIVHg" name="ce_deduction_type" visibility="public" type="_o93gPU_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93g70_WEeSEs9SnxOIVHg" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93g8E_WEeSEs9SnxOIVHg" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93g8U_WEeSEs9SnxOIVHg" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_o93g80_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93g8k_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93g80_WEeSEs9SnxOIVHg" name="compute_disability_flat_rate" constrainedElement="_o93g8U_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93g9E_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93g9U_WEeSEs9SnxOIVHg" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93g9k_WEeSEs9SnxOIVHg" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_o93g-E_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93g90_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93g-E_WEeSEs9SnxOIVHg" name="dependent_relative_flat_rate" constrainedElement="_o93g9k_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93g-U_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93g-k_WEeSEs9SnxOIVHg" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93g-0_WEeSEs9SnxOIVHg" name="AC">
        <generalization xmi:id="_o93g_E_WEeSEs9SnxOIVHg" general="_o93hQE_WEeSEs9SnxOIVHg"/>
        <ownedOperation xmi:id="_o93g_U_WEeSEs9SnxOIVHg" name="is_eligible_income_for_AC" isQuery="true" postcondition="_o93g_0_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93g_k_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93g_0_WEeSEs9SnxOIVHg" name="is_eligible_income_for_AC" constrainedElement="_o93g_U_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hAE_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93hAU_WEeSEs9SnxOIVHg" name="IN_income" type="_o92870_WEeSEs9SnxOIVHg"/>
          <ownedParameter xmi:id="_o93hAk_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93hA0_WEeSEs9SnxOIVHg" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_o93hBU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hBE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hBU_WEeSEs9SnxOIVHg" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_o93hA0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hBk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93hB0_WEeSEs9SnxOIVHg" name="IN_income" type="_o92870_WEeSEs9SnxOIVHg"/>
          <ownedParameter xmi:id="_o93hCE_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hCU_WEeSEs9SnxOIVHg" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_o93hCk_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93hC0_WEeSEs9SnxOIVHg" name="permanent_expense_category" visibility="public" type="_o93f5k_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hDE_WEeSEs9SnxOIVHg" name="DS_for_Interest_Expense">
        <generalization xmi:id="_o93hDU_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
        <ownedOperation xmi:id="_o93hDk_WEeSEs9SnxOIVHg" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_o93hEE_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hD0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hEE_WEeSEs9SnxOIVHg" name="maximum_deductible_amount" constrainedElement="_o93hDk_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hEU_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93hEk_WEeSEs9SnxOIVHg" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93hE0_WEeSEs9SnxOIVHg" name="IN_children_with_allowances" type="_o9277U_WEeSEs9SnxOIVHg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93hFE_WEeSEs9SnxOIVHg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93hFU_WEeSEs9SnxOIVHg"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93hFk_WEeSEs9SnxOIVHg" name="IN_legal_union" type="_o928IE_WEeSEs9SnxOIVHg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93hF0_WEeSEs9SnxOIVHg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93hGE_WEeSEs9SnxOIVHg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hGU_WEeSEs9SnxOIVHg" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_o93hGk_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93hG0_WEeSEs9SnxOIVHg" name="insurance_category" visibility="public" type="_o93f70_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hHE_WEeSEs9SnxOIVHg" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_o93hHU_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93hHk_WEeSEs9SnxOIVHg" name="private_insurance_and_plan_category" visibility="public" type="_o93f6U_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93hH0_WEeSEs9SnxOIVHg" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hIE_WEeSEs9SnxOIVHg" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hIU_WEeSEs9SnxOIVHg" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_o93hIk_WEeSEs9SnxOIVHg" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_o93hJE_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hI0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hJE_WEeSEs9SnxOIVHg" name="get_increase_for_life_insurance" constrainedElement="_o93hIk_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hJU_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93hJk_WEeSEs9SnxOIVHg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_o93hJ0_WEeSEs9SnxOIVHg" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_o93hKU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hKE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hKU_WEeSEs9SnxOIVHg" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_o93hJ0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hKk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_o93hK0_WEeSEs9SnxOIVHg" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_o93hLU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hLE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hLU_WEeSEs9SnxOIVHg" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_o93hK0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hLk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hL0_WEeSEs9SnxOIVHg" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_o93hME_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hMU_WEeSEs9SnxOIVHg" name="DS_for_Donation">
        <generalization xmi:id="_o93hMk_WEeSEs9SnxOIVHg" general="_o93hPE_WEeSEs9SnxOIVHg"/>
        <ownedOperation xmi:id="_o93hM0_WEeSEs9SnxOIVHg" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_o93hNU_WEeSEs9SnxOIVHg">
          <eAnnotations xmi:id="_o93hNE_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_o93hNU_WEeSEs9SnxOIVHg" name="maximum_deductible_amount" constrainedElement="_o93hM0_WEeSEs9SnxOIVHg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_o93hNk_WEeSEs9SnxOIVHg">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_o93hN0_WEeSEs9SnxOIVHg" name="IN_maximum_percentage" type="_o93gRk_WEeSEs9SnxOIVHg"/>
          <ownedParameter xmi:id="_o93hOE_WEeSEs9SnxOIVHg" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_o93hOU_WEeSEs9SnxOIVHg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hOk_WEeSEs9SnxOIVHg" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_o93hO0_WEeSEs9SnxOIVHg" general="_o93hQE_WEeSEs9SnxOIVHg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hPE_WEeSEs9SnxOIVHg" name="DS">
        <generalization xmi:id="_o93hPU_WEeSEs9SnxOIVHg" general="_o93hQE_WEeSEs9SnxOIVHg"/>
        <ownedAttribute xmi:id="_o93hPk_WEeSEs9SnxOIVHg" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93hP0_WEeSEs9SnxOIVHg" name="considers" memberEnd="_o93hSU_WEeSEs9SnxOIVHg _o93gt0_WEeSEs9SnxOIVHg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_o93hQE_WEeSEs9SnxOIVHg" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_o93hQU_WEeSEs9SnxOIVHg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hQk_WEeSEs9SnxOIVHg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hQ0_WEeSEs9SnxOIVHg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hRE_WEeSEs9SnxOIVHg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hRU_WEeSEs9SnxOIVHg" name="tax_Payer" visibility="private" type="_o928WU_WEeSEs9SnxOIVHg" association="_o93gOE_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93hRk_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93hR0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hSE_WEeSEs9SnxOIVHg" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hSU_WEeSEs9SnxOIVHg" name="tax_card" visibility="private" type="_o93gdk_WEeSEs9SnxOIVHg" association="_o93hP0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93hSk_WEeSEs9SnxOIVHg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93hS0_WEeSEs9SnxOIVHg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_o93hTE_WEeSEs9SnxOIVHg" name="expenses" visibility="private" type="_o93f9E_WEeSEs9SnxOIVHg" association="_o93hT0_WEeSEs9SnxOIVHg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o93hTU_WEeSEs9SnxOIVHg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o93hTk_WEeSEs9SnxOIVHg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_o93hT0_WEeSEs9SnxOIVHg" name="is computed based on" memberEnd="_o93hTE_WEeSEs9SnxOIVHg _o93gAk_WEeSEs9SnxOIVHg"/>
    </packagedElement>
    <profileApplication xmi:id="_o93hUE_WEeSEs9SnxOIVHg">
      <eAnnotations xmi:id="_o93hUU_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_o93hUk_WEeSEs9SnxOIVHg">
      <eAnnotations xmi:id="_o93hU0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_o84qlk_WEeSEs9SnxOIVHg"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_o84qlE_WEeSEs9SnxOIVHg"/>
    </profileApplication>
    <profileApplication xmi:id="_o93hVE_WEeSEs9SnxOIVHg">
      <eAnnotations xmi:id="_o93hVU_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_o92UUU_WEeSEs9SnxOIVHg"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_o92UT0_WEeSEs9SnxOIVHg"/>
    </profileApplication>
    <profileApplication xmi:id="_o93hVk_WEeSEs9SnxOIVHg">
      <eAnnotations xmi:id="_o93hV0_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_o85REE_WEeSEs9SnxOIVHg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_o85RDk_WEeSEs9SnxOIVHg"/>
    </profileApplication>
    <profileApplication xmi:id="_o93hWE_WEeSEs9SnxOIVHg">
      <eAnnotations xmi:id="_o93hWU_WEeSEs9SnxOIVHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_o91tI0_WEeSEs9SnxOIVHg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_o91tIU_WEeSEs9SnxOIVHg"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_o93hWk_WEeSEs9SnxOIVHg" base_Comment="_o9280k_WEeSEs9SnxOIVHg"/>
  <Default:Documentation xmi:id="_o93hW0_WEeSEs9SnxOIVHg" base_Comment="_o928IU_WEeSEs9SnxOIVHg"/>
</xmi:XMI>
