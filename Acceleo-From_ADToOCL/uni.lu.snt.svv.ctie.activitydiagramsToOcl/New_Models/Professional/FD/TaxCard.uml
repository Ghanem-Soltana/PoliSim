<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_Z7nDHxZBEeSjQIm_Ms2ZvQ">
  <uml:Package xmi:id="_Z7fHbBZBEeSjQIm_Ms2ZvQ" name="TaxCard">
    <packageImport xmi:id="_Z7fHbRZBEeSjQIm_Ms2ZvQ">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_Z7fHbhZBEeSjQIm_Ms2ZvQ">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_Z7fHbxZBEeSjQIm_Ms2ZvQ">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_Z8plbBZBEeSjQIm_Ms2ZvQ"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fHcBZBEeSjQIm_Ms2ZvQ" name="Tax_Card_Domain">
      <packageImport xmi:id="_Z7fHcRZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7fvHBZBEeSjQIm_Ms2ZvQ"/>
      <packageImport xmi:id="_Z7fHchZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7fHdxZBEeSjQIm_Ms2ZvQ"/>
      <packageImport xmi:id="_Z7fHcxZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7fvBhZBEeSjQIm_Ms2ZvQ"/>
      <packageImport xmi:id="_Z7fHdBZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7fIaxZBEeSjQIm_Ms2ZvQ"/>
      <packageImport xmi:id="_Z7fHdRZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7ftyhZBEeSjQIm_Ms2ZvQ"/>
      <packageImport xmi:id="_Z7fHdhZBEeSjQIm_Ms2ZvQ" importedPackage="_Z7fuuBZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fHdxZBEeSjQIm_Ms2ZvQ" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fHeBZBEeSjQIm_Ms2ZvQ" name="taxed under" memberEnd="_Z7fILRZBEeSjQIm_Ms2ZvQ _Z7fIXBZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHeRZBEeSjQIm_Ms2ZvQ" name="Income_Tax">
        <ownedAttribute xmi:id="_Z7fHehZBEeSjQIm_Ms2ZvQ" name="taxPayer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fIWRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHexZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHfBZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHfRZBEeSjQIm_Ms2ZvQ" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHfhZBEeSjQIm_Ms2ZvQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHfxZBEeSjQIm_Ms2ZvQ" name="Address">
        <ownedAttribute xmi:id="_Z7fHgBZBEeSjQIm_Ms2ZvQ" name="taxPayer" visibility="private" type="_Z7fHzRZBEeSjQIm_Ms2ZvQ" association="_Z7fIUBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHgRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHghZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHgxZBEeSjQIm_Ms2ZvQ" name="country" visibility="public" type="_Z7fuUBZBEeSjQIm_Ms2ZvQ">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_Z7fHhBZBEeSjQIm_Ms2ZvQ" name="LU" type="_Z7fuUBZBEeSjQIm_Ms2ZvQ" instance="_Z7fuURZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHhRZBEeSjQIm_Ms2ZvQ" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHhhZBEeSjQIm_Ms2ZvQ" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHhxZBEeSjQIm_Ms2ZvQ" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHiBZBEeSjQIm_Ms2ZvQ" name="Dependent">
        <generalization xmi:id="_Z7fHiRZBEeSjQIm_Ms2ZvQ" general="_Z7fHzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fHihZBEeSjQIm_Ms2ZvQ" name="dependent_type" visibility="public" type="_Z7fudRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fHixZBEeSjQIm_Ms2ZvQ" name="household" visibility="private" type="_Z7fHtBZBEeSjQIm_Ms2ZvQ" association="_Z7fIVxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHjBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHjRZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHjhZBEeSjQIm_Ms2ZvQ" name="responsible_person" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fIVhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHjxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHkBZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHkRZBEeSjQIm_Ms2ZvQ" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7fHkhZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHkxZBEeSjQIm_Ms2ZvQ" name="expense" visibility="private" type="_Z7fuNxZBEeSjQIm_Ms2ZvQ" association="_Z7fIWBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHlBZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHlRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHlhZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fIVRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHlxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHmBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fHmRZBEeSjQIm_Ms2ZvQ" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_Z7fHmhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fHmxZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fHnBZBEeSjQIm_Ms2ZvQ" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_Z7fHnRZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fHnhZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fHnxZBEeSjQIm_Ms2ZvQ" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_Z7fHoBZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fHoRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fHohZBEeSjQIm_Ms2ZvQ" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_Z7fHpBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fHoxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fHpBZBEeSjQIm_Ms2ZvQ" name="is_dependent_following_continued_studies" constrainedElement="_Z7fHohZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fHpRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fHphZBEeSjQIm_Ms2ZvQ" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fHpxZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHqBZBEeSjQIm_Ms2ZvQ" name="External_Allowance">
        <ownedAttribute xmi:id="_Z7fHqRZBEeSjQIm_Ms2ZvQ" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHqhZBEeSjQIm_Ms2ZvQ" name="grantor" visibility="public" type="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fHqxZBEeSjQIm_Ms2ZvQ" name="person" visibility="private" type="_Z7fHzRZBEeSjQIm_Ms2ZvQ" association="_Z7fIURZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHrBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHrRZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHrhZBEeSjQIm_Ms2ZvQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHrxZBEeSjQIm_Ms2ZvQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHsBZBEeSjQIm_Ms2ZvQ" name="Fiscal_Address">
        <generalization xmi:id="_Z7fHsRZBEeSjQIm_Ms2ZvQ" general="_Z7fHfxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHshZBEeSjQIm_Ms2ZvQ" name="Habitual_Address">
        <generalization xmi:id="_Z7fHsxZBEeSjQIm_Ms2ZvQ" general="_Z7fHfxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHtBZBEeSjQIm_Ms2ZvQ" name="Household">
        <ownedAttribute xmi:id="_Z7fHtRZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fIVBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHthZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHtxZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHuBZBEeSjQIm_Ms2ZvQ" name="dependent" visibility="private" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ" association="_Z7fIVxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHuRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHuhZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHuxZBEeSjQIm_Ms2ZvQ" name="Legal_Union_Record">
        <ownedComment xmi:id="_Z7fHvBZBEeSjQIm_Ms2ZvQ" annotatedElement="_Z7fHuxZBEeSjQIm_Ms2ZvQ">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_Z7fHvRZBEeSjQIm_Ms2ZvQ" name="Legal_Union-different_people-constraint" constrainedElement="_Z7fHuxZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fHvhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_Z7fHvxZBEeSjQIm_Ms2ZvQ" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHwBZBEeSjQIm_Ms2ZvQ" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHwRZBEeSjQIm_Ms2ZvQ" name="individual_A" visibility="private" type="_Z7fHzRZBEeSjQIm_Ms2ZvQ" association="_Z7fIUxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHwhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHwxZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHxBZBEeSjQIm_Ms2ZvQ" name="individual_B" visibility="private" type="_Z7fHzRZBEeSjQIm_Ms2ZvQ" association="_Z7fIUhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fHxRZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fHxhZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHxxZBEeSjQIm_Ms2ZvQ" name="Marriage_Record">
        <generalization xmi:id="_Z7fHyBZBEeSjQIm_Ms2ZvQ" general="_Z7fHuxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHyRZBEeSjQIm_Ms2ZvQ" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_Z7fHyhZBEeSjQIm_Ms2ZvQ" general="_Z7fH9BZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHyxZBEeSjQIm_Ms2ZvQ" name="Partnership_Record">
        <generalization xmi:id="_Z7fHzBZBEeSjQIm_Ms2ZvQ" general="_Z7fHuxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fHzRZBEeSjQIm_Ms2ZvQ" name="Physical_Person">
        <ownedAttribute xmi:id="_Z7fHzhZBEeSjQIm_Ms2ZvQ" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fHzxZBEeSjQIm_Ms2ZvQ" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH0BZBEeSjQIm_Ms2ZvQ" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH0RZBEeSjQIm_Ms2ZvQ" name="allowances" visibility="private" type="_Z7fHqBZBEeSjQIm_Ms2ZvQ" association="_Z7fIURZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fH0hZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fH0xZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH1BZBEeSjQIm_Ms2ZvQ" name="addresses" visibility="private" type="_Z7fHfxZBEeSjQIm_Ms2ZvQ" association="_Z7fIUBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fH1RZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fH1hZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH1xZBEeSjQIm_Ms2ZvQ" name="legal_union_A" visibility="private" type="_Z7fHuxZBEeSjQIm_Ms2ZvQ" association="_Z7fIUxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fH2BZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fH2RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH2hZBEeSjQIm_Ms2ZvQ" name="legal_union_B" visibility="private" type="_Z7fHuxZBEeSjQIm_Ms2ZvQ" association="_Z7fIUhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fH2xZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fH3BZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH3RZBEeSjQIm_Ms2ZvQ" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH3hZBEeSjQIm_Ms2ZvQ" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fH3xZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fH4BZBEeSjQIm_Ms2ZvQ" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fH4RZBEeSjQIm_Ms2ZvQ" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_Z7fH4hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Z7fH4xZBEeSjQIm_Ms2ZvQ" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Z7fH5BZBEeSjQIm_Ms2ZvQ" name="IN_person" type="_Z7fHzRZBEeSjQIm_Ms2ZvQ"/>
          <ownedParameter xmi:id="_Z7fH5RZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fH5hZBEeSjQIm_Ms2ZvQ" name="is_person_assisting_spouse" isQuery="true" postcondition="_Z7fH6BZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fH5xZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fH6BZBEeSjQIm_Ms2ZvQ" name="is_assisting_spouse" constrainedElement="_Z7fH5hZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH6RZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fH6hZBEeSjQIm_Ms2ZvQ" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fH6xZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fH7BZBEeSjQIm_Ms2ZvQ" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_Z7fH7hZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fH7RZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fH7hZBEeSjQIm_Ms2ZvQ" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_Z7fH7BZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH7xZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fH8BZBEeSjQIm_Ms2ZvQ" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fH8RZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fH8hZBEeSjQIm_Ms2ZvQ" name="Resident_Tax_Payer">
        <generalization xmi:id="_Z7fH8xZBEeSjQIm_Ms2ZvQ" general="_Z7fH9BZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fH9BZBEeSjQIm_Ms2ZvQ" name="Tax_Payer">
        <ownedRule xmi:id="_Z7fH9RZBEeSjQIm_Ms2ZvQ" name="NonResidentTaxPayer-constraint" constrainedElement="_Z7fHyRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH9hZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fH9xZBEeSjQIm_Ms2ZvQ" name="ResidentTaxPayer-constraint" constrainedElement="_Z7fH8hZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH-BZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fH-RZBEeSjQIm_Ms2ZvQ" name="SubjectToIncomeTax-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH-hZBEeSjQIm_Ms2ZvQ" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fH-xZBEeSjQIm_Ms2ZvQ" name="TaxCredit-CIS-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH_BZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fH_RZBEeSjQIm_Ms2ZvQ" name="TaxCredit-CIP-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fH_hZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fH_xZBEeSjQIm_Ms2ZvQ" name="TaxCredit-CIM-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIABZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIARZBEeSjQIm_Ms2ZvQ" name="Legal_Union-monogamus-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIAhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIAxZBEeSjQIm_Ms2ZvQ" name="TaxClass-unique-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIBBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIBRZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-CE-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIBhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIBxZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fICBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fICRZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIChZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fICxZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIDBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIDRZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIDhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIDxZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIEBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIERZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-5-donation" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIEhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIExZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIFBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIFRZBEeSjQIm_Ms2ZvQ" name="TaxCard-unique-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIFhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIFxZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-FD-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIGBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIGRZBEeSjQIm_Ms2ZvQ" name="TaxDeduction-FO-constraint" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIGhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIGxZBEeSjQIm_Ms2ZvQ" name="test_for_iterate" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIHBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIHRZBEeSjQIm_Ms2ZvQ" name="NEW_TaxDeduction-CE-INVALIDITY" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIHhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9;income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_invalidity_and_infirmity.declared_amount->sum() in&#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#x9;&#xA;else&#xA;false&#xA;endif&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIHxZBEeSjQIm_Ms2ZvQ" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIIBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_dependence_and_care.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIIRZBEeSjQIm_Ms2ZvQ" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE-CHILDREN-NOT-PART-OF-HOUSEHOLD" constrainedElement="_Z7fH9BZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIIhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_care_for_children_not_part_of_the_household.declared_amount->sum() in&#xA;&#x9; &#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;     if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_Z7fIIxZBEeSjQIm_Ms2ZvQ" general="_Z7fHzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fIJBZBEeSjQIm_Ms2ZvQ" name="incomes" visibility="private" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ" association="_Z7fuTxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIJRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIJhZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIJxZBEeSjQIm_Ms2ZvQ" name="incomeTax" visibility="private" type="_Z7fHeRZBEeSjQIm_Ms2ZvQ" association="_Z7fIWRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIKBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIKRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIKhZBEeSjQIm_Ms2ZvQ" name="income_Tax_Credit" visibility="private" type="_Z7fvDRZBEeSjQIm_Ms2ZvQ" association="_Z7fuVxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIKxZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fILBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fILRZBEeSjQIm_Ms2ZvQ" name="tax_class" visibility="private" type="_Z7fIWhZBEeSjQIm_Ms2ZvQ" association="_Z7fHeBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fILhZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fILxZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIMBZBEeSjQIm_Ms2ZvQ" name="household" visibility="private" type="_Z7fHtBZBEeSjQIm_Ms2ZvQ" association="_Z7fIVBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIMRZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIMhZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIMxZBEeSjQIm_Ms2ZvQ" name="dependents" visibility="private" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ" association="_Z7fIVhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fINBZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fINRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fINhZBEeSjQIm_Ms2ZvQ" name="income_Tax_Deduction" visibility="private" type="_Z7gU0RZBEeSjQIm_Ms2ZvQ" association="_Z7fuexZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fINxZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIOBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIORZBEeSjQIm_Ms2ZvQ" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIOhZBEeSjQIm_Ms2ZvQ" name="expenses" visibility="private" type="_Z7fuNxZBEeSjQIm_Ms2ZvQ" association="_Z7fufBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIOxZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIPBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIPRZBEeSjQIm_Ms2ZvQ" name="dependent" visibility="private" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ" association="_Z7fIVRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIPhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIPxZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIQBZBEeSjQIm_Ms2ZvQ" name="tax_Card" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" aggregation="shared" association="_Z7fITxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIQRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIQhZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIQxZBEeSjQIm_Ms2ZvQ" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fIRBZBEeSjQIm_Ms2ZvQ" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_Z7fIRhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fIRRZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fIRhZBEeSjQIm_Ms2ZvQ" name="is_child_part_of_household" constrainedElement="_Z7fIRBZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIRxZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fISBZBEeSjQIm_Ms2ZvQ" name="IN_dependent" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ"/>
          <ownedParameter xmi:id="_Z7fISRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fIShZBEeSjQIm_Ms2ZvQ" name="number_of_months_of_allowance" isQuery="true" postcondition="_Z7fITBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fISxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fITBZBEeSjQIm_Ms2ZvQ" name="number_od_months_of_allowance" constrainedElement="_Z7fIShZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fITRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fIThZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fITxZBEeSjQIm_Ms2ZvQ" name="" memberEnd="_Z7fIQBZBEeSjQIm_Ms2ZvQ _Z7fu9BZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIUBZBEeSjQIm_Ms2ZvQ" name="located at" memberEnd="_Z7fH1BZBEeSjQIm_Ms2ZvQ _Z7fHgBZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIURZBEeSjQIm_Ms2ZvQ" name="receives" memberEnd="_Z7fH0RZBEeSjQIm_Ms2ZvQ _Z7fHqxZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIUhZBEeSjQIm_Ms2ZvQ" name="person B" memberEnd="_Z7fHxBZBEeSjQIm_Ms2ZvQ _Z7fH2hZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIUxZBEeSjQIm_Ms2ZvQ" name="person A" memberEnd="_Z7fHwRZBEeSjQIm_Ms2ZvQ _Z7fH1xZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIVBZBEeSjQIm_Ms2ZvQ" name="maintains" memberEnd="_Z7fIMBZBEeSjQIm_Ms2ZvQ _Z7fHtRZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIVRZBEeSjQIm_Ms2ZvQ" name="as tax payer" memberEnd="_Z7fHlhZBEeSjQIm_Ms2ZvQ _Z7fIPRZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIVhZBEeSjQIm_Ms2ZvQ" name="supports" memberEnd="_Z7fIMxZBEeSjQIm_Ms2ZvQ _Z7fHjhZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIVxZBEeSjQIm_Ms2ZvQ" name="is part of" memberEnd="_Z7fHixZBEeSjQIm_Ms2ZvQ _Z7fHuBZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIWBZBEeSjQIm_Ms2ZvQ" name="incurred over" memberEnd="_Z7fuPhZBEeSjQIm_Ms2ZvQ _Z7fHkxZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIWRZBEeSjQIm_Ms2ZvQ" name="is subject to" memberEnd="_Z7fIJxZBEeSjQIm_Ms2ZvQ _Z7fHehZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIWhZBEeSjQIm_Ms2ZvQ" name="Tax_Class">
        <ownedAttribute xmi:id="_Z7fIWxZBEeSjQIm_Ms2ZvQ" name="tax_class" visibility="public" type="_Z7fuahZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fIXBZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fHeBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIXRZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIXhZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIXxZBEeSjQIm_Ms2ZvQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIYBZBEeSjQIm_Ms2ZvQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIYRZBEeSjQIm_Ms2ZvQ" name="tax_card" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7fuehZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIYhZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIYxZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIZBZBEeSjQIm_Ms2ZvQ" name="current_tax_class" visibility="private" type="_Z7fIWhZBEeSjQIm_Ms2ZvQ" association="_Z7fIahZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIZRZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIZhZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIZxZBEeSjQIm_Ms2ZvQ" name="prev" visibility="private" type="_Z7fIWhZBEeSjQIm_Ms2ZvQ" association="_Z7fIahZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIaBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIaRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIahZBEeSjQIm_Ms2ZvQ" name="replaced by" memberEnd="_Z7fIZBZBEeSjQIm_Ms2ZvQ _Z7fIZxZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fIaxZBEeSjQIm_Ms2ZvQ" name="Income_Concepts">
      <ownedComment xmi:id="_Z7fIbBZBEeSjQIm_Ms2ZvQ" annotatedElement="_Z7fIhhZBEeSjQIm_Ms2ZvQ">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIbRZBEeSjQIm_Ms2ZvQ" name="Income_Type">
        <ownedAttribute xmi:id="_Z7fIbhZBEeSjQIm_Ms2ZvQ" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_Z7fIbxZBEeSjQIm_Ms2ZvQ" annotatedElement="_Z7fIbhZBEeSjQIm_Ms2ZvQ">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIcBZBEeSjQIm_Ms2ZvQ" name="income" visibility="private" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ" association="_Z7fIhxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIcRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIchZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIcxZBEeSjQIm_Ms2ZvQ" name="Trade_and_Business_Income">
        <generalization xmi:id="_Z7fIdBZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIdRZBEeSjQIm_Ms2ZvQ" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_Z7fIdhZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIdxZBEeSjQIm_Ms2ZvQ" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_Z7fIeBZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIeRZBEeSjQIm_Ms2ZvQ" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_Z7fIehZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fIexZBEeSjQIm_Ms2ZvQ" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7fIfBZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIfRZBEeSjQIm_Ms2ZvQ" name="Capital_and_Investments_Income">
        <generalization xmi:id="_Z7fIfhZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIfxZBEeSjQIm_Ms2ZvQ" name="Employment_Income">
        <generalization xmi:id="_Z7fIgBZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIgRZBEeSjQIm_Ms2ZvQ" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_Z7fIghZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIgxZBEeSjQIm_Ms2ZvQ" name="Sundry_Income">
        <generalization xmi:id="_Z7fIhBZBEeSjQIm_Ms2ZvQ" general="_Z7fIbRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIhRZBEeSjQIm_Ms2ZvQ" name="Directors_Fee">
        <generalization xmi:id="_Z7fIhhZBEeSjQIm_Ms2ZvQ" general="_Z7fIdxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fIhxZBEeSjQIm_Ms2ZvQ" name="has as type" memberEnd="_Z7fImxZBEeSjQIm_Ms2ZvQ _Z7fIcBZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIiBZBEeSjQIm_Ms2ZvQ" name="Foreign_Income">
        <generalization xmi:id="_Z7fIiRZBEeSjQIm_Ms2ZvQ" general="_Z7fIjBZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIihZBEeSjQIm_Ms2ZvQ" name="Local_Income">
        <generalization xmi:id="_Z7fIixZBEeSjQIm_Ms2ZvQ" general="_Z7fIjBZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fIjBZBEeSjQIm_Ms2ZvQ" name="Income">
        <ownedRule xmi:id="_Z7fIjRZBEeSjQIm_Ms2ZvQ" name="Tax_Deduction_FD-constraint" constrainedElement="_Z7fIjBZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIjhZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fIjxZBEeSjQIm_Ms2ZvQ" name="Tax_Deduction_FO-constraint" constrainedElement="_Z7fIjBZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fIkBZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_Z7fIkRZBEeSjQIm_Ms2ZvQ" name="taxPayer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fuTxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fIkhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fIkxZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIlBZBEeSjQIm_Ms2ZvQ" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIlRZBEeSjQIm_Ms2ZvQ" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIlhZBEeSjQIm_Ms2ZvQ" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fIlxZBEeSjQIm_Ms2ZvQ" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fImBZBEeSjQIm_Ms2ZvQ" name="tax_card" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7fudBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fImRZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fImhZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fImxZBEeSjQIm_Ms2ZvQ" name="income_type" visibility="private" type="_Z7fIbRZBEeSjQIm_Ms2ZvQ" association="_Z7fIhxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7ftsBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7ftsRZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ftshZBEeSjQIm_Ms2ZvQ" name="expenses" visibility="private" type="_Z7fuNxZBEeSjQIm_Ms2ZvQ" association="_Z7fuNhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7ftsxZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fttBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fttRZBEeSjQIm_Ms2ZvQ" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ftthZBEeSjQIm_Ms2ZvQ" name="distances" visibility="private" type="_Z7ftwhZBEeSjQIm_Ms2ZvQ" association="_Z7ftyRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fttxZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7ftuBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7ftuRZBEeSjQIm_Ms2ZvQ" name="compute_duration_of_contract" isQuery="true" postcondition="_Z7ftuxZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7ftuhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7ftuxZBEeSjQIm_Ms2ZvQ" name="get_duration" constrainedElement="_Z7ftuRZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ftvBZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7ftvRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7ftvhZBEeSjQIm_Ms2ZvQ" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_Z7ftvxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7ftwBZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7ftwRZBEeSjQIm_Ms2ZvQ" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ftwhZBEeSjQIm_Ms2ZvQ" name="Distance">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Z7ftwxZBEeSjQIm_Ms2ZvQ" name="value" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Z7gVMxZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Z7ftxBZBEeSjQIm_Ms2ZvQ" name="month" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Z7gVHRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Z7ftxRZBEeSjQIm_Ms2ZvQ" name="full_time_equivalent" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Z7gVHRZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ftxhZBEeSjQIm_Ms2ZvQ" name="income" visibility="private" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ" association="_Z7ftyRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7ftxxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7ftyBZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7ftyRZBEeSjQIm_Ms2ZvQ" name="has" memberEnd="_Z7ftxhZBEeSjQIm_Ms2ZvQ _Z7ftthZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7ftyhZBEeSjQIm_Ms2ZvQ" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ftyxZBEeSjQIm_Ms2ZvQ" name="Permanent_Expense">
        <generalization xmi:id="_Z7ftzBZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ftzRZBEeSjQIm_Ms2ZvQ" name="category" visibility="public" type="_Z7fuKRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ftzhZBEeSjQIm_Ms2ZvQ" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ftzxZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7ft0BZBEeSjQIm_Ms2ZvQ" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_Z7ft0hZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7ft0RZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7ft0hZBEeSjQIm_Ms2ZvQ" name="is_eligible" constrainedElement="_Z7ft0BZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ft0xZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7ft1BZBEeSjQIm_Ms2ZvQ" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7ft1RZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft1hZBEeSjQIm_Ms2ZvQ" name="Interest_Expense">
        <generalization xmi:id="_Z7ft1xZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft2BZBEeSjQIm_Ms2ZvQ" name="Special_Expense_DS">
        <generalization xmi:id="_Z7ft2RZBEeSjQIm_Ms2ZvQ" general="_Z7fuNxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft2hZBEeSjQIm_Ms2ZvQ" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_Z7ft2xZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft3BZBEeSjQIm_Ms2ZvQ" name="category" visibility="public" type="_Z7fuLBZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft3RZBEeSjQIm_Ms2ZvQ" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft3hZBEeSjQIm_Ms2ZvQ" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_Z7ft3xZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ft4BZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7ft4RZBEeSjQIm_Ms2ZvQ" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_Z7ft4xZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7ft4hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7ft4xZBEeSjQIm_Ms2ZvQ" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_Z7ft4RZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ft5BZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7ft5RZBEeSjQIm_Ms2ZvQ" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft5hZBEeSjQIm_Ms2ZvQ" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_Z7ft5xZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft6BZBEeSjQIm_Ms2ZvQ" name="category" visibility="public" type="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft6RZBEeSjQIm_Ms2ZvQ" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ft6hZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft6xZBEeSjQIm_Ms2ZvQ" name="Donation">
        <generalization xmi:id="_Z7ft7BZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft7RZBEeSjQIm_Ms2ZvQ" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft7hZBEeSjQIm_Ms2ZvQ" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ft7xZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft8BZBEeSjQIm_Ms2ZvQ" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7ft8RZBEeSjQIm_Ms2ZvQ" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_Z7ft8xZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7ft8hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7ft8xZBEeSjQIm_Ms2ZvQ" name="is_leagaly_approved_beneficiary" constrainedElement="_Z7ft8RZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ft9BZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7ft9RZBEeSjQIm_Ms2ZvQ" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7ft9hZBEeSjQIm_Ms2ZvQ" name="Loss_Carryforward">
        <ownedRule xmi:id="_Z7ft9xZBEeSjQIm_Ms2ZvQ" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_Z7ft9hZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ft-BZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_Z7ft-RZBEeSjQIm_Ms2ZvQ" general="_Z7ft2BZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7ft-hZBEeSjQIm_Ms2ZvQ" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft-xZBEeSjQIm_Ms2ZvQ" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft_BZBEeSjQIm_Ms2ZvQ" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ft_RZBEeSjQIm_Ms2ZvQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7ft_hZBEeSjQIm_Ms2ZvQ" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Z7ft_xZBEeSjQIm_Ms2ZvQ" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fuABZBEeSjQIm_Ms2ZvQ" name="is_accountability_regular" isQuery="true" postcondition="_Z7fuAhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fuARZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fuAhZBEeSjQIm_Ms2ZvQ" name="is_accounatbility_regular" constrainedElement="_Z7fuABZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuAxZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fuBBZBEeSjQIm_Ms2ZvQ" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fuBRZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fuBhZBEeSjQIm_Ms2ZvQ" name="is_compensated_by_other_means" isQuery="true" postcondition="_Z7fuCBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fuBxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fuCBZBEeSjQIm_Ms2ZvQ" name="is_compensated_by_other_means" constrainedElement="_Z7fuBhZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuCRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fuChZBEeSjQIm_Ms2ZvQ" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fuCxZBEeSjQIm_Ms2ZvQ" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_Z7fuDRZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fuDBZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fuDRZBEeSjQIm_Ms2ZvQ" name="partner_in_business" constrainedElement="_Z7fuCxZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuDhZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fuDxZBEeSjQIm_Ms2ZvQ" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fuEBZBEeSjQIm_Ms2ZvQ" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_Z7fuEhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fuERZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fuEhZBEeSjQIm_Ms2ZvQ" name="inherited_business_ownership" constrainedElement="_Z7fuEBZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuExZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fuFBZBEeSjQIm_Ms2ZvQ" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuFRZBEeSjQIm_Ms2ZvQ" name="Spousal_Expense_AC">
        <generalization xmi:id="_Z7fuFhZBEeSjQIm_Ms2ZvQ" general="_Z7fuNxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuFxZBEeSjQIm_Ms2ZvQ" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_Z7fuGBZBEeSjQIm_Ms2ZvQ" general="_Z7fuNxZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fuGRZBEeSjQIm_Ms2ZvQ" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuGhZBEeSjQIm_Ms2ZvQ" name="ce_type" visibility="public" type="_Z7fugBZBEeSjQIm_Ms2ZvQ"/>
        <ownedOperation xmi:id="_Z7fuGxZBEeSjQIm_Ms2ZvQ" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_Z7fuHBZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fuHRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fuHhZBEeSjQIm_Ms2ZvQ" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_Z7fuIBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fuHxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fuIBZBEeSjQIm_Ms2ZvQ" name="thresholded_deduction_percentage" constrainedElement="_Z7fuHhZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuIRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fuIhZBEeSjQIm_Ms2ZvQ" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuIxZBEeSjQIm_Ms2ZvQ" name="Travel_Expense_FD">
        <generalization xmi:id="_Z7fuJBZBEeSjQIm_Ms2ZvQ" general="_Z7fuJxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuJRZBEeSjQIm_Ms2ZvQ" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_Z7fuJhZBEeSjQIm_Ms2ZvQ" general="_Z7fuJxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuJxZBEeSjQIm_Ms2ZvQ" name="Professional_Expense">
        <generalization xmi:id="_Z7fuKBZBEeSjQIm_Ms2ZvQ" general="_Z7fuNxZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuKRZBEeSjQIm_Ms2ZvQ" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_Z7fuKhZBEeSjQIm_Ms2ZvQ" name="MISCELLANEOUS_DEBT" classifier="_Z7fuKRZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuKxZBEeSjQIm_Ms2ZvQ" name="ALIMONY" classifier="_Z7fuKRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuLBZBEeSjQIm_Ms2ZvQ" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_Z7fuLRZBEeSjQIm_Ms2ZvQ" name="PRIVATE_INSURANCE" classifier="_Z7fuLBZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuLhZBEeSjQIm_Ms2ZvQ" name="PRIVATE_LIFE_INSURANCE" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuLxZBEeSjQIm_Ms2ZvQ" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_Z7fuLBZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuMBZBEeSjQIm_Ms2ZvQ" name="HOUSING_SAVING_PLAN" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuMRZBEeSjQIm_Ms2ZvQ" name="OLD_AGE_PENSION_PLAN" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuMhZBEeSjQIm_Ms2ZvQ" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_Z7fuMxZBEeSjQIm_Ms2ZvQ" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuNBZBEeSjQIm_Ms2ZvQ" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
        <ownedLiteral xmi:id="_Z7fuNRZBEeSjQIm_Ms2ZvQ" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fuNhZBEeSjQIm_Ms2ZvQ" name="influences" memberEnd="_Z7fuQhZBEeSjQIm_Ms2ZvQ _Z7ftshZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuNxZBEeSjQIm_Ms2ZvQ" name="Expense">
        <ownedAttribute xmi:id="_Z7fuOBZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fufBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuORZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fuOhZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuOxZBEeSjQIm_Ms2ZvQ" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuPBZBEeSjQIm_Ms2ZvQ" name="expense_purpose" visibility="public" type="_Z7fuhBZBEeSjQIm_Ms2ZvQ">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_Z7fuPRZBEeSjQIm_Ms2ZvQ" name="OTHER" type="_Z7fuhBZBEeSjQIm_Ms2ZvQ" instance="_Z7fuiBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuPhZBEeSjQIm_Ms2ZvQ" name="dependent" visibility="private" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ" association="_Z7fIWBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuPxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fuQBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuQRZBEeSjQIm_Ms2ZvQ" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuQhZBEeSjQIm_Ms2ZvQ" name="income" visibility="private" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ" association="_Z7fuNhZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuQxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fuRBZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuRRZBEeSjQIm_Ms2ZvQ" name="deduction" visibility="private" type="_Z7gU0RZBEeSjQIm_Ms2ZvQ" association="_Z7gU4BZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuRhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fuRxZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuSBZBEeSjQIm_Ms2ZvQ" name="Grantor">
      <ownedLiteral xmi:id="_Z7fuSRZBEeSjQIm_Ms2ZvQ" name="ACD" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuShZBEeSjQIm_Ms2ZvQ" name="Employer" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuSxZBEeSjQIm_Ms2ZvQ" name="CNPF" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuTBZBEeSjQIm_Ms2ZvQ" name="CEDIES" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuTRZBEeSjQIm_Ms2ZvQ" name="SNJ" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuThZBEeSjQIm_Ms2ZvQ" name="CNAP" classifier="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fuTxZBEeSjQIm_Ms2ZvQ" name="earns" memberEnd="_Z7fIJBZBEeSjQIm_Ms2ZvQ _Z7fIkRZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuUBZBEeSjQIm_Ms2ZvQ" name="Country">
      <ownedLiteral xmi:id="_Z7fuURZBEeSjQIm_Ms2ZvQ" name="LU" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuUhZBEeSjQIm_Ms2ZvQ" name="FR" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuUxZBEeSjQIm_Ms2ZvQ" name="BE" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuVBZBEeSjQIm_Ms2ZvQ" name="DE" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuVRZBEeSjQIm_Ms2ZvQ" name="NL" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuVhZBEeSjQIm_Ms2ZvQ" name="OTHER" classifier="_Z7fuUBZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fuVxZBEeSjQIm_Ms2ZvQ" name="credited for" memberEnd="_Z7fIKhZBEeSjQIm_Ms2ZvQ _Z7fvDxZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuWBZBEeSjQIm_Ms2ZvQ" name="Date">
      <ownedAttribute xmi:id="_Z7fuWRZBEeSjQIm_Ms2ZvQ" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuWhZBEeSjQIm_Ms2ZvQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fuWxZBEeSjQIm_Ms2ZvQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Z7fuXBZBEeSjQIm_Ms2ZvQ" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Z7fuXRZBEeSjQIm_Ms2ZvQ" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuXhZBEeSjQIm_Ms2ZvQ" name="Job_Activity">
      <ownedLiteral xmi:id="_Z7fuXxZBEeSjQIm_Ms2ZvQ" name="Salary" classifier="_Z7fuXhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuYBZBEeSjQIm_Ms2ZvQ" name="Pension" classifier="_Z7fuXhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuYRZBEeSjQIm_Ms2ZvQ" name="Annuity" classifier="_Z7fuXhZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuYhZBEeSjQIm_Ms2ZvQ" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_Z7fuYxZBEeSjQIm_Ms2ZvQ" name="Principal" classifier="_Z7fuYhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuZBZBEeSjQIm_Ms2ZvQ" name="Additional" classifier="_Z7fuYhZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuZRZBEeSjQIm_Ms2ZvQ" name="Tax_Office">
      <ownedLiteral xmi:id="_Z7fuZhZBEeSjQIm_Ms2ZvQ" name="RTS_2" classifier="_Z7fuZRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuZxZBEeSjQIm_Ms2ZvQ" name="RTS_3" classifier="_Z7fuZRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuaBZBEeSjQIm_Ms2ZvQ" name="RTS_Esch" classifier="_Z7fuZRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuaRZBEeSjQIm_Ms2ZvQ" name="RTS_Ettelbruck" classifier="_Z7fuZRZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuahZBEeSjQIm_Ms2ZvQ" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_Z7fuaxZBEeSjQIm_Ms2ZvQ" name="One" classifier="_Z7fuahZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fubBZBEeSjQIm_Ms2ZvQ" name="One_A" classifier="_Z7fuahZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fubRZBEeSjQIm_Ms2ZvQ" name="Two" classifier="_Z7fuahZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fubhZBEeSjQIm_Ms2ZvQ" name="Town">
      <ownedLiteral xmi:id="_Z7fubxZBEeSjQIm_Ms2ZvQ" name="Luxembourg_city" classifier="_Z7fubhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fucBZBEeSjQIm_Ms2ZvQ" name="Bertrange" classifier="_Z7fubhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fucRZBEeSjQIm_Ms2ZvQ" name="Strassen" classifier="_Z7fubhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuchZBEeSjQIm_Ms2ZvQ" name="Bettembourg" classifier="_Z7fubhZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fucxZBEeSjQIm_Ms2ZvQ" name="Beaufort" classifier="_Z7fubhZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fudBZBEeSjQIm_Ms2ZvQ" name="linked to" memberEnd="_Z7fImBZBEeSjQIm_Ms2ZvQ _Z7fuzhZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fudRZBEeSjQIm_Ms2ZvQ" name="Dependent_Type">
      <ownedLiteral xmi:id="_Z7fudhZBEeSjQIm_Ms2ZvQ" name="CHILD" classifier="_Z7fudRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fudxZBEeSjQIm_Ms2ZvQ" name="SPOUSE" classifier="_Z7fudRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fueBZBEeSjQIm_Ms2ZvQ" name="RELATIVE" classifier="_Z7fudRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fueRZBEeSjQIm_Ms2ZvQ" name="OTHER_FAMILY_MEMBER" classifier="_Z7fudRZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fuehZBEeSjQIm_Ms2ZvQ" name="provides" memberEnd="_Z7fu0RZBEeSjQIm_Ms2ZvQ _Z7fIYRZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fuexZBEeSjQIm_Ms2ZvQ" name="receives" memberEnd="_Z7fINhZBEeSjQIm_Ms2ZvQ _Z7gU1hZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_Z7fufBZBEeSjQIm_Ms2ZvQ" name="declares" memberEnd="_Z7fIOhZBEeSjQIm_Ms2ZvQ _Z7fuOBZBEeSjQIm_Ms2ZvQ"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fufRZBEeSjQIm_Ms2ZvQ" name="Type_of_Rate">
      <ownedLiteral xmi:id="_Z7fufhZBEeSjQIm_Ms2ZvQ" name="REGULAR" classifier="_Z7fufRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fufxZBEeSjQIm_Ms2ZvQ" name="REAL_COST" classifier="_Z7fufRZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fugBZBEeSjQIm_Ms2ZvQ" name="CE_Type">
      <ownedLiteral xmi:id="_Z7fugRZBEeSjQIm_Ms2ZvQ" name="INALIDITY_AND_INFIRMITY" classifier="_Z7fugBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fughZBEeSjQIm_Ms2ZvQ" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_Z7fugBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fugxZBEeSjQIm_Ms2ZvQ" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_Z7fugBZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuhBZBEeSjQIm_Ms2ZvQ" name="Expense_Purpose">
      <ownedLiteral xmi:id="_Z7fuhRZBEeSjQIm_Ms2ZvQ" name="HOUSE_CARE" classifier="_Z7fuhBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuhhZBEeSjQIm_Ms2ZvQ" name="CHILD_CARE" classifier="_Z7fuhBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuhxZBEeSjQIm_Ms2ZvQ" name="DEPENDENCE_CARE" classifier="_Z7fuhBZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7fuiBZBEeSjQIm_Ms2ZvQ" name="OTHER" classifier="_Z7fuhBZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_Z7fuiRZBEeSjQIm_Ms2ZvQ" name="Constants">
      <ownedLiteral xmi:id="_Z7fuihZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fuixZBEeSjQIm_Ms2ZvQ" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fujBZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fujRZBEeSjQIm_Ms2ZvQ" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fujhZBEeSjQIm_Ms2ZvQ" name="MINIMUM_SALARY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fujxZBEeSjQIm_Ms2ZvQ" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fukBZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fukRZBEeSjQIm_Ms2ZvQ" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fukhZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fukxZBEeSjQIm_Ms2ZvQ" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fulBZBEeSjQIm_Ms2ZvQ" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fulRZBEeSjQIm_Ms2ZvQ" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fulhZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fulxZBEeSjQIm_Ms2ZvQ"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fumBZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fumRZBEeSjQIm_Ms2ZvQ" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fumhZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fumxZBEeSjQIm_Ms2ZvQ" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7funBZBEeSjQIm_Ms2ZvQ" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7funRZBEeSjQIm_Ms2ZvQ" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7funhZBEeSjQIm_Ms2ZvQ" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7funxZBEeSjQIm_Ms2ZvQ" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fuoBZBEeSjQIm_Ms2ZvQ" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fuoRZBEeSjQIm_Ms2ZvQ" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fuohZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIM_DAILY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fuoxZBEeSjQIm_Ms2ZvQ" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fupBZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIM_MONTHLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fupRZBEeSjQIm_Ms2ZvQ" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fuphZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIM_YEARLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fupxZBEeSjQIm_Ms2ZvQ" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fuqBZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIP_DAILY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fuqRZBEeSjQIm_Ms2ZvQ" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fuqhZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIP_MONTHLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fuqxZBEeSjQIm_Ms2ZvQ" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7furBZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIP_YEARLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7furRZBEeSjQIm_Ms2ZvQ" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7furhZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIS_DAILY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7furxZBEeSjQIm_Ms2ZvQ" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fusBZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIS_MONTHLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fusRZBEeSjQIm_Ms2ZvQ" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7fushZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_CIS_YEARLY" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7fusxZBEeSjQIm_Ms2ZvQ" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7futBZBEeSjQIm_Ms2ZvQ" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_Z7futRZBEeSjQIm_Ms2ZvQ" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_Z7futhZBEeSjQIm_Ms2ZvQ" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ"/>
      <ownedLiteral xmi:id="_Z7futxZBEeSjQIm_Ms2ZvQ" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_Z7fuiRZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fuuBZBEeSjQIm_Ms2ZvQ" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fuuRZBEeSjQIm_Ms2ZvQ" name="Tax_Card">
        <ownedRule xmi:id="_Z7fuuhZBEeSjQIm_Ms2ZvQ" name="SubjectToWithholdingTax-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuuxZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuvBZBEeSjQIm_Ms2ZvQ" name="Tax_Credits-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuvRZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuvhZBEeSjQIm_Ms2ZvQ" name="Tax_Card_AC-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuvxZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuwBZBEeSjQIm_Ms2ZvQ" name="Tax_Card_FD-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuwRZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuwhZBEeSjQIm_Ms2ZvQ" name="Tax_Card_DS-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuwxZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuxBZBEeSjQIm_Ms2ZvQ" name="Tax_Card_CE-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuxRZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_Z7fuxhZBEeSjQIm_Ms2ZvQ" name="Tax_Card_FO-constraint" constrainedElement="_Z7fuuRZBEeSjQIm_Ms2ZvQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fuxxZBEeSjQIm_Ms2ZvQ">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_Z7fuyBZBEeSjQIm_Ms2ZvQ" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuyRZBEeSjQIm_Ms2ZvQ" name="tax_card_type" visibility="public" type="_Z7fuYhZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fuyhZBEeSjQIm_Ms2ZvQ" name="tax_office" visibility="public" type="_Z7fuZRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fuyxZBEeSjQIm_Ms2ZvQ" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuzBZBEeSjQIm_Ms2ZvQ" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_Z8pl7RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuzRZBEeSjQIm_Ms2ZvQ" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fuzhZBEeSjQIm_Ms2ZvQ" name="income" visibility="private" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ" association="_Z7fudBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fuzxZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu0BZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu0RZBEeSjQIm_Ms2ZvQ" name="tax_Class" visibility="private" type="_Z7fIWhZBEeSjQIm_Ms2ZvQ" association="_Z7fuehZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu0hZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu0xZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu1BZBEeSjQIm_Ms2ZvQ" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu1RZBEeSjQIm_Ms2ZvQ" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu1hZBEeSjQIm_Ms2ZvQ" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu1xZBEeSjQIm_Ms2ZvQ" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu2BZBEeSjQIm_Ms2ZvQ" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu2RZBEeSjQIm_Ms2ZvQ" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu2hZBEeSjQIm_Ms2ZvQ" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu2xZBEeSjQIm_Ms2ZvQ" name="tax_payers_address" visibility="public" type="_Z7fHfxZBEeSjQIm_Ms2ZvQ" isDerived="true"/>
        <ownedAttribute xmi:id="_Z7fu3BZBEeSjQIm_Ms2ZvQ" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu3RZBEeSjQIm_Ms2ZvQ" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu3hZBEeSjQIm_Ms2ZvQ" name="jobs_activity_type" visibility="public" type="_Z7fuXhZBEeSjQIm_Ms2ZvQ" isDerived="true"/>
        <ownedAttribute xmi:id="_Z7fu3xZBEeSjQIm_Ms2ZvQ" name="jobs_place_of_work" visibility="public" type="_Z7fubhZBEeSjQIm_Ms2ZvQ" isDerived="true"/>
        <ownedAttribute xmi:id="_Z7fu4BZBEeSjQIm_Ms2ZvQ" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu4RZBEeSjQIm_Ms2ZvQ" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu4hZBEeSjQIm_Ms2ZvQ" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu4xZBEeSjQIm_Ms2ZvQ" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu5BZBEeSjQIm_Ms2ZvQ" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu5RZBEeSjQIm_Ms2ZvQ" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu5hZBEeSjQIm_Ms2ZvQ" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu5xZBEeSjQIm_Ms2ZvQ" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu6BZBEeSjQIm_Ms2ZvQ" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu6RZBEeSjQIm_Ms2ZvQ" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu6hZBEeSjQIm_Ms2ZvQ" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu6xZBEeSjQIm_Ms2ZvQ" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu7BZBEeSjQIm_Ms2ZvQ" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu7RZBEeSjQIm_Ms2ZvQ" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu7hZBEeSjQIm_Ms2ZvQ" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu7xZBEeSjQIm_Ms2ZvQ" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu8BZBEeSjQIm_Ms2ZvQ" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu8RZBEeSjQIm_Ms2ZvQ" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu8hZBEeSjQIm_Ms2ZvQ" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu8xZBEeSjQIm_Ms2ZvQ" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu9BZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fITxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu9RZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu9hZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu9xZBEeSjQIm_Ms2ZvQ" name="income_Tax_Credit" visibility="private" type="_Z7fvDRZBEeSjQIm_Ms2ZvQ" aggregation="shared" association="_Z7fvBBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu-BZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu-RZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu-hZBEeSjQIm_Ms2ZvQ" name="income_Tax_Deduction" visibility="private" type="_Z7gU0RZBEeSjQIm_Ms2ZvQ" aggregation="shared" association="_Z7gU0BZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu-xZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fu_BZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu_RZBEeSjQIm_Ms2ZvQ" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fu_hZBEeSjQIm_Ms2ZvQ" name="previous" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7fvBRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fu_xZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvABZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvARZBEeSjQIm_Ms2ZvQ" name="current_tax_card" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7fvBRZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fvAhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvAxZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fvBBZBEeSjQIm_Ms2ZvQ" name="include" memberEnd="_Z7fvGRZBEeSjQIm_Ms2ZvQ _Z7fu9xZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7fvBRZBEeSjQIm_Ms2ZvQ" name="invalidated by" memberEnd="_Z7fu_hZBEeSjQIm_Ms2ZvQ _Z7fvARZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fvBhZBEeSjQIm_Ms2ZvQ" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvBxZBEeSjQIm_Ms2ZvQ" name="CIM">
        <generalization xmi:id="_Z7fvCBZBEeSjQIm_Ms2ZvQ" general="_Z7fvDRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvCRZBEeSjQIm_Ms2ZvQ" name="CIP">
        <generalization xmi:id="_Z7fvChZBEeSjQIm_Ms2ZvQ" general="_Z7fvDRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvCxZBEeSjQIm_Ms2ZvQ" name="CIS">
        <generalization xmi:id="_Z7fvDBZBEeSjQIm_Ms2ZvQ" general="_Z7fvDRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvDRZBEeSjQIm_Ms2ZvQ" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_Z7fvDhZBEeSjQIm_Ms2ZvQ" name="grantedBy" visibility="public" type="_Z7fuSBZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvDxZBEeSjQIm_Ms2ZvQ" name="taxPayer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fuVxZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fvEBZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvERZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvEhZBEeSjQIm_Ms2ZvQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvExZBEeSjQIm_Ms2ZvQ" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvFBZBEeSjQIm_Ms2ZvQ" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvFRZBEeSjQIm_Ms2ZvQ" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvFhZBEeSjQIm_Ms2ZvQ" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvFxZBEeSjQIm_Ms2ZvQ" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvGBZBEeSjQIm_Ms2ZvQ" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvGRZBEeSjQIm_Ms2ZvQ" name="taxation_Frame" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7fvBBZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fvGhZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvGxZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Z7fvHBZBEeSjQIm_Ms2ZvQ" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvHRZBEeSjQIm_Ms2ZvQ" name="FD">
        <generalization xmi:id="_Z7fvHhZBEeSjQIm_Ms2ZvQ" general="_Z7gUyxZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvHxZBEeSjQIm_Ms2ZvQ" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvIBZBEeSjQIm_Ms2ZvQ" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fvIRZBEeSjQIm_Ms2ZvQ" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_Z7fvIhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fvIxZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvJBZBEeSjQIm_Ms2ZvQ" name="FO">
        <generalization xmi:id="_Z7fvJRZBEeSjQIm_Ms2ZvQ" general="_Z7gUyxZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvJhZBEeSjQIm_Ms2ZvQ" name="rate_type_for_FO" visibility="public" type="_Z7fufRZBEeSjQIm_Ms2ZvQ" isDerived="true"/>
        <ownedOperation xmi:id="_Z7fvJxZBEeSjQIm_Ms2ZvQ" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_Z7fvKBZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_Z7fvKRZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fvKhZBEeSjQIm_Ms2ZvQ" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_Z7fvKxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Z7fvLBZBEeSjQIm_Ms2ZvQ" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Z7fvLRZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvLhZBEeSjQIm_Ms2ZvQ" name="CE">
        <eAnnotations xmi:id="_Z7fvLxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_Z7fvMBZBEeSjQIm_Ms2ZvQ" general="_Z7gU0RZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvMRZBEeSjQIm_Ms2ZvQ" name="ce_deduction_type" visibility="public" type="_Z7fugBZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvMhZBEeSjQIm_Ms2ZvQ" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvMxZBEeSjQIm_Ms2ZvQ" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fvNBZBEeSjQIm_Ms2ZvQ" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_Z7fvNhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvNRZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvNhZBEeSjQIm_Ms2ZvQ" name="compute_disability_flat_rate" constrainedElement="_Z7fvNBZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvNxZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvOBZBEeSjQIm_Ms2ZvQ" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fvORZBEeSjQIm_Ms2ZvQ" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_Z7fvOxZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvOhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvOxZBEeSjQIm_Ms2ZvQ" name="dependent_relative_flat_rate" constrainedElement="_Z7fvORZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvPBZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvPRZBEeSjQIm_Ms2ZvQ" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvPhZBEeSjQIm_Ms2ZvQ" name="AC">
        <generalization xmi:id="_Z7fvPxZBEeSjQIm_Ms2ZvQ" general="_Z7gU0RZBEeSjQIm_Ms2ZvQ"/>
        <ownedOperation xmi:id="_Z7fvQBZBEeSjQIm_Ms2ZvQ" name="is_eligible_income_for_AC" isQuery="true" postcondition="_Z7fvQhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvQRZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvQhZBEeSjQIm_Ms2ZvQ" name="is_eligible_income_for_AC" constrainedElement="_Z7fvQBZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvQxZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvRBZBEeSjQIm_Ms2ZvQ" name="IN_income" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ"/>
          <ownedParameter xmi:id="_Z7fvRRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fvRhZBEeSjQIm_Ms2ZvQ" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_Z7fvSBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvRxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvSBZBEeSjQIm_Ms2ZvQ" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_Z7fvRhZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvSRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvShZBEeSjQIm_Ms2ZvQ" name="IN_income" type="_Z7fIjBZBEeSjQIm_Ms2ZvQ"/>
          <ownedParameter xmi:id="_Z7fvSxZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvTBZBEeSjQIm_Ms2ZvQ" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_Z7fvTRZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvThZBEeSjQIm_Ms2ZvQ" name="permanent_expense_category" visibility="public" type="_Z7fuKRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvTxZBEeSjQIm_Ms2ZvQ" name="DS_for_Interest_Expense">
        <generalization xmi:id="_Z7fvUBZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedOperation xmi:id="_Z7fvURZBEeSjQIm_Ms2ZvQ" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_Z7fvUxZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvUhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvUxZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount" constrainedElement="_Z7fvURZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvVBZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvVRZBEeSjQIm_Ms2ZvQ" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fvVhZBEeSjQIm_Ms2ZvQ" name="IN_children_with_allowances" type="_Z7fHiBZBEeSjQIm_Ms2ZvQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fvVxZBEeSjQIm_Ms2ZvQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvWBZBEeSjQIm_Ms2ZvQ"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7fvWRZBEeSjQIm_Ms2ZvQ" name="IN_legal_union" type="_Z7fHuxZBEeSjQIm_Ms2ZvQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7fvWhZBEeSjQIm_Ms2ZvQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7fvWxZBEeSjQIm_Ms2ZvQ"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvXBZBEeSjQIm_Ms2ZvQ" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_Z7fvXRZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvXhZBEeSjQIm_Ms2ZvQ" name="insurance_category" visibility="public" type="_Z7fuMhZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7fvXxZBEeSjQIm_Ms2ZvQ" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_Z7fvYBZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvYRZBEeSjQIm_Ms2ZvQ" name="private_insurance_and_plan_category" visibility="public" type="_Z7fuLBZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7fvYhZBEeSjQIm_Ms2ZvQ" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvYxZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7fvZBZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Z7fvZRZBEeSjQIm_Ms2ZvQ" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_Z7fvZxZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvZhZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvZxZBEeSjQIm_Ms2ZvQ" name="get_increase_for_life_insurance" constrainedElement="_Z7fvZRZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvaBZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7fvaRZBEeSjQIm_Ms2ZvQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fvahZBEeSjQIm_Ms2ZvQ" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_Z7fvbBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvaxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvbBZBEeSjQIm_Ms2ZvQ" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_Z7fvahZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvbRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_Z7fvbhZBEeSjQIm_Ms2ZvQ" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_Z7fvcBZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7fvbxZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7fvcBZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_Z7fvbhZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fvcRZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7gUwBZBEeSjQIm_Ms2ZvQ" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_Z7gUwRZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7gUwhZBEeSjQIm_Ms2ZvQ" name="DS_for_Donation">
        <generalization xmi:id="_Z7gUwxZBEeSjQIm_Ms2ZvQ" general="_Z7gUzRZBEeSjQIm_Ms2ZvQ"/>
        <ownedOperation xmi:id="_Z7gUxBZBEeSjQIm_Ms2ZvQ" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_Z7gUxhZBEeSjQIm_Ms2ZvQ">
          <eAnnotations xmi:id="_Z7gUxRZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_Z7gUxhZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount" constrainedElement="_Z7gUxBZBEeSjQIm_Ms2ZvQ">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7gUxxZBEeSjQIm_Ms2ZvQ">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_Z7gUyBZBEeSjQIm_Ms2ZvQ" name="IN_maximum_percentage" type="_Z7fuiRZBEeSjQIm_Ms2ZvQ"/>
          <ownedParameter xmi:id="_Z7gUyRZBEeSjQIm_Ms2ZvQ" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z7gUyhZBEeSjQIm_Ms2ZvQ" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7gUyxZBEeSjQIm_Ms2ZvQ" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_Z7gUzBZBEeSjQIm_Ms2ZvQ" general="_Z7gU0RZBEeSjQIm_Ms2ZvQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7gUzRZBEeSjQIm_Ms2ZvQ" name="DS">
        <generalization xmi:id="_Z7gUzhZBEeSjQIm_Ms2ZvQ" general="_Z7gU0RZBEeSjQIm_Ms2ZvQ"/>
        <ownedAttribute xmi:id="_Z7gUzxZBEeSjQIm_Ms2ZvQ" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7gU0BZBEeSjQIm_Ms2ZvQ" name="considers" memberEnd="_Z7gU2hZBEeSjQIm_Ms2ZvQ _Z7fu-hZBEeSjQIm_Ms2ZvQ"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Z7gU0RZBEeSjQIm_Ms2ZvQ" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_Z7gU0hZBEeSjQIm_Ms2ZvQ" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU0xZBEeSjQIm_Ms2ZvQ" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU1BZBEeSjQIm_Ms2ZvQ" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU1RZBEeSjQIm_Ms2ZvQ" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU1hZBEeSjQIm_Ms2ZvQ" name="tax_Payer" visibility="private" type="_Z7fH9BZBEeSjQIm_Ms2ZvQ" association="_Z7fuexZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7gU1xZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7gU2BZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU2RZBEeSjQIm_Ms2ZvQ" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU2hZBEeSjQIm_Ms2ZvQ" name="tax_card" visibility="private" type="_Z7fuuRZBEeSjQIm_Ms2ZvQ" association="_Z7gU0BZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7gU2xZBEeSjQIm_Ms2ZvQ" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7gU3BZBEeSjQIm_Ms2ZvQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z7gU3RZBEeSjQIm_Ms2ZvQ" name="expenses" visibility="private" type="_Z7fuNxZBEeSjQIm_Ms2ZvQ" association="_Z7gU4BZBEeSjQIm_Ms2ZvQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z7gU3hZBEeSjQIm_Ms2ZvQ" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z7gU3xZBEeSjQIm_Ms2ZvQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z7gU4BZBEeSjQIm_Ms2ZvQ" name="is computed based on" memberEnd="_Z7gU3RZBEeSjQIm_Ms2ZvQ _Z7fuRRZBEeSjQIm_Ms2ZvQ"/>
    </packagedElement>
    <profileApplication xmi:id="_Z7gU4RZBEeSjQIm_Ms2ZvQ">
      <eAnnotations xmi:id="_Z7gU4hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_Z7gU4xZBEeSjQIm_Ms2ZvQ">
      <eAnnotations xmi:id="_Z7gU5BZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_Z7nDHxZBEeSjQIm_Ms2ZvQ"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_Z7nDHRZBEeSjQIm_Ms2ZvQ"/>
    </profileApplication>
    <profileApplication xmi:id="_Z7gU5RZBEeSjQIm_Ms2ZvQ">
      <eAnnotations xmi:id="_Z7gU5hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_Z7g8PRZBEeSjQIm_Ms2ZvQ"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_Z7g8OxZBEeSjQIm_Ms2ZvQ"/>
    </profileApplication>
    <profileApplication xmi:id="_Z7gU5xZBEeSjQIm_Ms2ZvQ">
      <eAnnotations xmi:id="_Z7gU6BZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_Z7d5fBZBEeSjQIm_Ms2ZvQ"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_Z7d5ehZBEeSjQIm_Ms2ZvQ"/>
    </profileApplication>
    <profileApplication xmi:id="_Z7gU6RZBEeSjQIm_Ms2ZvQ">
      <eAnnotations xmi:id="_Z7gU6hZBEeSjQIm_Ms2ZvQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_Z7oRhBZBEeSjQIm_Ms2ZvQ"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_Z7oRghZBEeSjQIm_Ms2ZvQ"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_Z7gU6xZBEeSjQIm_Ms2ZvQ" base_Comment="_Z7fIbxZBEeSjQIm_Ms2ZvQ"/>
  <Default:Documentation xmi:id="_Z7gU7BZBEeSjQIm_Ms2ZvQ" base_Comment="_Z7fHvBZBEeSjQIm_Ms2ZvQ"/>
</xmi:XMI>
