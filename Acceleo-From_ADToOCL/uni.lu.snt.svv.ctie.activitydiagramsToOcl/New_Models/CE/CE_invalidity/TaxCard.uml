<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http:///schemas/Default/_fNm3AAqoEd6-N_NOT9vsCA/2 Default.profile.uml#_Wm7U3E37EeSS5u8wdxTIGg">
  <uml:Package xmi:id="_WnAMLE37EeSS5u8wdxTIGg" name="TaxCard">
    <packageImport xmi:id="_WnAMLU37EeSS5u8wdxTIGg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_WnAMLk37EeSS5u8wdxTIGg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:id="_WnAML037EeSS5u8wdxTIGg">
      <importedPackage xmi:type="uml:Model" href="MARTELibrary.uml#_WnBb8k37EeSS5u8wdxTIGg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnAMME37EeSS5u8wdxTIGg" name="Tax_Card_Domain">
      <packageImport xmi:id="_WnAMMU37EeSS5u8wdxTIGg" importedPackage="_WnAOyE37EeSS5u8wdxTIGg"/>
      <packageImport xmi:id="_WnAMMk37EeSS5u8wdxTIGg" importedPackage="_WnAMN037EeSS5u8wdxTIGg"/>
      <packageImport xmi:id="_WnAMM037EeSS5u8wdxTIGg" importedPackage="_WnAOsk37EeSS5u8wdxTIGg"/>
      <packageImport xmi:id="_WnAMNE37EeSS5u8wdxTIGg" importedPackage="_WnANK037EeSS5u8wdxTIGg"/>
      <packageImport xmi:id="_WnAMNU37EeSS5u8wdxTIGg" importedPackage="_WnANdk37EeSS5u8wdxTIGg"/>
      <packageImport xmi:id="_WnAMNk37EeSS5u8wdxTIGg" importedPackage="_WnAOZE37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnAMN037EeSS5u8wdxTIGg" name="Tax_Payer_Concepts">
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAMOE37EeSS5u8wdxTIGg" name="taxed under" memberEnd="_WnAM7U37EeSS5u8wdxTIGg _WnANHE37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMOU37EeSS5u8wdxTIGg" name="Income_Tax">
        <ownedAttribute xmi:id="_WnAMOk37EeSS5u8wdxTIGg" name="taxPayer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnANGU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMO037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMPE37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMPU37EeSS5u8wdxTIGg" name="tax_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMPk37EeSS5u8wdxTIGg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMP037EeSS5u8wdxTIGg" name="Address">
        <ownedAttribute xmi:id="_WnAMQE37EeSS5u8wdxTIGg" name="taxPayer" visibility="private" type="_WnAMjU37EeSS5u8wdxTIGg" association="_WnANEE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMQU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMQk37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMQ037EeSS5u8wdxTIGg" name="country" visibility="public" type="_WnAN_E37EeSS5u8wdxTIGg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_WnAMRE37EeSS5u8wdxTIGg" name="LU" type="_WnAN_E37EeSS5u8wdxTIGg" instance="_WnAN_U37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMRU37EeSS5u8wdxTIGg" name="street" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMRk37EeSS5u8wdxTIGg" name="zipCode" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMR037EeSS5u8wdxTIGg" name="city" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMSE37EeSS5u8wdxTIGg" name="Dependent">
        <generalization xmi:id="_WnAMSU37EeSS5u8wdxTIGg" general="_WnAMjU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAMSk37EeSS5u8wdxTIGg" name="dependent_type" visibility="public" type="_WnAOIU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAMS037EeSS5u8wdxTIGg" name="household" visibility="private" type="_WnAMdE37EeSS5u8wdxTIGg" association="_WnANF037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMTE37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMTU37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMTk37EeSS5u8wdxTIGg" name="responsible_person" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnANFk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMT037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMUE37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMUU37EeSS5u8wdxTIGg" name="continued_studies" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnAMUk37EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMU037EeSS5u8wdxTIGg" name="expense" visibility="private" type="_WnAN4037EeSS5u8wdxTIGg" association="_WnANGE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMVE37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMVU37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMVk37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnANFU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMV037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMWE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnAMWU37EeSS5u8wdxTIGg" name="compute_if_dependent_receives_allowances_eligible_for_CIM" isQuery="true">
          <eAnnotations xmi:id="_WnAMWk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnAMW037EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAMXE37EeSS5u8wdxTIGg" name="compute_if_dependent_receives_allowances_eligible_for_DS" isQuery="true">
          <eAnnotations xmi:id="_WnAMXU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnAMXk37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAMX037EeSS5u8wdxTIGg" name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" isQuery="true">
          <eAnnotations xmi:id="_WnAMYE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnAMYU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAMYk37EeSS5u8wdxTIGg" name="is_dependent_following_continued_studies" isQuery="true" postcondition="_WnAMZE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAMY037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAMZE37EeSS5u8wdxTIGg" name="is_dependent_following_continued_studies" constrainedElement="_WnAMYk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMZU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.continued_studies = IN_continued_studies&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAMZk37EeSS5u8wdxTIGg" name="IN_continued_studies">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAMZ037EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMaE37EeSS5u8wdxTIGg" name="External_Allowance">
        <ownedAttribute xmi:id="_WnAMaU37EeSS5u8wdxTIGg" name="amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMak37EeSS5u8wdxTIGg" name="grantor" visibility="public" type="_WnAN9E37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAMa037EeSS5u8wdxTIGg" name="person" visibility="private" type="_WnAMjU37EeSS5u8wdxTIGg" association="_WnANEU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMbE37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMbU37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMbk37EeSS5u8wdxTIGg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMb037EeSS5u8wdxTIGg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMcE37EeSS5u8wdxTIGg" name="Fiscal_Address">
        <generalization xmi:id="_WnAMcU37EeSS5u8wdxTIGg" general="_WnAMP037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMck37EeSS5u8wdxTIGg" name="Habitual_Address">
        <generalization xmi:id="_WnAMc037EeSS5u8wdxTIGg" general="_WnAMP037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMdE37EeSS5u8wdxTIGg" name="Household">
        <ownedAttribute xmi:id="_WnAMdU37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnANFE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMdk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMd037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMeE37EeSS5u8wdxTIGg" name="dependent" visibility="private" type="_WnAMSE37EeSS5u8wdxTIGg" association="_WnANF037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMeU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMek37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMe037EeSS5u8wdxTIGg" name="Legal_Union_Record">
        <ownedComment xmi:id="_WnAMfE37EeSS5u8wdxTIGg" annotatedElement="_WnAMe037EeSS5u8wdxTIGg">
          <body>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>When&amp;nbsp;a&amp;nbsp;decision&amp;nbsp;for&amp;nbsp;Dates&amp;nbsp;would&amp;nbsp;be&amp;nbsp;taken,&amp;nbsp;&lt;/span>&lt;/p>&lt;p>&lt;span style=&quot;font-size:16pt;&quot;>we&amp;nbsp;must&amp;nbsp;take&amp;nbsp;into&amp;nbsp;account&amp;nbsp;that&amp;nbsp;all&amp;nbsp;marriages&amp;nbsp;and&amp;nbsp;partnerships&amp;nbsp;are&amp;nbsp;mutually&amp;nbsp;exclusive.&lt;/span>&lt;/p></body>
        </ownedComment>
        <ownedRule xmi:id="_WnAMfU37EeSS5u8wdxTIGg" name="Legal_Union-different_people-constraint" constrainedElement="_WnAMe037EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMfk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>if self.end_date.oclIsUndefined() then&#xA;/**LEGAL UNION IS VALID**/&#xA;self.individual_A.SSNo &lt;> self.individual_B.SSNo&#xA;and&#xA;self.individual_A->size()=1 and&#xA;self.individual_B->size()=1&#xA;else&#xA;/**LEGAL UNION IS AUTHORIZED WITH ONLY ONE PERSON**/&#xA;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_WnAMf037EeSS5u8wdxTIGg" name="start_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMgE37EeSS5u8wdxTIGg" name="end_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMgU37EeSS5u8wdxTIGg" name="individual_A" visibility="private" type="_WnAMjU37EeSS5u8wdxTIGg" association="_WnANE037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMgk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMg037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMhE37EeSS5u8wdxTIGg" name="individual_B" visibility="private" type="_WnAMjU37EeSS5u8wdxTIGg" association="_WnANEk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMhU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMhk37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMh037EeSS5u8wdxTIGg" name="Marriage_Record">
        <generalization xmi:id="_WnAMiE37EeSS5u8wdxTIGg" general="_WnAMe037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMiU37EeSS5u8wdxTIGg" name="Non_Resident_Tax_Payer">
        <generalization xmi:id="_WnAMik37EeSS5u8wdxTIGg" general="_WnAMtE37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMi037EeSS5u8wdxTIGg" name="Partnership_Record">
        <generalization xmi:id="_WnAMjE37EeSS5u8wdxTIGg" general="_WnAMe037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMjU37EeSS5u8wdxTIGg" name="Physical_Person">
        <ownedAttribute xmi:id="_WnAMjk37EeSS5u8wdxTIGg" name="name" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMj037EeSS5u8wdxTIGg" name="is_assisting_spouse" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMkE37EeSS5u8wdxTIGg" name="SSNo" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMkU37EeSS5u8wdxTIGg" name="allowances" visibility="private" type="_WnAMaE37EeSS5u8wdxTIGg" association="_WnANEU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMkk37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMk037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMlE37EeSS5u8wdxTIGg" name="addresses" visibility="private" type="_WnAMP037EeSS5u8wdxTIGg" association="_WnANEE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMlU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMlk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMl037EeSS5u8wdxTIGg" name="legal_union_A" visibility="private" type="_WnAMe037EeSS5u8wdxTIGg" association="_WnANE037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMmE37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMmU37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMmk37EeSS5u8wdxTIGg" name="legal_union_B" visibility="private" type="_WnAMe037EeSS5u8wdxTIGg" association="_WnANEk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAMm037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMnE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMnU37EeSS5u8wdxTIGg" name="age" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMnk37EeSS5u8wdxTIGg" name="disability_percentage" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_WnAMn037EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAMoE37EeSS5u8wdxTIGg" name="is_affiliated_personnaly_to_social_security" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnAMoU37EeSS5u8wdxTIGg" name="is_separated_from" isQuery="true">
          <eAnnotations xmi:id="_WnAMok37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WnAMo037EeSS5u8wdxTIGg" key="computaion"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WnAMpE37EeSS5u8wdxTIGg" name="IN_person" type="_WnAMjU37EeSS5u8wdxTIGg"/>
          <ownedParameter xmi:id="_WnAMpU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAMpk37EeSS5u8wdxTIGg" name="is_person_assisting_spouse" isQuery="true" postcondition="_WnAMqE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAMp037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAMqE37EeSS5u8wdxTIGg" name="is_assisting_spouse" constrainedElement="_WnAMpk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMqU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.is_assisting_spouse = IN_assisting_spouse&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAMqk37EeSS5u8wdxTIGg" name="IN_assisting_spouse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAMq037EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAMrE37EeSS5u8wdxTIGg" name="is_person_affiliated_personnaly_to_social_security" isQuery="true" postcondition="_WnAMrk37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAMrU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAMrk37EeSS5u8wdxTIGg" name="is_person_affiliated_personnaly_affiliated_to_social_security" constrainedElement="_WnAMrE37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMr037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.is_affiliated_personnaly_to_social_security = IN_personnaly_affiliated&#xA;&#xA;&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAMsE37EeSS5u8wdxTIGg" name="IN_personnaly_affiliated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAMsU37EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMsk37EeSS5u8wdxTIGg" name="Resident_Tax_Payer">
        <generalization xmi:id="_WnAMs037EeSS5u8wdxTIGg" general="_WnAMtE37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAMtE37EeSS5u8wdxTIGg" name="Tax_Payer">
        <ownedRule xmi:id="_WnAMtU37EeSS5u8wdxTIGg" name="NonResidentTaxPayer-constraint" constrainedElement="_WnAMiU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMtk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country&lt;>Country::LU) and&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country&lt;>Country::LU) and&#xA;&#x9;self.incomes->exists(inc:Income_Concepts::Income | inc.oclIsTypeOf(Income_Concepts::Local_Income))&#xA;implies&#xA;&#x9;self.oclIsTypeOf(Non_Resident_Tax_Payer)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMt037EeSS5u8wdxTIGg" name="ResidentTaxPayer-constraint" constrainedElement="_WnAMsk37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMuE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>&#x9;self.addresses->exists( fiscal_add:Address | &#xA;&#x9;&#x9;fiscal_add.oclIsTypeOf(Fiscal_Address) and fiscal_add.country=Country::LU) or&#xA;&#x9;self.addresses->exists( hab_add:Address | &#xA;&#x9;&#x9;hab_add.oclIsTypeOf(Habitual_Address) and hab_add.country=Country::LU) &#xA;implies&#xA;&#x9;self.oclIsTypeOf(Resident_Tax_Payer)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMuU37EeSS5u8wdxTIGg" name="SubjectToIncomeTax-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMuk37EeSS5u8wdxTIGg" name="subjectToIncomeTax ">
            <language>OCL</language>
            <body>&#x9;self.incomes->exists(inc:Income_Concepts::Income |&#xA;&#x9;&#x9; inc.oclIsTypeOf(Income_Concepts::Local_Income) or inc.oclIsTypeOf(Income_Concepts::Foreign_Income))&#xA;implies&#xA;&#x9;not self.incomeTax->isEmpty()&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMu037EeSS5u8wdxTIGg" name="TaxCredit-CIS-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMvE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;&#x9;&#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIS: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIS :Integer = set_of_CIS->size(),&#xA;&#x9;&#x9;&#x9; a_CIS: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIS->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIS = 1 and&#xA;&#x9;&#x9;&#x9;/**CIS IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIS.yearly = Constants::FLAT_RATE_CIS_YEARLY.oclAsType(Integer)*tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIS CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;  &#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMvU37EeSS5u8wdxTIGg" name="TaxCredit-CIP-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMvk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let   employement_income: Set(Income_Concepts::Income) = &#xA;      &#x9;self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;not inc.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;   &#x9;   &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and&#xA;       &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year),&#xA;       &#x9;total_income: Integer = employement_income.income_amount->sum(),&#xA;&#x9;&#x9;tax_liability :Integer = employement_income.tax_liability->sum() in&#xA;&#x9;&#x9;&#x9; &#x9;&#x9; &#xA;&#x9;if(employement_income->size()>0) then&#xA;&#x9;&#x9; if (total_income>936*tax_liability) then&#xA;&#x9;&#x9; let set_of_CIP: Set(Income_Tax_Credit_Concepts::Income_Tax_Credit) = self.income_Tax_Credit->select(type|type.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;&#x9;&#x9;size_set_of_CIP :Integer = set_of_CIP->size(),&#xA;&#x9;&#x9;&#x9; a_CIP: Income_Tax_Credit_Concepts::Income_Tax_Credit = set_of_CIP->any(true) in&#xA;&#x9; &#x9;    &#xA;&#x9; &#x9;    size_set_of_CIP = 1 and&#xA;&#x9;&#x9;&#x9;/**CIP IS CREDITED TO THE TAX PAYER**/&#xA;&#x9;&#x9;&#x9;a_CIP.yearly = Constants::FLAT_RATE_CIP_YEARLY.oclAsType(Integer) *tax_liability&#xA;      &#x9;else&#xA;      &#x9;&#x9;/**ERROR CIP CANNOT BE CREDITED**/&#xA;      &#x9;&#x9;false&#xA;      &#x9;endif&#x9;&#xA;     else&#xA;     &#x9;false&#xA;     endif&#xA;      &#x9;&#xA;      &#x9;&#xA;    </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMv037EeSS5u8wdxTIGg" name="TaxCredit-CIM-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMwE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let&#xA; a_CIM : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c | c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA; current_employement_income: Set(Income_Concepts::Income) = self.incomes->select(inc|&#xA;      &#x9;&#x9;inc.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)) and&#xA;      &#x9;&#x9;inc.start_date_within_taxation_year=self.incomeTax.tax_year) ,&#xA;      &#x9;&#x9;&#xA;income_TaxClass1A: Set(Income_Concepts::Income) = &#xA;      &#x9;&#x9;current_employement_income->select(inc|&#xA;      &#x9;&#x9;      &#x9;&#x9;inc.oclAsType(Income_Concepts::Local_Income).tax_card->exists(tc|tc.tax_Class = Tax_Class_Category::One_A)),&#xA;tax_liability : Integer = income_TaxClass1A.tax_liability->sum()&#xA;      &#x9;&#x9;in&#xA;&#xA;       if (current_employement_income->size()>0) then&#xA;&#x9;&#x9;&#x9;if &#x9;(income_TaxClass1A->size()>0) then&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;let child_with_allowances : Set(Dependent) = self.dependents->select(dep:Dependent|dep.dependent_type=Dependent_Type::CHILD and dep.compute_if_dependent_receives_allowances_eligible_for_CIM()=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dep.allowances->exists(al|al.valid_from_date=self.incomeTax.tax_year and al.valid_until_date = self.incomeTax.tax_year)=true) in&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; if  child_with_allowances ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CIM ALLOWED**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;a_CIM.yearly= Constants::FLAT_RATE_CIM_YEARLY.oclAsType(Integer) * tax_liability&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, MISSING CHILD ALLOWANCE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT TAX CLASS 1A**/&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CIM, NOT ELIGIBLE INCOME*/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;&#xA;&#x9;&#xA;/**NAVIGATION&#xA;self.tax_class&#xA;self.income_Tax_Credit->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.tax_class&#xA;self.incomeTax.tax_year&#xA;self.incomes&#xA;inc.oclAsType(Income_Concepts::Local_Income).tax_card&#xA;self.incomeTax.tax_year&#xA;self.dependents&#xA;dep.allowances&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMwU37EeSS5u8wdxTIGg" name="Legal_Union-monogamus-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMwk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let legal_union: Set(Legal_Union_Record) = self.legal_union_A->select(couple|couple.end_date->isEmpty()) in&#xA;if (legal_union->size()=1) then&#x9;&#xA;&#x9;/**YOU ARE IN LIGEL UNION WITH ONLY ONE PERSON**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT BE IN LEGAL UNION WITH MORE THAN ONE PERSON**/&#xA;&#x9;false&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMw037EeSS5u8wdxTIGg" name="TaxClass-unique-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMxE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let tax_classes: Set(Tax_Class) = self.tax_class->select(tax_classe|tax_class.valid_until_date->isEmpty()) in&#xA;if tax_classes->size()=1 then&#x9;&#xA;&#x9;/**ONLY ONE TAX CLASS AT TIME**/&#xA;&#x9;true&#xA;else&#xA;&#x9;/**ERROR YOU CANNOT HAVE SEVERAL TAX CLASSES AT TIME**/&#xA;&#x9;false&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMxU37EeSS5u8wdxTIGg" name="TaxDeduction-CE-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMxk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expenses.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*use it to fill the tax card, temporary until decision on how to model the tax card with respect to the tax payer&#xA;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount +&#xA;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount + &#xA;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMx037EeSS5u8wdxTIGg" name="TaxDeduction-AC-extra_professional-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMyE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_of_AC: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9;ac: Income_Tax_Deduction_Concepts::AC = set_of_AC->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;spouse: Physical_Person = self.legal_union_A->select(couple|couple.end_date->isEmpty())->any(true).individual_B,&#xA;&#x9;taxpayer_income_eligible_type : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;spouse_income_eligible_type : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_income_eligible_type_assisting_spouse : Boolean = self.incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;spouse_income_eligible_type_assisting_spouse : Boolean = spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists(inc|ac.is_eligible_income_for_AC_assisting_spouse(inc)),&#xA;&#x9;&#xA;&#x9;taxpayer_personnaly_affiliated_to_social_security : Boolean = self.is_affiliated_personnaly_to_social_security,&#xA;&#x9;taxpayer_assisting_spouse: Boolean = self.is_assisting_spouse,&#xA;&#x9;&#xA;&#x9;spouse_personnaly_affiliated_to_social_security : Boolean = spouse.is_affiliated_personnaly_to_social_security,&#xA;&#x9;spouse_assisting_spouse: Boolean =  spouse.is_assisting_spouse&#xA;&#x9;in&#xA;&#x9; &#xA;&#x9; if taxpayer_income_eligible_type=true and spouse_income_eligible_type=true then&#xA;&#x9; &#x9;if taxpayer_personnaly_affiliated_to_social_security=true  and spouse_personnaly_affiliated_to_social_security = true then&#xA;&#x9; &#x9;&#x9;ac.deductible_amount= Constants::FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION&#xA;&#x9; &#x9;else&#xA;&#x9; &#x9;&#x9;false&#xA;&#x9; &#x9;endif&#xA;&#x9; else&#xA;&#x9; &#x9;&#x9;if taxpayer_income_eligible_type=true xor spouse_income_eligible_type=true then&#x9; &#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;if  self.incomes->exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) and inc.compute_duration_of_contract() &lt;=36) xor&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exists(inc|inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)  and inc.compute_duration_of_contract() &lt;=36) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;true&#x9; &#x9;&#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0 &#xA;&#x9; &#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9; &#x9;&#x9;&#x9;&#xA;&#x9; &#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9; if taxpayer_income_eligible_type_assisting_spouse=true xor taxpayer_income_eligible_type_assisting_spouse=true then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;if (taxpayer_personnaly_affiliated_to_social_security=true and spouse_personnaly_affiliated_to_social_security = false)  xor &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;(taxpayer_personnaly_affiliated_to_social_security=false and spouse_personnaly_affiliated_to_social_security = true) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;ac.deductible_amount=0&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9; else&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;ac.deductible_amount =0 &#xA;&#x9;&#x9;&#x9; endif&#xA;&#x9; &#x9;endif&#xA;&#x9; endif&#xA;/**NAVIGATIONS&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;self.income_Tax_Deduction->&#xA;self.incomeTax.tax_year&#xA;self.legal_union_A->select&#xA;self.incomes->exists&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->exists&#xA;self.incomes->exists(i&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;self.incomes->exists(&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;spouse.oclAsType(Tax_Payer_Concepts::Tax_Payer).incomes->&#xA;inc.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMyU37EeSS5u8wdxTIGg" name="TaxDeduction-DS-1-permanent_expense" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMyk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let &#xA;permanent_expense: Set(Expense_Concepts::Expense) = self.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Permanent_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;alimony: Set(Expense_Concepts::Expense) = permanent_expense->select(alimony|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;alimony.oclAsType(Expense_Concepts::Permanent_Expense).is_eligible_for_deduction = true),&#xA;debt: Set(Expense_Concepts::Expense) = permanent_expense->select(debt|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;debt.oclAsType(Expense_Concepts::Permanent_Expense).category = Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT),&#xA;ds_alimony: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::ALIMONY and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum(),&#xA;ds_debt: Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense).permanent_expense_category =  Expense_Concepts::Category_of_Permanent_Expense::MISCELLANEOUS_DEBT and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Permanent_Expense)&#xA;&#x9;   in&#x9;&#xA;&#xA;if permanent_expense->size()>0 then&#xA;&#x9;if debt->size()>0 then&#xA;&#x9;&#x9;ds_debt.deductible_amount = debt.declared_amount->sum()/2 * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif and&#xA;&#x9;if alimony->size()>0 then&#xA;&#x9;&#x9;alimony->forAll(al|self.is_separated_from(al.dependent)=true)&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;let sum_alimony: Integer = alimony.declared_amount->sum() * tax_liability in&#xA;&#x9;&#x9;if sum_alimony&lt;=Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = sum_alimony&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_alimony.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE.oclAsType(Integer) &#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATION&#xA;self.expenses->select&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;al.dependent**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMy037EeSS5u8wdxTIGg" name="TaxDeduction-DS-2-interest_expense" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMzE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll(inc |&#xA;&#xA;if (inc.end_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#xA;let &#xA;interest_expense: Set(Expense_Concepts::Expense) = inc.expenses->select(expense|expense.oclIsTypeOf(Expense_Concepts::Interest_Expense) and expense.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;ds_interest_expense: Income_Tax_Deduction_Concepts::DS_for_Interest_Expense = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.expenses->includesAll(interest_expense) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Interest_Expense),&#xA;dependent_children_with_allowances: Set(Dependent) = self.dependents->select(deps|deps.compute_if_dependent_receives_allowances_eligible_for_DS() =true),&#xA;tax_liability : Integer =inc.tax_liability in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if interest_expense->size()>0 then&#xA;&#x9;let sum_interest_expense: Integer = interest_expense.declared_amount->sum() in&#xA;&#x9;if sum_interest_expense&lt;=ds_interest_expense.maximum_deductible_amount then&#xA;&#x9;&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = sum_interest_expense * tax_liability&#xA;&#x9;else&#xA;&#x9;&#x9;ds_interest_expense.deductible_amount = ds_interest_expense.maximum_deductible_amount * tax_liability&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;else&#xA;false&#xA;endif&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMzU37EeSS5u8wdxTIGg" name="TaxDeduction-DS-3-health_and_pension_insurance" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAMzk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;let &#xA;mandatory_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).is_related_to_additional_salary=true),&#xA;additional_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE),&#xA;continued_health_and_pension_insurance: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Health_and_Pension_Insurance).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE),&#xA;ds_mandatory_health_and_pension : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::MANDATORY_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year and type.expenses->includesAll(mandatory_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_additional_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::ADDITIONAL_EMPLOYERS_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(additional_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;ds_continued_health_and_pension_insurance : Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance).insurance_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Health_and_Pension_Insurances::CONTINUED_HEALTH_AND_PENSION_INSURANCE and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(continued_health_and_pension_insurance)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Health_and_Pension_Insurance),&#xA;tax_liability : Integer = inc.tax_liability  in &#xA;&#xA;if mandatory_health_and_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_mandatory_health_and_pension_insurance : Integer = mandatory_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_mandatory_health_and_pension.deductible_amount = sum_mandatory_health_and_pension_insurance&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif &#xA;and&#xA;if additional_pension_insurance->size()>0 then&#xA;&#x9;if inc.oclIsTypeOf(Income_Concepts::Employment_Income) then&#xA;&#x9;let sum_additional_pension_insurance : Integer = additional_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;if&#x9;sum_additional_pension_insurance &lt;= Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = sum_additional_pension_insurance&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_additional_pension_insurance.deductible_amount = Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif and&#xA;if continued_health_and_pension_insurance->size()>0 then&#xA;&#x9;let sum_continued_health_and_pension_insurance : Integer = continued_health_and_pension_insurance.declared_amount->sum() in&#xA;&#x9;&#x9;ds_continued_health_and_pension_insurance.deductible_amount = tax_liability * sum_continued_health_and_pension_insurance&#xA;else&#xA;&#x9;false&#xA;endif&#xA;)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAMz037EeSS5u8wdxTIGg" name="TaxDeduction-DS-4-private_insurance_and_plan" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM0E37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let &#xA;insurance_and_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category &lt;>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true),&#xA;life_insurance: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::PRIVATE_LIFE_INSURANCE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;old_age_pension_plan: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Health_and_Pension_Insurance) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).category =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).is_private_insurance_and_plan_eligible_for_deduction=true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Private_Insurance_and_Plan).duration_of_contract >=10),&#xA;ds_private_insurance_and_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category &lt;> &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;ds_old_age_pension_plan: Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan).private_insurance_and_plan_category = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Expense_Concepts::Category_of_Private_Insurance_and_Plan::OLD_AGE_PENSION_PLAN and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Private_Insurance_and_Plan),&#xA;tax_liability : Integer = self.incomes.tax_liability->sum() in&#xA;&#xA;if insurance_and_plan->size()>0 then&#xA;&#xA;let sum_insurance_and_plan : Integer = insurance_and_plan.declared_amount->sum() + life_insurance.declared_amount->sum() + &#xA;      &#x9;&#x9;&#x9;ds_private_insurance_and_plan.increase_for_life_insurance in&#xA;&#x9;&#x9;&#xA;if&#x9;sum_insurance_and_plan &lt;= ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance then&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = sum_insurance_and_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_private_insurance_and_plan.deductible_amount = ds_private_insurance_and_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;and&#xA;&#xA;if old_age_pension_plan->size()>0 then&#xA;let sum_old_age_pension_plan : Integer = old_age_pension_plan.declared_amount->sum() in&#xA;&#x9;if&#x9;sum_old_age_pension_plan &lt;= ds_old_age_pension_plan.maximum_deductible_amount_for_old_age_pension_plan then&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = sum_old_age_pension_plan&#xA;&#x9;else&#xA;&#x9;&#x9;&#x9;ds_old_age_pension_plan.deductible_amount = ds_old_age_pension_plan.maximum_deductible_amount_for_private_insurance&#x9;&#x9;&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA;/**NAVIGATIONS&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.expenses->&#xA;self.incomeTax.tax_year->&#xA;self.expenses->&#xA;self.incomeTax.tax_year&#xA;self.income_Tax_Deduction->select&#xA;self.incomeTax.tax_year&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM0U37EeSS5u8wdxTIGg" name="TaxDeduction-DS-5-donation" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM0k37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let &#xA;donations: Set(Expense_Concepts::Expense) = self.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Donation)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or expense.oclAsType(Expense_Concepts::Donation).is_donation_reported = true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Donation).is_beneficiary_eligible=true),&#xA;ds_donation: Income_Tax_Deduction_Concepts::DS_for_Donation = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Donation) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Donation) in &#x9;&#x9;&#x9;&#x9;&#x9;&#xA;if donations->size()>0 then&#xA;&#x9;let sum_donation: Integer = donations.declared_amount->sum() in&#xA;&#x9;if sum_donation >= Constants::MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS.oclAsType(Integer) then&#xA;&#x9;&#x9;if sum_donation &lt;= ds_donation.maximum_deductible_amount then&#xA;&#x9;&#x9;ds_donation.deductible_amount = sum_donation&#xA;&#x9;else&#xA;&#x9;&#x9;ds_donation.deductible_amount = ds_donation.maximum_deductible_amount&#xA;&#x9;endif&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#xA;else&#xA;&#x9;false&#xA;endif&#xA;&#xA; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM0037EeSS5u8wdxTIGg" name="TaxDeduction-DS-6-loss_carryforward" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM1E37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll( inc | &#xA;&#xA;                            if (&#xA;                            &#x9;&#x9;(inc.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;                            &#x9;&#x9;inc.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;                                inc.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income))&#xA;                               and (inc.end_date_within_taxation_year = self.incomeTax.tax_year)) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;                               let&#xA;                                 &#x9;losses: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = false),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;losses_successor: Set(Expense_Concepts::Expense) = inc.expenses->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|expense.oclIsTypeOf(Expense_Concepts::Loss_Carryforward) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.year_expense_was_incurred_in=self.incomeTax.tax_year&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).regular_accountability = true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).compensation_by_other_means=false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_been_partner_in_business = true &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and expense.oclAsType(Expense_Concepts::Loss_Carryforward).tax_payer_has_inherited_business_ownership = true),&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss: Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward = losses.deduction->select(type| &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year)->any(true).oclAsType(Income_Tax_Deduction_Concepts::DS_for_Loss_Carryforward) in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(inc.end_date_within_taxation_year = 1990) then /**PUT &lt;, when deciding how to model Date or how to use &quot;&lt;&quot; with the Marte Profile **/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;if losses.declared_amount->sum()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount =  losses.declared_amount->sum()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if losses_successor.declared_amount->sum() >0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = losses_successor.declared_amount->sum() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ds_loss.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else &#xA;                                &#x9;&#x9; false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif)&#xA;&#xA;/**NAVIGATIONS:&#xA;self.incomes->&#xA;inc.expenses->&#xA;inc.expenses->&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;losses.deduction->&#xA;inc.income_type&#xA;inc.income_type&#xA;inc.income_type&#xA;**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM1U37EeSS5u8wdxTIGg" name="TaxCard-unique-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM1k37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|income.tax_card->select(tc|tc.validity=true)->size() &lt;= 1)&#xA;/**THE INCOME CAN HAVE AT MOST ONE VALID TAX CARD, IF THE CONTRACT HAS ENDED THAN IT IS ZERO VALID**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM1037EeSS5u8wdxTIGg" name="TaxDeduction-FD-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM2E37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll(income|&#xA;&#xA;&#x9;let &#xA;&#x9;&#x9;fd_expenses : Set(Expense_Concepts::Expense)= self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and&#xA;&#x9;&#x9;&#x9;exp.year_expense_was_incurred_in=self.incomeTax.tax_year),&#xA;&#x9;&#x9;declared_amount : Integer = fd_expenses.declared_amount->sum(),&#xA;&#x9;&#x9;a_FD:Income_Tax_Deduction_Concepts::FD= self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and type.tax_year=self.incomeTax.tax_year and&#xA;&#x9;&#x9;&#x9;type.expenses->includesAll(fd_expenses))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;&#xA;if ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;income.start_date_within_taxation_year = self.incomeTax.tax_year) then&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;if  (a_FD.calculated_distance>a_FD.distance_declared_in_january) then&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if  (a_FD.calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**NO TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.yearly=  a_FD.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.monthly = a_FD.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.daily = a_FD.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FD FOR TRAVEL EXPENSE, THERE IS NO INCOME TYPE ELIGIBLE FOR FD**/&#xA;&#x9;&#x9;a_FD.deductible_amount = 0&#xA;&#x9;endif&#xA;)&#xA;&#xA;&#xA;/** NAVIGATIONS&#xA;self.incomes&#xA;self.expenses&#xA;self.incomeTax&#xA;self.income_Tax_Deduction&#xA;type.expenses&#xA;income.income_type&#xA;income.income_type&#xA;income.income_type&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;self.incomeTax.tax_year&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM2U37EeSS5u8wdxTIGg" name="TaxDeduction-FO-constraint" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM2k37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.incomes->forAll(income| &#xA;let &#xA;&#x9; fo_expenses : Set(Expense_Concepts::Expense) = income.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.incomeTax.tax_year),&#xA;&#x9; declared_expense:Integer=fo_expenses.declared_amount->sum(),&#xA;&#x9; set_of_FO: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) &#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.tax_year=self.incomeTax.tax_year&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and type.expenses->includesAll(fo_expenses)),&#xA;&#x9; size_set_of_FO:Integer = set_of_FO->size(),&#xA;&#x9; a_FO:Income_Tax_Deduction_Concepts::FO=set_of_FO->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9; income_type_for_taxpayer_authorized_for_FO : Boolean = ((income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year)&#x9; in&#xA;if size_set_of_FO>1 then&#xA;&#x9;/**TAX PAYER CANNOT RECEIVE MORE THAN ONE FO PER INCOME AND EXPENSES ATTACHED TO THE INCOME**/&#xA;&#x9;false&#xA;else&#xA;&#x9;if income_type_for_taxpayer_authorized_for_FO = true then&#xA;&#x9;&#x9;if(not self.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;if(declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;a_FO.rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**FLAT RATE OR REAL COSTS DEFINED BY JOINT TAXATION**/&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and declared_expense> Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer) and spouse_FO.rate_type_for_FO = Type_of_Rate::REGULAR) xor&#xA;&#x9;&#x9;&#x9;(a_FO.rate_type_for_FO = Type_of_Rate::REGULAR and spouse_FO.rate_type_for_FO = Type_of_Rate::REAL_COST and  spouse_declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) &#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (a_FO.rate_type_for_FO = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).deductible_amount = Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;a_FO.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FO.yearly=  a_FO.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FO.monthly = a_FO.deductible_amount/12 and&#xA;&#x9;&#x9;a_FO.daily = a_FO.monthly/24&#x9;&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE FO, THERE IS NO INCOME TYPE ELIGIBLE FOR FO**/&#xA;&#x9;&#x9;a_FO.deductible_amount = 0&#xA;&#x9;endif&#xA;endif&#xA;)&#xA;&#xA;/**NAVIGATION &#xA;&#xA;self.income_Tax_Deduction->select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and type.tax_year=self.incomeTax.tax_year),&#xA;self.incomeTax.tax_year&#xA;self.incomes->select(income&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income)&#xA;self.expenses->select(exp&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).income_Tax_Deduction->&#xA;self.legal_union_A.individual_B.oclAsType(Tax_Payer).expenses->selec&#xA;a_FO.oclAsType(Income_Tax_Deduction_Concepts::Income_Tax_Deduction).tax_year&#xA;&#xA;&#xA;**/</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM2037EeSS5u8wdxTIGg" name="test_for_iterate" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM3E37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let out : Integer = self.expenses->iterate(it; acc:Integer = 0| if (self.age>18) then acc + 1 else 0 endif) in&#xA;&#xA;out >5 &#xA;&#xA;and self.is_dependent_part_of_the_household(self.dependents->any(true))&#xA;&#xA;&#xA;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA; &#xA;&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM3U37EeSS5u8wdxTIGg" name="NEW_TaxDeduction-CE-INVALIDITY" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM3k37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_invalidity:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::INALIDITY_AND_INFIRMITY),&#xA;&#x9;income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_invalidity_and_infirmity  : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::INALIDITY_AND_INFIRMITY),&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_invalidity_and_infirmity.declared_amount->sum() in&#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;if extraordinary_expense_invalidity_and_infirmity->size()>0 then &#xA;&#x9;&#x9;&#x9;&#x9;if self.oclIsTypeOf(Resident_Tax_Payer) then&#xA;&#x9;&#x9;&#x9;&#x9;/**CE FOR INVALIDITY AND INFIRMITY ON THE TAX CARD**/&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->size() = 1&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;CE_invalidity->any(true).deductible_amount = CE_invalidity->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).disability_flat_rate&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#x9;&#xA;else&#xA;false&#xA;endif&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM3037EeSS5u8wdxTIGg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM4E37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_dependence:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_dependence_and_care : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD), &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_dependence_and_care.declared_amount->sum() in&#xA;&#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#xA;&#x9;&#x9;&#x9;&#x9;if  extraordinary_expense_dependence_and_care ->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->size()=1 and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;let &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_dependence_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::DEPENDENCE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_house_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|expense.expense_purpose=Expense_Purpose::HOUSE_CARE) ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; expenses_for_child_care: Set(Expense_Concepts::Expense) = extraordinary_expense_dependence_and_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;amount_house_care: Integer = expenses_for_house_care.declared_amount->sum(),&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum_of_expenses:Integer =  expenses_for_child_care->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.dependent_type=Dependent_Type::CHILD and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.oclAsType(Physical_Person).age&lt;14) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.oclAsType(Physical_Person).disability_percentage>0).declared_amount->sum() in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_child_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CHILD CARE, CHILDREN BEING PART OF THE HOUSHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(amount_house_care + sum_of_expenses)>Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)+ CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;CE_dependence->any(true).deductible_amount = Constants::MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(expenses_for_dependence_care->size()>0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CE FOR CLOSE RELATIVE DEPENDENCE CARE**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses + CE_dependence->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE).dependent_relative_flat_rate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_dependence->any(true).deductible_amount= amount_house_care + sum_of_expenses&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAM4U37EeSS5u8wdxTIGg" name="NEW_TaxDeduction-CE-DEPENDENCE-AND-CARE-CHILDREN-NOT-PART-OF-HOUSEHOLD" constrainedElement="_WnAMtE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAM4k37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_of_CE: Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(type|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type.tax_year=self.incomeTax.tax_year),&#xA;&#x9; CE_child_not_part_of_household:Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction)=set_of_CE->select(ce|ce.oclAsType(Income_Tax_Deduction_Concepts::CE).ce_deduction_type=&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),&#xA;&#x9; income_subject_to_witholding_tax : Set(Income_Concepts::Income) = self.incomes->select(income|income.oclIsTypeOf(Income_Concepts::Local_Income) and&#xA;      &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not income.oclAsType(Income_Concepts::Local_Income).tax_card->isEmpty() and&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;income.start_date_within_taxation_year = self.incomeTax.tax_year),&#xA; &#x9; extraordinary_expenses : &#x9;Set(Expense_Concepts::Expense) = self.expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclIsTypeOf(Expense_Concepts::Extraordinary_Expense_CE)),&#x9;&#xA; &#x9; extraordinary_expense_care_for_children_not_part_of_the_household : &#x9;Set(Expense_Concepts::Expense) = extraordinary_expenses->select(exp|&#xA; &#x9;  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;exp.oclAsType(Expense_Concepts::Extraordinary_Expense_CE).ce_type = CE_Type::CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD),  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9; declared_expense:Integer=extraordinary_expense_care_for_children_not_part_of_the_household.declared_amount->sum() in&#xA;&#x9; &#x9; &#xA;&#x9;if (income_subject_to_witholding_tax->size()>0) then&#xA;&#x9;&#x9;if (extraordinary_expenses->any(true).oclAsType(Expense_Concepts::Extraordinary_Expense_CE).is_above_thresholded_deduction_percentage_for_CE()=true) then&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;     if  CE_child_not_part_of_household->size()>0 then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CE_child_not_part_of_household->size()= 1 and&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/**CARE FOR CHILDREN NOT BEING PART OF THE HOUSEHOLD**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expenses_for_child_not_part_of_houselod_care: Set(Expense_Concepts::Expense) = self.expenses->select(expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;not self.is_dependent_part_of_the_household(expense.dependent) = true and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.expense_purpose=Expense_Purpose::CHILD_CARE),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;sum_expenses_for_children:Integer = expenses_for_child_not_part_of_houselod_care->select(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense|&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care() =false and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((expense.dependent.age&lt;=21) or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(expense.dependent.age>21 and expense.dependent.continued_studies=true and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;expense.dependent.tax_Payer.incomes.income_amount->sum()&lt;0.6*Constants::MINIMUM_SALARY.oclAsType(Integer)))).declared_amount->sum() in&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; if(sum_expenses_for_children>Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount  = Constants::MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CE_child_not_part_of_household->any(true).deductible_amount = sum_expenses_for_children&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;endif&#xA;&#x9;else&#xA;&#x9;&#x9;/**TAX PAYER CANNOT RECEIVE CE, NOT SUBJECT TO WITHOLDING**/&#xA;&#x9;&#x9;false&#xA;&#x9;endif&#x9;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_WnAM4037EeSS5u8wdxTIGg" general="_WnAMjU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAM5E37EeSS5u8wdxTIGg" name="incomes" visibility="private" type="_WnANTE37EeSS5u8wdxTIGg" association="_WnAN-037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM5U37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM5k37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM5037EeSS5u8wdxTIGg" name="incomeTax" visibility="private" type="_WnAMOU37EeSS5u8wdxTIGg" association="_WnANGU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM6E37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM6U37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM6k37EeSS5u8wdxTIGg" name="income_Tax_Credit" visibility="private" type="_WnAOuU37EeSS5u8wdxTIGg" association="_WnAOA037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM6037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM7E37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM7U37EeSS5u8wdxTIGg" name="tax_class" visibility="private" type="_WnANGk37EeSS5u8wdxTIGg" association="_WnAMOE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM7k37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM7037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM8E37EeSS5u8wdxTIGg" name="household" visibility="private" type="_WnAMdE37EeSS5u8wdxTIGg" association="_WnANFE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM8U37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM8k37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM8037EeSS5u8wdxTIGg" name="dependents" visibility="private" type="_WnAMSE37EeSS5u8wdxTIGg" association="_WnANFk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM9E37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM9U37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM9k37EeSS5u8wdxTIGg" name="income_Tax_Deduction" visibility="private" type="_WnAPL037EeSS5u8wdxTIGg" association="_WnAOJ037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM9037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM-E37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM-U37EeSS5u8wdxTIGg" name="taxed_jointly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM-k37EeSS5u8wdxTIGg" name="expenses" visibility="private" type="_WnAN4037EeSS5u8wdxTIGg" association="_WnAOKE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM-037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM_E37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAM_U37EeSS5u8wdxTIGg" name="dependent" visibility="private" type="_WnAMSE37EeSS5u8wdxTIGg" association="_WnANFU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAM_k37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAM_037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANAE37EeSS5u8wdxTIGg" name="tax_Card" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" aggregation="shared" association="_WnAND037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANAU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANAk37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANA037EeSS5u8wdxTIGg" name="taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANBE37EeSS5u8wdxTIGg" name="is_dependent_part_of_the_household" isQuery="true" bodyCondition="_WnANBk37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANBU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANBk37EeSS5u8wdxTIGg" name="is_child_part_of_household" constrainedElement="_WnANBE37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANB037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>let responsible_person: Tax_Payer = IN_dependent.responsible_person,&#xA;     household_tax_payer_same_as_respnsible: Boolean = IN_dependent.household.tax_Payer.oclAsType(Physical_Person).SSNo = responsible_person.oclAsType(Physical_Person).SSNo&#xA;in&#xA;if (responsible_person->notEmpty() and household_tax_payer_same_as_respnsible) then&#xA;&#x9;/**THE CHILD IS PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = true&#xA;else &#xA;&#x9;/**THE CHILD IS NOT PART OF THE TAX PAYERS HOUSEHOLD**/&#xA;&#x9;result = false&#xA;endif&#xA;&#xA;&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANCE37EeSS5u8wdxTIGg" name="IN_dependent" type="_WnAMSE37EeSS5u8wdxTIGg"/>
          <ownedParameter xmi:id="_WnANCU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANCk37EeSS5u8wdxTIGg" name="number_of_months_of_allowance" isQuery="true" postcondition="_WnANDE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANC037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANDE37EeSS5u8wdxTIGg" name="number_od_months_of_allowance" constrainedElement="_WnANCk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANDU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>result = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANDk37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAND037EeSS5u8wdxTIGg" name="" memberEnd="_WnANAE37EeSS5u8wdxTIGg _WnAOoE37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANEE37EeSS5u8wdxTIGg" name="located at" memberEnd="_WnAMlE37EeSS5u8wdxTIGg _WnAMQE37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANEU37EeSS5u8wdxTIGg" name="receives" memberEnd="_WnAMkU37EeSS5u8wdxTIGg _WnAMa037EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANEk37EeSS5u8wdxTIGg" name="person B" memberEnd="_WnAMhE37EeSS5u8wdxTIGg _WnAMmk37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANE037EeSS5u8wdxTIGg" name="person A" memberEnd="_WnAMgU37EeSS5u8wdxTIGg _WnAMl037EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANFE37EeSS5u8wdxTIGg" name="maintains" memberEnd="_WnAM8E37EeSS5u8wdxTIGg _WnAMdU37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANFU37EeSS5u8wdxTIGg" name="as tax payer" memberEnd="_WnAMVk37EeSS5u8wdxTIGg _WnAM_U37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANFk37EeSS5u8wdxTIGg" name="supports" memberEnd="_WnAM8037EeSS5u8wdxTIGg _WnAMTk37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANF037EeSS5u8wdxTIGg" name="is part of" memberEnd="_WnAMS037EeSS5u8wdxTIGg _WnAMeE37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANGE37EeSS5u8wdxTIGg" name="incurred over" memberEnd="_WnAN6k37EeSS5u8wdxTIGg _WnAMU037EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANGU37EeSS5u8wdxTIGg" name="is subject to" memberEnd="_WnAM5037EeSS5u8wdxTIGg _WnAMOk37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANGk37EeSS5u8wdxTIGg" name="Tax_Class">
        <ownedAttribute xmi:id="_WnANG037EeSS5u8wdxTIGg" name="tax_class" visibility="public" type="_WnAOFk37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANHE37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAMOE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANHU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANHk37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANH037EeSS5u8wdxTIGg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANIE37EeSS5u8wdxTIGg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANIU37EeSS5u8wdxTIGg" name="tax_card" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAOJk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANIk37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANI037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANJE37EeSS5u8wdxTIGg" name="current_tax_class" visibility="private" type="_WnANGk37EeSS5u8wdxTIGg" association="_WnANKk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANJU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANJk37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANJ037EeSS5u8wdxTIGg" name="prev" visibility="private" type="_WnANGk37EeSS5u8wdxTIGg" association="_WnANKk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANKE37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANKU37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANKk37EeSS5u8wdxTIGg" name="replaced by" memberEnd="_WnANJE37EeSS5u8wdxTIGg _WnANJ037EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnANK037EeSS5u8wdxTIGg" name="Income_Concepts">
      <ownedComment xmi:id="_WnANLE37EeSS5u8wdxTIGg" annotatedElement="_WnANRk37EeSS5u8wdxTIGg">
        <body>&lt;p> Art.91, alinea 1, numero 2&lt;/p></body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANLU37EeSS5u8wdxTIGg" name="Income_Type">
        <ownedAttribute xmi:id="_WnANLk37EeSS5u8wdxTIGg" name="subjectToWithholdingTax" visibility="private">
          <ownedComment xmi:id="_WnANL037EeSS5u8wdxTIGg" annotatedElement="_WnANLk37EeSS5u8wdxTIGg">
            <body>&lt;p>The&amp;nbsp;following&amp;nbsp;types&amp;nbsp;of&amp;nbsp;income&amp;nbsp;are&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;tax:&lt;/p>&lt;p>Employment&lt;/p>&lt;p>Pensions&amp;nbsp;and&amp;nbsp;Annuities&lt;/p>&lt;p>Investments&amp;nbsp;(not&amp;nbsp;all&amp;nbsp;types&amp;nbsp;might&amp;nbsp;be&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding.&amp;nbsp;The&amp;nbsp;types&amp;nbsp;subject&amp;nbsp;to&amp;nbsp;withholding&amp;nbsp;have&amp;nbsp;been&amp;nbsp;elaborated&amp;nbsp;on&amp;nbsp;page&amp;nbsp;15&amp;nbsp;of&amp;nbsp;the&amp;nbsp;memento)&lt;/p>&lt;p>&lt;/p></body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANME37EeSS5u8wdxTIGg" name="income" visibility="private" type="_WnANTE37EeSS5u8wdxTIGg" association="_WnANR037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANMU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANMk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANM037EeSS5u8wdxTIGg" name="Trade_and_Business_Income">
        <generalization xmi:id="_WnANNE37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANNU37EeSS5u8wdxTIGg" name="Agriculture_and_Forestry_Income">
        <generalization xmi:id="_WnANNk37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANN037EeSS5u8wdxTIGg" name="Independent_Professional_Services_Income">
        <generalization xmi:id="_WnANOE37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANOU37EeSS5u8wdxTIGg" name="Pensions_and_Annuities_Income">
        <generalization xmi:id="_WnANOk37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANO037EeSS5u8wdxTIGg" name="occasional_payement" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANPE37EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANPU37EeSS5u8wdxTIGg" name="Capital_and_Investments_Income">
        <generalization xmi:id="_WnANPk37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANP037EeSS5u8wdxTIGg" name="Employment_Income">
        <generalization xmi:id="_WnANQE37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANQU37EeSS5u8wdxTIGg" name="Rentals_and_Leases_Income">
        <generalization xmi:id="_WnANQk37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANQ037EeSS5u8wdxTIGg" name="Sundry_Income">
        <generalization xmi:id="_WnANRE37EeSS5u8wdxTIGg" general="_WnANLU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANRU37EeSS5u8wdxTIGg" name="Directors_Fee">
        <generalization xmi:id="_WnANRk37EeSS5u8wdxTIGg" general="_WnANN037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANR037EeSS5u8wdxTIGg" name="has as type" memberEnd="_WnANW037EeSS5u8wdxTIGg _WnANME37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANSE37EeSS5u8wdxTIGg" name="Foreign_Income">
        <generalization xmi:id="_WnANSU37EeSS5u8wdxTIGg" general="_WnANTE37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANSk37EeSS5u8wdxTIGg" name="Local_Income">
        <generalization xmi:id="_WnANS037EeSS5u8wdxTIGg" general="_WnANTE37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANTE37EeSS5u8wdxTIGg" name="Income">
        <ownedRule xmi:id="_WnANTU37EeSS5u8wdxTIGg" name="Tax_Deduction_FD-constraint" constrainedElement="_WnANTE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANTk37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>(self .income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year &#xA;and&#xA;let fd_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Travel_Expense_FD) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year) in&#xA;     fd_expenses->notEmpty()&#xA;     &#xA;implies&#xA;&#xA;&#x9; fd_expenses->forAll(a_FD|&#x9; &#xA;&#x9; if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).distance_declared_in_january) then&#xA;&#x9;&#x9;if  (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if (a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance>Constants::MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**MAXIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;/**REAL DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * a_FD.deduction.oclAsType(Income_Tax_Deduction_Concepts::FD).calculated_distance&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;/**MINIMAL FLAT DISTANCE FOR TRAVEL EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;a_FD.deduction.deductible_amount = Constants::FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT.oclAsType(Integer) * Constants::MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/*NO CHANGES FOR FD, TRAVEL EXPENSE IS ALREADY DEDUCED FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;a_FD.deduction.yearly=  a_FD.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;a_FD.deduction.monthly = a_FD.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;a_FD.deduction.daily = a_FD.deduction.monthly/25&#xA;)&#xA;&#x9; </body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnANT037EeSS5u8wdxTIGg" name="Tax_Deduction_FO-constraint" constrainedElement="_WnANTE37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANUE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>(self.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;self.income_type.oclIsTypeOf(Income_Concepts::Rentals_and_Leases_Income)) = true&#xA;and&#xA;self.start_date_within_taxation_year = self.taxPayer.incomeTax.tax_year&#xA;and&#xA;let fo_expenses : Set(Expense_Concepts::Expense) = self.expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO) and exp.year_expense_was_incurred_in = self.start_date_within_taxation_year),&#xA;&#x9;declared_expense : Integer = fo_expenses.declared_amount->sum() in&#xA;&#x9;&#xA;     fo_expenses->notEmpty()&#xA;&#xA;implies&#xA;&#xA;&#x9;fo_expenses->forAll(fo|&#xA;&#x9;&#x9;&#x9;/*do we want to care about this, or up to the agent to decide*/&#xA;&#x9;&#x9;&#x9;let spouse_FO: Income_Tax_Deduction_Concepts::FO =  self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).income_Tax_Deduction->&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;select(type|type.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO))->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO),&#xA;&#x9;&#x9;&#x9;&#x9; spouse_declared_expense:Integer=self.taxPayer.legal_union_A.individual_B.oclAsType(Tax_Payer_Concepts::Tax_Payer).expenses->select(exp|exp.oclIsTypeOf(Expense_Concepts::Miscellaneous_Expense_FO))->any(true).declared_amount in&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REAL_COST) then &#xA;&#x9;&#x9;&#x9;&#x9;if(self.taxPayer.taxed_jointly) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(spouse_FO.rate_type_for_FO= Type_of_Rate::REAL_COST) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .rate_type_for_FO = Type_of_Rate::REGULAR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if(declared_expense>Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE= Type_of_Rate::REAL_COST&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;true&#xA;&#x9;&#x9;&#x9;&#x9;endif &#xA;&#x9;&#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if (Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE = Type_of_Rate::REGULAR) then&#xA;&#x9;&#x9;&#x9;/*FLAT RATE FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount =Constants::FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;/**REAL COST FOR FO EXPENSE IS ALLOWED FOR DEDUCTION FROM TAXABLE INCOME**/&#xA;&#x9;&#x9;&#x9;&#x9;fo.deduction.deductible_amount = declared_expense+Constants::DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE.oclAsType(Integer)&#xA;&#x9;&#x9;endif&#xA;&#x9;&#x9;and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .yearly=  fo.deduction.deductible_amount and&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .monthly = fo.deduction.deductible_amount/12 and&#xA;&#x9;&#x9;fo.deduction.oclAsType(Income_Tax_Deduction_Concepts::FO) .daily = fo.deduction.monthly/25 &#x9;&#xA;&#x9;) &#xA;&#x9;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_WnANUU37EeSS5u8wdxTIGg" name="taxPayer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAN-037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANUk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANU037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANVE37EeSS5u8wdxTIGg" name="income_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANVU37EeSS5u8wdxTIGg" name="start_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANVk37EeSS5u8wdxTIGg" name="start_date_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANV037EeSS5u8wdxTIGg" name="end_date_within_taxation_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANWE37EeSS5u8wdxTIGg" name="tax_card" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAOIE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANWU37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANWk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANW037EeSS5u8wdxTIGg" name="income_type" visibility="private" type="_WnANLU37EeSS5u8wdxTIGg" association="_WnANR037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANXE37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANXU37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANXk37EeSS5u8wdxTIGg" name="expenses" visibility="private" type="_WnAN4037EeSS5u8wdxTIGg" association="_WnAN4k37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANX037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANYE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANYU37EeSS5u8wdxTIGg" name="tax_liability" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANYk37EeSS5u8wdxTIGg" name="distances" visibility="private" type="_WnANbk37EeSS5u8wdxTIGg" association="_WnANdU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANY037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANZE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANZU37EeSS5u8wdxTIGg" name="compute_duration_of_contract" isQuery="true" postcondition="_WnANZ037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANZk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANZ037EeSS5u8wdxTIGg" name="get_duration" constrainedElement="_WnANZU37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANaE37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>result=1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANaU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANak37EeSS5u8wdxTIGg" name="compute_duration_of_contract_within_taxation_year" isQuery="true">
          <eAnnotations xmi:id="_WnANa037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnANbE37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnANbU37EeSS5u8wdxTIGg" name="IN_date">
            <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANbk37EeSS5u8wdxTIGg" name="Distance">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_WnANb037EeSS5u8wdxTIGg" name="value" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Wl5_uk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_WnANcE37EeSS5u8wdxTIGg" name="month" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Wl5_pE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_WnANcU37EeSS5u8wdxTIGg" name="full_time_equivalent" aggregation="composite">
          <type xmi:type="uml:DataType" href="CTIE_Library.uml#_Wl5_pE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANck37EeSS5u8wdxTIGg" name="income" visibility="private" type="_WnANTE37EeSS5u8wdxTIGg" association="_WnANdU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnANc037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnANdE37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnANdU37EeSS5u8wdxTIGg" name="has" memberEnd="_WnANck37EeSS5u8wdxTIGg _WnANYk37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnANdk37EeSS5u8wdxTIGg" name="Expense_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANd037EeSS5u8wdxTIGg" name="Permanent_Expense">
        <generalization xmi:id="_WnANeE37EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANeU37EeSS5u8wdxTIGg" name="category" visibility="public" type="_WnAN1U37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANek37EeSS5u8wdxTIGg" name="is_eligible_for_deduction" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANe037EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANfE37EeSS5u8wdxTIGg" name="is_expense_eligible_for_deduction" isQuery="true" postcondition="_WnANfk37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANfU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANfk37EeSS5u8wdxTIGg" name="is_eligible" constrainedElement="_WnANfE37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANf037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.is_eligible_for_deduction = IN_agent_response and&#xA;result = IN_agent_response&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANgE37EeSS5u8wdxTIGg" name="IN_agent_response">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnANgU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANgk37EeSS5u8wdxTIGg" name="Interest_Expense">
        <generalization xmi:id="_WnANg037EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANhE37EeSS5u8wdxTIGg" name="Special_Expense_DS">
        <generalization xmi:id="_WnANhU37EeSS5u8wdxTIGg" general="_WnAN4037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANhk37EeSS5u8wdxTIGg" name="Private_Insurance_and_Plan">
        <generalization xmi:id="_WnANh037EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANiE37EeSS5u8wdxTIGg" name="category" visibility="public" type="_WnAN2E37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANiU37EeSS5u8wdxTIGg" name="duration_of_contract" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANik37EeSS5u8wdxTIGg" name="is_private_insurance_and_plan_eligible_for_deduction" visibility="public" isDerived="true">
          <eAnnotations xmi:id="_WnANi037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANjE37EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANjU37EeSS5u8wdxTIGg" name="is_private_insurance_and_plan_eligible_for_deduction" isQuery="true" postcondition="_WnANj037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANjk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANj037EeSS5u8wdxTIGg" name="is_private_insurance_and_plan_eligible_for_deduction" constrainedElement="_WnANjU37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANkE37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.is_private_insurance_and_plan_eligible_for_deduction = IN_eligible_plan&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANkU37EeSS5u8wdxTIGg" name="IN_eligible_plan">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANkk37EeSS5u8wdxTIGg" name="Health_and_Pension_Insurance">
        <generalization xmi:id="_WnANk037EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANlE37EeSS5u8wdxTIGg" name="category" visibility="public" type="_WnAN3k37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANlU37EeSS5u8wdxTIGg" name="is_related_to_additional_salary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANlk37EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANl037EeSS5u8wdxTIGg" name="Donation">
        <generalization xmi:id="_WnANmE37EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANmU37EeSS5u8wdxTIGg" name="beneficiary" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANmk37EeSS5u8wdxTIGg" name="is_beneficiary_eligible" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANm037EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANnE37EeSS5u8wdxTIGg" name="is_donation_reported" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANnU37EeSS5u8wdxTIGg" name="get_beneficiary_eligibility_for_deduction" isQuery="true" postcondition="_WnANn037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANnk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANn037EeSS5u8wdxTIGg" name="is_leagaly_approved_beneficiary" constrainedElement="_WnANnU37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANoE37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>is_beneficiary_eligible = IN_eligibility&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANoU37EeSS5u8wdxTIGg" name="IN_eligibility">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANok37EeSS5u8wdxTIGg" name="Loss_Carryforward">
        <ownedRule xmi:id="_WnANo037EeSS5u8wdxTIGg" name="ExpensePossibleOnlyIfCertainIncomeType-constraint" constrainedElement="_WnANok37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANpE37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.oclIsTypeOf(Loss_Carryforward) implies&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income)&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_WnANpU37EeSS5u8wdxTIGg" general="_WnANhE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANpk37EeSS5u8wdxTIGg" name="regular_accountability" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANp037EeSS5u8wdxTIGg" name="compensation_by_other_means" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANqE37EeSS5u8wdxTIGg" name="tax_payer_has_inherited_business_ownership" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANqU37EeSS5u8wdxTIGg">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANqk37EeSS5u8wdxTIGg" name="tax_payer_has_been_partner_in_business" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_WnANq037EeSS5u8wdxTIGg" value="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </defaultValue>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnANrE37EeSS5u8wdxTIGg" name="is_accountability_regular" isQuery="true" postcondition="_WnANrk37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANrU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANrk37EeSS5u8wdxTIGg" name="is_accounatbility_regular" constrainedElement="_WnANrE37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANr037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.regular_accountability = IN_regularity</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANsE37EeSS5u8wdxTIGg" name="IN_regularity">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnANsU37EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANsk37EeSS5u8wdxTIGg" name="is_compensated_by_other_means" isQuery="true" postcondition="_WnANtE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANs037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANtE37EeSS5u8wdxTIGg" name="is_compensated_by_other_means" constrainedElement="_WnANsk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANtU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.compensation_by_other_means = IN_compensated</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANtk37EeSS5u8wdxTIGg" name="IN_compensated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANt037EeSS5u8wdxTIGg" name="has_been_tax_payer_partner_in_business" isQuery="true" postcondition="_WnANuU37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANuE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANuU37EeSS5u8wdxTIGg" name="partner_in_business" constrainedElement="_WnANt037EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANuk37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.tax_payer_has_been_partner_in_business = IN_has_been_partner_in_business&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANu037EeSS5u8wdxTIGg" name="IN_has_been_partner_in_business">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANvE37EeSS5u8wdxTIGg" name="has_tax_payer_inherited_business_ownership" isQuery="true" postcondition="_WnANvk37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANvU37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANvk37EeSS5u8wdxTIGg" name="inherited_business_ownership" constrainedElement="_WnANvE37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANv037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.tax_payer_has_inherited_business_ownership = IN_inherited_business_ownership</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANwE37EeSS5u8wdxTIGg" name="IN_inherited_business_ownership">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANwU37EeSS5u8wdxTIGg" name="Spousal_Expense_AC">
        <generalization xmi:id="_WnANwk37EeSS5u8wdxTIGg" general="_WnAN4037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANw037EeSS5u8wdxTIGg" name="Extraordinary_Expense_CE">
        <generalization xmi:id="_WnANxE37EeSS5u8wdxTIGg" general="_WnAN4037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnANxU37EeSS5u8wdxTIGg" name="thresholded_deduction_percentage" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnANxk37EeSS5u8wdxTIGg" name="ce_type" visibility="public" type="_WnAOLE37EeSS5u8wdxTIGg"/>
        <ownedOperation xmi:id="_WnANx037EeSS5u8wdxTIGg" name="is_above_thresholded_deduction_percentage_for_CE" isQuery="true">
          <eAnnotations xmi:id="_WnANyE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnANyU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnANyk37EeSS5u8wdxTIGg" name="compute_thresholded_deduction_percentage_for_CE" isQuery="true" postcondition="_WnANzE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnANy037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnANzE37EeSS5u8wdxTIGg" name="thresholded_deduction_percentage" constrainedElement="_WnANyk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnANzU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.thresholded_deduction_percentage = IN_thresholded_deduction_percentage&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnANzk37EeSS5u8wdxTIGg" name="IN_thresholded_deduction_percentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnANz037EeSS5u8wdxTIGg" name="Travel_Expense_FD">
        <generalization xmi:id="_WnAN0E37EeSS5u8wdxTIGg" general="_WnAN0037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAN0U37EeSS5u8wdxTIGg" name="Miscellaneous_Expense_FO">
        <generalization xmi:id="_WnAN0k37EeSS5u8wdxTIGg" general="_WnAN0037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAN0037EeSS5u8wdxTIGg" name="Professional_Expense">
        <generalization xmi:id="_WnAN1E37EeSS5u8wdxTIGg" general="_WnAN4037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAN1U37EeSS5u8wdxTIGg" name="Category_of_Permanent_Expense">
        <ownedLiteral xmi:id="_WnAN1k37EeSS5u8wdxTIGg" name="MISCELLANEOUS_DEBT" classifier="_WnAN1U37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN1037EeSS5u8wdxTIGg" name="ALIMONY" classifier="_WnAN1U37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAN2E37EeSS5u8wdxTIGg" name="Category_of_Private_Insurance_and_Plan">
        <ownedLiteral xmi:id="_WnAN2U37EeSS5u8wdxTIGg" name="PRIVATE_INSURANCE" classifier="_WnAN2E37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN2k37EeSS5u8wdxTIGg" name="PRIVATE_LIFE_INSURANCE" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN2037EeSS5u8wdxTIGg" name="COMPANY_MEMBERS_PRIVATE_INSURANCE" classifier="_WnAN2E37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN3E37EeSS5u8wdxTIGg" name="HOUSING_SAVING_PLAN" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN3U37EeSS5u8wdxTIGg" name="OLD_AGE_PENSION_PLAN" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAN3k37EeSS5u8wdxTIGg" name="Category_of_Health_and_Pension_Insurances">
        <ownedLiteral xmi:id="_WnAN3037EeSS5u8wdxTIGg" name="MANDATORY_HEALTH_AND_PENSION_INSURANCE" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN4E37EeSS5u8wdxTIGg" name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
        <ownedLiteral xmi:id="_WnAN4U37EeSS5u8wdxTIGg" name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" classifier="_WnAN3k37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAN4k37EeSS5u8wdxTIGg" name="influences" memberEnd="_WnAN7k37EeSS5u8wdxTIGg _WnANXk37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAN4037EeSS5u8wdxTIGg" name="Expense">
        <ownedAttribute xmi:id="_WnAN5E37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAOKE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAN5U37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAN5k37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN5037EeSS5u8wdxTIGg" name="declared_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN6E37EeSS5u8wdxTIGg" name="expense_purpose" visibility="public" type="_WnAOME37EeSS5u8wdxTIGg">
          <defaultValue xmi:type="uml:InstanceValue" xmi:id="_WnAN6U37EeSS5u8wdxTIGg" name="OTHER" type="_WnAOME37EeSS5u8wdxTIGg" instance="_WnAONE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN6k37EeSS5u8wdxTIGg" name="dependent" visibility="private" type="_WnAMSE37EeSS5u8wdxTIGg" association="_WnANGE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAN6037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAN7E37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN7U37EeSS5u8wdxTIGg" name="year_expense_was_incurred_in" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN7k37EeSS5u8wdxTIGg" name="income" visibility="private" type="_WnANTE37EeSS5u8wdxTIGg" association="_WnAN4k37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAN7037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAN8E37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAN8U37EeSS5u8wdxTIGg" name="deduction" visibility="private" type="_WnAPL037EeSS5u8wdxTIGg" association="_WnAPPk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAN8k37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAN8037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAN9E37EeSS5u8wdxTIGg" name="Grantor">
      <ownedLiteral xmi:id="_WnAN9U37EeSS5u8wdxTIGg" name="ACD" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN9k37EeSS5u8wdxTIGg" name="Employer" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN9037EeSS5u8wdxTIGg" name="CNPF" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN-E37EeSS5u8wdxTIGg" name="CEDIES" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN-U37EeSS5u8wdxTIGg" name="SNJ" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN-k37EeSS5u8wdxTIGg" name="CNAP" classifier="_WnAN9E37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAN-037EeSS5u8wdxTIGg" name="earns" memberEnd="_WnAM5E37EeSS5u8wdxTIGg _WnANUU37EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAN_E37EeSS5u8wdxTIGg" name="Country">
      <ownedLiteral xmi:id="_WnAN_U37EeSS5u8wdxTIGg" name="LU" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN_k37EeSS5u8wdxTIGg" name="FR" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAN_037EeSS5u8wdxTIGg" name="BE" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOAE37EeSS5u8wdxTIGg" name="DE" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOAU37EeSS5u8wdxTIGg" name="NL" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOAk37EeSS5u8wdxTIGg" name="OTHER" classifier="_WnAN_E37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAOA037EeSS5u8wdxTIGg" name="credited for" memberEnd="_WnAM6k37EeSS5u8wdxTIGg _WnAOu037EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_WnAOBE37EeSS5u8wdxTIGg" name="Date">
      <ownedAttribute xmi:id="_WnAOBU37EeSS5u8wdxTIGg" name="day" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOBk37EeSS5u8wdxTIGg" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOB037EeSS5u8wdxTIGg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_WnAOCE37EeSS5u8wdxTIGg" name="month" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_WnAOCU37EeSS5u8wdxTIGg" name="year" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOCk37EeSS5u8wdxTIGg" name="Job_Activity">
      <ownedLiteral xmi:id="_WnAOC037EeSS5u8wdxTIGg" name="Salary" classifier="_WnAOCk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAODE37EeSS5u8wdxTIGg" name="Pension" classifier="_WnAOCk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAODU37EeSS5u8wdxTIGg" name="Annuity" classifier="_WnAOCk37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAODk37EeSS5u8wdxTIGg" name="Tax_Card_Type">
      <ownedLiteral xmi:id="_WnAOD037EeSS5u8wdxTIGg" name="Principal" classifier="_WnAODk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOEE37EeSS5u8wdxTIGg" name="Additional" classifier="_WnAODk37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOEU37EeSS5u8wdxTIGg" name="Tax_Office">
      <ownedLiteral xmi:id="_WnAOEk37EeSS5u8wdxTIGg" name="RTS_2" classifier="_WnAOEU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOE037EeSS5u8wdxTIGg" name="RTS_3" classifier="_WnAOEU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOFE37EeSS5u8wdxTIGg" name="RTS_Esch" classifier="_WnAOEU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOFU37EeSS5u8wdxTIGg" name="RTS_Ettelbruck" classifier="_WnAOEU37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOFk37EeSS5u8wdxTIGg" name="Tax_Class_Category">
      <ownedLiteral xmi:id="_WnAOF037EeSS5u8wdxTIGg" name="One" classifier="_WnAOFk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOGE37EeSS5u8wdxTIGg" name="One_A" classifier="_WnAOFk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOGU37EeSS5u8wdxTIGg" name="Two" classifier="_WnAOFk37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOGk37EeSS5u8wdxTIGg" name="Town">
      <ownedLiteral xmi:id="_WnAOG037EeSS5u8wdxTIGg" name="Luxembourg_city" classifier="_WnAOGk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOHE37EeSS5u8wdxTIGg" name="Bertrange" classifier="_WnAOGk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOHU37EeSS5u8wdxTIGg" name="Strassen" classifier="_WnAOGk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOHk37EeSS5u8wdxTIGg" name="Bettembourg" classifier="_WnAOGk37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOH037EeSS5u8wdxTIGg" name="Beaufort" classifier="_WnAOGk37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAOIE37EeSS5u8wdxTIGg" name="linked to" memberEnd="_WnANWE37EeSS5u8wdxTIGg _WnAOek37EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOIU37EeSS5u8wdxTIGg" name="Dependent_Type">
      <ownedLiteral xmi:id="_WnAOIk37EeSS5u8wdxTIGg" name="CHILD" classifier="_WnAOIU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOI037EeSS5u8wdxTIGg" name="SPOUSE" classifier="_WnAOIU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOJE37EeSS5u8wdxTIGg" name="RELATIVE" classifier="_WnAOIU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOJU37EeSS5u8wdxTIGg" name="OTHER_FAMILY_MEMBER" classifier="_WnAOIU37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAOJk37EeSS5u8wdxTIGg" name="provides" memberEnd="_WnAOfU37EeSS5u8wdxTIGg _WnANIU37EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAOJ037EeSS5u8wdxTIGg" name="receives" memberEnd="_WnAM9k37EeSS5u8wdxTIGg _WnAPNE37EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_WnAOKE37EeSS5u8wdxTIGg" name="declares" memberEnd="_WnAM-k37EeSS5u8wdxTIGg _WnAN5E37EeSS5u8wdxTIGg"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOKU37EeSS5u8wdxTIGg" name="Type_of_Rate">
      <ownedLiteral xmi:id="_WnAOKk37EeSS5u8wdxTIGg" name="REGULAR" classifier="_WnAOKU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOK037EeSS5u8wdxTIGg" name="REAL_COST" classifier="_WnAOKU37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOLE37EeSS5u8wdxTIGg" name="CE_Type">
      <ownedLiteral xmi:id="_WnAOLU37EeSS5u8wdxTIGg" name="INALIDITY_AND_INFIRMITY" classifier="_WnAOLE37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOLk37EeSS5u8wdxTIGg" name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" classifier="_WnAOLE37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOL037EeSS5u8wdxTIGg" name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_WnAOLE37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAOME37EeSS5u8wdxTIGg" name="Expense_Purpose">
      <ownedLiteral xmi:id="_WnAOMU37EeSS5u8wdxTIGg" name="HOUSE_CARE" classifier="_WnAOME37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOMk37EeSS5u8wdxTIGg" name="CHILD_CARE" classifier="_WnAOME37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOM037EeSS5u8wdxTIGg" name="DEPENDENCE_CARE" classifier="_WnAOME37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAONE37EeSS5u8wdxTIGg" name="OTHER" classifier="_WnAOME37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_WnAONU37EeSS5u8wdxTIGg" name="Constants">
      <ownedLiteral xmi:id="_WnAONk37EeSS5u8wdxTIGg" name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAON037EeSS5u8wdxTIGg" value="3480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOOE37EeSS5u8wdxTIGg" name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOOU37EeSS5u8wdxTIGg" value="3600"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOOk37EeSS5u8wdxTIGg" name="MINIMUM_SALARY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOO037EeSS5u8wdxTIGg" value="1500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOPE37EeSS5u8wdxTIGg" name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOPU37EeSS5u8wdxTIGg" value="4500"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOPk37EeSS5u8wdxTIGg" name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOP037EeSS5u8wdxTIGg" value="20"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOQE37EeSS5u8wdxTIGg" name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOQU37EeSS5u8wdxTIGg" value="120"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOQk37EeSS5u8wdxTIGg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOQ037EeSS5u8wdxTIGg"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAORE37EeSS5u8wdxTIGg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAORU37EeSS5u8wdxTIGg" value="24000"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAORk37EeSS5u8wdxTIGg" name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOR037EeSS5u8wdxTIGg" value="99"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOSE37EeSS5u8wdxTIGg" name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOSU37EeSS5u8wdxTIGg" value="26"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOSk37EeSS5u8wdxTIGg" name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOS037EeSS5u8wdxTIGg" value="30"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOTE37EeSS5u8wdxTIGg" name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOTU37EeSS5u8wdxTIGg" value="4"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOTk37EeSS5u8wdxTIGg" name="FLAT_RATE_CIM_DAILY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOT037EeSS5u8wdxTIGg" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOUE37EeSS5u8wdxTIGg" name="FLAT_RATE_CIM_MONTHLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOUU37EeSS5u8wdxTIGg" value="62"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOUk37EeSS5u8wdxTIGg" name="FLAT_RATE_CIM_YEARLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOU037EeSS5u8wdxTIGg" value="750"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOVE37EeSS5u8wdxTIGg" name="FLAT_RATE_CIP_DAILY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOVU37EeSS5u8wdxTIGg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOVk37EeSS5u8wdxTIGg" name="FLAT_RATE_CIP_MONTHLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOV037EeSS5u8wdxTIGg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOWE37EeSS5u8wdxTIGg" name="FLAT_RATE_CIP_YEARLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOWU37EeSS5u8wdxTIGg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOWk37EeSS5u8wdxTIGg" name="FLAT_RATE_CIS_DAILY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOW037EeSS5u8wdxTIGg" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOXE37EeSS5u8wdxTIGg" name="FLAT_RATE_CIS_MONTHLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOXU37EeSS5u8wdxTIGg" value="25"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOXk37EeSS5u8wdxTIGg" name="FLAT_RATE_CIS_YEARLY" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOX037EeSS5u8wdxTIGg" value="300"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOYE37EeSS5u8wdxTIGg" name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" classifier="_WnAONU37EeSS5u8wdxTIGg">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_WnAOYU37EeSS5u8wdxTIGg" value="480"/>
      </ownedLiteral>
      <ownedLiteral xmi:id="_WnAOYk37EeSS5u8wdxTIGg" name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_WnAONU37EeSS5u8wdxTIGg"/>
      <ownedLiteral xmi:id="_WnAOY037EeSS5u8wdxTIGg" name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" classifier="_WnAONU37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnAOZE37EeSS5u8wdxTIGg" name="Tax_Card_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOZU37EeSS5u8wdxTIGg" name="Tax_Card">
        <ownedRule xmi:id="_WnAOZk37EeSS5u8wdxTIGg" name="SubjectToWithholdingTax-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOZ037EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>not self.oclIsUndefined() &#xA;implies&#xA;(self.income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or &#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Pensions_and_Annuities_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Capital_and_Investments_Income) or&#xA;self.income.income_type.oclIsTypeOf(Income_Concepts::Directors_Fee)&#xA;)&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAOaE37EeSS5u8wdxTIGg" name="Tax_Credits-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOaU37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>self.tax_card_type = Tax_Card_Type::Principal &#xA;&#xA;implies&#xA;&#xA;let cim : Income_Tax_Credit_Concepts::CIM = self.income_Tax_Credit->select(c|c.oclIsTypeOf(Income_Tax_Credit_Concepts::CIM) and c.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIM),&#xA;&#x9;cis : Income_Tax_Credit_Concepts::CIS = self.income_Tax_Credit->select(cis|cis.oclIsTypeOf(Income_Tax_Credit_Concepts::CIS) and cis.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIS),&#xA;&#x9;cip : Income_Tax_Credit_Concepts::CIP = self.income_Tax_Credit->select(cip|cip.oclIsTypeOf(Income_Tax_Credit_Concepts::CIP) and cip.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Credit_Concepts::CIP) in&#xA;&#x9;&#xA;(not cis.oclIsUndefined()) xor (not cip.oclIsUndefined()) = true&#xA;and&#xA;if not cim.oclIsUndefined() then &#xA;&#x9;self.credit_CIM_daily = cim.daily and&#xA;&#x9;self.credit_CIM_monthly = cim.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cis.oclIsUndefined()then&#xA;&#x9;self.credit_CIS_daily = cis.daily and&#xA;&#x9;self.credit_CIS_monthly = cis.monthly &#xA;else&#xA;&#x9;true&#xA;endif&#xA;and&#xA;if not cip.oclIsUndefined()then&#xA;&#x9;self.credit_CIP_monthly = cip.monthly &#xA;else&#xA;&#x9;true&#xA;endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAOak37EeSS5u8wdxTIGg" name="Tax_Card_AC-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOa037EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_ac : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::AC) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ac : Income_Tax_Deduction_Concepts::AC = set_ac->any(true).oclAsType(Income_Tax_Deduction_Concepts::AC),&#xA;&#x9;set_fo : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::DS) and deduction.tax_year = self.valid_from_date) in&#xA;&#x9;&#xA;set_ac->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Additional and&#xA;self.tax_Payer.taxed_jointly and&#xA;self.deduction_AC_yearly = ac.deductible_amount and&#xA;self.deduction_AC_monthly = ac.deductible_amount/12 and&#xA;self.deduction_AC_daily = self.deduction_AC_monthly/25 /**25 working days per month**/ and&#xA;&#xA;if(set_ds->size()>0) then&#xA;&#x9;set_ds->size() =1 and&#xA;&#x9;self.deduction_DS_yearly->notEmpty() and&#xA;&#x9;self.deduction_DS_yearly = set_ds.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;&#xA;and&#xA;&#xA;if(set_fo->size()>0) then&#xA;&#x9;set_fo->size() = 1 and&#xA;&#x9;self.deduction_FO_yearly->notEmpty() and&#xA;&#x9;self.deduction_FO_yearly = set_fo.deductible_amount ->sum()&#xA;else&#xA;&#x9;true&#xA;endif&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAObE37EeSS5u8wdxTIGg" name="Tax_Card_FD-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAObU37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;let fd : Income_Tax_Deduction_Concepts::FD = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FD) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FD) in&#xA;self.deduction_FD_daily = fd.daily and&#xA;self.deduction_FD_monthly = fd.monthly and&#xA;self.deduction_FD_yearly = fd.yearly&#xA;&#xA;&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAObk37EeSS5u8wdxTIGg" name="Tax_Card_DS-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOb037EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_ds : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(d|d.oclIsTypeOf( Income_Tax_Deduction_Concepts::DS) and d.tax_year = self.valid_from_date),&#xA;&#x9;total_ds : Integer = set_ds.deductible_amount->sum()  in&#xA;set_ds->size()>0 and&#xA;self.tax_card_type = Tax_Card_Type::Principal&#xA;&#xA;implies&#xA;&#xA;if total_ds > Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer) then&#xA; &#x9;/**THE DIFFERENCE BETWEEN THE MINIMUM AND THE TOTAL DS AMOUNT IS WRITTEN ON THE TAX CARD**/&#xA; &#x9;self.deduction_DS_monthly = (total_ds - Constants::MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS.oclAsType(Integer))/self.income^^compute_duration_of_contract_within_taxation_year(self.valid_from_date)->first().result&#xA; else&#xA; &#x9;/**NO NEED TO PUT DETAILS ON THE TAX CARD**/&#xA; &#x9;false&#xA; endif</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAOcE37EeSS5u8wdxTIGg" name="Tax_Card_CE-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOcU37EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>let set_ce : Set(Income_Tax_Deduction_Concepts::Income_Tax_Deduction) = self.income_Tax_Deduction->select(deduction|deduction.oclIsTypeOf(Income_Tax_Deduction_Concepts::CE) and deduction.tax_year = self.valid_from_date),&#xA;&#x9;ce : Income_Tax_Deduction_Concepts::CE = set_ce->any(true).oclAsType(Income_Tax_Deduction_Concepts::CE) in&#xA;&#x9;&#xA;&#x9;set_ce->size() = 1 &#xA;implies&#xA;&#xA;self.tax_card_type=Tax_Card_Type::Principal and&#xA;self.deduction_CE_yearly = ce.deductible_amount and&#xA;self.deduction_CE_monthly = ce.deductible_amount/12 and&#xA;self.deduction_CE_daily = self.deduction_CE_monthly/25 /**25 working days per month**/&#xA;</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:id="_WnAOck37EeSS5u8wdxTIGg" name="Tax_Card_FO-constraint" constrainedElement="_WnAOZU37EeSS5u8wdxTIGg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAOc037EeSS5u8wdxTIGg">
            <language>OCL</language>
            <body>not self.oclIsUndefined()&#xA;implies&#xA;self.income.taxPayer.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->size() = 1&#xA;&#xA;and &#xA;&#xA;let fo : Income_Tax_Deduction_Concepts::FO = self.income_Tax_Deduction->select(d|d.oclIsTypeOf(Income_Tax_Deduction_Concepts::FO) and d.tax_year = self.valid_from_date)->any(true).oclAsType(Income_Tax_Deduction_Concepts::FO) in&#xA;self.deduction_FO_daily = fo.daily and&#xA;self.deduction_FO_monthly = fo.monthly and&#xA;self.deduction_FO_yearly = fo.yearly&#xA;</body>
          </specification>
        </ownedRule>
        <ownedAttribute xmi:id="_WnAOdE37EeSS5u8wdxTIGg" name="card_identifier" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOdU37EeSS5u8wdxTIGg" name="tax_card_type" visibility="public" type="_WnAODk37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAOdk37EeSS5u8wdxTIGg" name="tax_office" visibility="public" type="_WnAOEU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAOd037EeSS5u8wdxTIGg" name="valid_from_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOeE37EeSS5u8wdxTIGg" name="valid_until_date" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="MARTELibrary.uml#_WnBcc037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOeU37EeSS5u8wdxTIGg" name="percentage_of_witholding" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOek37EeSS5u8wdxTIGg" name="income" visibility="private" type="_WnANTE37EeSS5u8wdxTIGg" association="_WnAOIE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOe037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOfE37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOfU37EeSS5u8wdxTIGg" name="tax_Class" visibility="private" type="_WnANGk37EeSS5u8wdxTIGg" association="_WnAOJk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOfk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOf037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOgE37EeSS5u8wdxTIGg" name="tax_payers_SSno" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOgU37EeSS5u8wdxTIGg" name="tax_payers_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOgk37EeSS5u8wdxTIGg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOg037EeSS5u8wdxTIGg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOhE37EeSS5u8wdxTIGg" name="tax_payers_partner_name_surname" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOhU37EeSS5u8wdxTIGg" value="2"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOhk37EeSS5u8wdxTIGg" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOh037EeSS5u8wdxTIGg" name="tax_payers_address" visibility="public" type="_WnAMP037EeSS5u8wdxTIGg" isDerived="true"/>
        <ownedAttribute xmi:id="_WnAOiE37EeSS5u8wdxTIGg" name="jobs_Employer_SSNo" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOiU37EeSS5u8wdxTIGg" name="jobs_employers_name" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOik37EeSS5u8wdxTIGg" name="jobs_activity_type" visibility="public" type="_WnAOCk37EeSS5u8wdxTIGg" isDerived="true"/>
        <ownedAttribute xmi:id="_WnAOi037EeSS5u8wdxTIGg" name="jobs_place_of_work" visibility="public" type="_WnAOGk37EeSS5u8wdxTIGg" isDerived="true"/>
        <ownedAttribute xmi:id="_WnAOjE37EeSS5u8wdxTIGg" name="deduction_FD_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOjU37EeSS5u8wdxTIGg" name="deduction_FD_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOjk37EeSS5u8wdxTIGg" name="deduction_FD_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOj037EeSS5u8wdxTIGg" name="deduction_AC_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOkE37EeSS5u8wdxTIGg" name="deduction_AC_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOkU37EeSS5u8wdxTIGg" name="deduction_AC_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOkk37EeSS5u8wdxTIGg" name="deduction_CE_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOk037EeSS5u8wdxTIGg" name="deduction_CE_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOlE37EeSS5u8wdxTIGg" name="deduction_CE_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOlU37EeSS5u8wdxTIGg" name="deduction_DS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOlk37EeSS5u8wdxTIGg" name="deduction_DS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOl037EeSS5u8wdxTIGg" name="deduction_DS_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOmE37EeSS5u8wdxTIGg" name="deduction_FO_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOmU37EeSS5u8wdxTIGg" name="deduction_FO_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOmk37EeSS5u8wdxTIGg" name="deduction_FO_yearly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOm037EeSS5u8wdxTIGg" name="credit_CIS_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOnE37EeSS5u8wdxTIGg" name="credit_CIS_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOnU37EeSS5u8wdxTIGg" name="credit_CIP_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOnk37EeSS5u8wdxTIGg" name="credit_CIM_daily" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOn037EeSS5u8wdxTIGg" name="credit_CIM_monthly" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOoE37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAND037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOoU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOok37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOo037EeSS5u8wdxTIGg" name="income_Tax_Credit" visibility="private" type="_WnAOuU37EeSS5u8wdxTIGg" aggregation="shared" association="_WnAOsE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOpE37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOpU37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOpk37EeSS5u8wdxTIGg" name="income_Tax_Deduction" visibility="private" type="_WnAPL037EeSS5u8wdxTIGg" aggregation="shared" association="_WnAPLk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOp037EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOqE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOqU37EeSS5u8wdxTIGg" name="validity" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOqk37EeSS5u8wdxTIGg" name="previous" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAOsU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOq037EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOrE37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOrU37EeSS5u8wdxTIGg" name="current_tax_card" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAOsU37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOrk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOr037EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAOsE37EeSS5u8wdxTIGg" name="include" memberEnd="_WnAOxU37EeSS5u8wdxTIGg _WnAOo037EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAOsU37EeSS5u8wdxTIGg" name="invalidated by" memberEnd="_WnAOqk37EeSS5u8wdxTIGg _WnAOrU37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnAOsk37EeSS5u8wdxTIGg" name="Income_Tax_Credit_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOs037EeSS5u8wdxTIGg" name="CIM">
        <generalization xmi:id="_WnAOtE37EeSS5u8wdxTIGg" general="_WnAOuU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOtU37EeSS5u8wdxTIGg" name="CIP">
        <generalization xmi:id="_WnAOtk37EeSS5u8wdxTIGg" general="_WnAOuU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOt037EeSS5u8wdxTIGg" name="CIS">
        <generalization xmi:id="_WnAOuE37EeSS5u8wdxTIGg" general="_WnAOuU37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOuU37EeSS5u8wdxTIGg" name="Income_Tax_Credit">
        <ownedAttribute xmi:id="_WnAOuk37EeSS5u8wdxTIGg" name="grantedBy" visibility="public" type="_WnAN9E37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAOu037EeSS5u8wdxTIGg" name="taxPayer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAOA037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOvE37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOvU37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOvk37EeSS5u8wdxTIGg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOv037EeSS5u8wdxTIGg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOwE37EeSS5u8wdxTIGg" value="300">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOwU37EeSS5u8wdxTIGg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOwk37EeSS5u8wdxTIGg" value="25">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOw037EeSS5u8wdxTIGg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOxE37EeSS5u8wdxTIGg" value="1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOxU37EeSS5u8wdxTIGg" name="taxation_Frame" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAOsE37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAOxk37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAOx037EeSS5u8wdxTIGg"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WnAOyE37EeSS5u8wdxTIGg" name="Income_Tax_Deduction_Concepts">
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAOyU37EeSS5u8wdxTIGg" name="FD">
        <generalization xmi:id="_WnAOyk37EeSS5u8wdxTIGg" general="_WnAPKU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAOy037EeSS5u8wdxTIGg" name="distance_declared_in_january" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAOzE37EeSS5u8wdxTIGg" name="calculated_distance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnAOzU37EeSS5u8wdxTIGg" name="compute_distance_unit_between_home_and_workpalce" isQuery="true">
          <eAnnotations xmi:id="_WnAOzk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnAOz037EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAO0E37EeSS5u8wdxTIGg" name="FO">
        <generalization xmi:id="_WnAO0U37EeSS5u8wdxTIGg" general="_WnAPKU37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAO0k37EeSS5u8wdxTIGg" name="rate_type_for_FO" visibility="public" type="_WnAOKU37EeSS5u8wdxTIGg" isDerived="true"/>
        <ownedOperation xmi:id="_WnAO0037EeSS5u8wdxTIGg" name="compute_disability_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_WnAO1E37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedParameter xmi:id="_WnAO1U37EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAO1k37EeSS5u8wdxTIGg" name="compute_regular_flat_rate" isQuery="true">
          <eAnnotations xmi:id="_WnAO1037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WnAO2E37EeSS5u8wdxTIGg" key="lookup"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WnAO2U37EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAO2k37EeSS5u8wdxTIGg" name="CE">
        <eAnnotations xmi:id="_WnAO2037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
        <generalization xmi:id="_WnAO3E37EeSS5u8wdxTIGg" general="_WnAPL037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAO3U37EeSS5u8wdxTIGg" name="ce_deduction_type" visibility="public" type="_WnAOLE37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAO3k37EeSS5u8wdxTIGg" name="dependent_relative_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAO3037EeSS5u8wdxTIGg" name="disability_flat_rate" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnAO4E37EeSS5u8wdxTIGg" name="compute_disability_flat_rate_for_CE" isQuery="true" postcondition="_WnAO4k37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAO4U37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAO4k37EeSS5u8wdxTIGg" name="compute_disability_flat_rate" constrainedElement="_WnAO4E37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAO4037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::INALIDITY_AND_INFIRMITY then&#xA;&#x9;self.disability_flat_rate = IN_disability_flat_rate&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAO5E37EeSS5u8wdxTIGg" name="IN_disability_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAO5U37EeSS5u8wdxTIGg" name="compute_dependent_relative_flat_rate_for_CE" isQuery="true" postcondition="_WnAO5037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAO5k37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAO5037EeSS5u8wdxTIGg" name="dependent_relative_flat_rate" constrainedElement="_WnAO5U37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAO6E37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>if self.ce_deduction_type = CE_Type::DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD then&#xA;&#x9;self.dependent_relative_flat_rate = IN_dependent_relative_flat_rate&#xA;else&#x9;&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAO6U37EeSS5u8wdxTIGg" name="IN_dependent_relative_flat_rate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAO6k37EeSS5u8wdxTIGg" name="AC">
        <generalization xmi:id="_WnAO6037EeSS5u8wdxTIGg" general="_WnAPL037EeSS5u8wdxTIGg"/>
        <ownedOperation xmi:id="_WnAO7E37EeSS5u8wdxTIGg" name="is_eligible_income_for_AC" isQuery="true" postcondition="_WnAO7k37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAO7U37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAO7k37EeSS5u8wdxTIGg" name="is_eligible_income_for_AC" constrainedElement="_WnAO7E37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAO7037EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>if IN_income.income_type.oclIsTypeOf(Income_Concepts::Employment_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Agriculture_and_Forestry_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA; </body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAO8E37EeSS5u8wdxTIGg" name="IN_income" type="_WnANTE37EeSS5u8wdxTIGg"/>
          <ownedParameter xmi:id="_WnAO8U37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAO8k37EeSS5u8wdxTIGg" name="is_eligible_income_for_AC_assisting_spouse" isQuery="true" postcondition="_WnAO9E37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAO8037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAO9E37EeSS5u8wdxTIGg" name="is_eligible_income_for_AC_assisting_spouse" constrainedElement="_WnAO8k37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAO9U37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>if  IN_income.income_type.oclIsTypeOf(Income_Concepts::Independent_Professional_Services_Income) or&#xA;&#x9;IN_income.income_type.oclIsTypeOf(Income_Concepts::Trade_and_Business_Income) then&#xA;&#x9;result = true&#xA;else&#xA;&#x9;result=false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAO9k37EeSS5u8wdxTIGg" name="IN_income" type="_WnANTE37EeSS5u8wdxTIGg"/>
          <ownedParameter xmi:id="_WnAO9037EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAO-E37EeSS5u8wdxTIGg" name="DS_for_Permanent_Expense">
        <generalization xmi:id="_WnAO-U37EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAO-k37EeSS5u8wdxTIGg" name="permanent_expense_category" visibility="public" type="_WnAN1U37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAO-037EeSS5u8wdxTIGg" name="DS_for_Interest_Expense">
        <generalization xmi:id="_WnAO_E37EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
        <ownedOperation xmi:id="_WnAO_U37EeSS5u8wdxTIGg" name="compute_maximum_deductible_amount" isQuery="true" postcondition="_WnAO_037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAO_k37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAO_037EeSS5u8wdxTIGg" name="maximum_deductible_amount" constrainedElement="_WnAO_U37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAPAE37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>result = 1 and&#xA;self.maximum_deductible_amount = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAPAU37EeSS5u8wdxTIGg" name="result" isOrdered="true" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAPAk37EeSS5u8wdxTIGg" name="IN_children_with_allowances" type="_WnAMSE37EeSS5u8wdxTIGg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAPA037EeSS5u8wdxTIGg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAPBE37EeSS5u8wdxTIGg"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAPBU37EeSS5u8wdxTIGg" name="IN_legal_union" type="_WnAMe037EeSS5u8wdxTIGg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAPBk37EeSS5u8wdxTIGg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAPB037EeSS5u8wdxTIGg"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPCE37EeSS5u8wdxTIGg" name="DS_for_Health_and_Pension_Insurance">
        <generalization xmi:id="_WnAPCU37EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAPCk37EeSS5u8wdxTIGg" name="insurance_category" visibility="public" type="_WnAN3k37EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPC037EeSS5u8wdxTIGg" name="DS_for_Private_Insurance_and_Plan">
        <generalization xmi:id="_WnAPDE37EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAPDU37EeSS5u8wdxTIGg" name="private_insurance_and_plan_category" visibility="public" type="_WnAN2E37EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAPDk37EeSS5u8wdxTIGg" name="increase_for_life_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPD037EeSS5u8wdxTIGg" name="maximum_deductible_amount_for_private_insurance" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPEE37EeSS5u8wdxTIGg" name="maximum_deductible_amount_for_old_age_pension_plan" visibility="public" isDerived="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_WnAPEU37EeSS5u8wdxTIGg" name="compute_increase_for_life_insurance" isQuery="true" postcondition="_WnAPE037EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAPEk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAPE037EeSS5u8wdxTIGg" name="get_increase_for_life_insurance" constrainedElement="_WnAPEU37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAPFE37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>result = 1&#xA;and self.increase_for_life_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAPFU37EeSS5u8wdxTIGg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAPFk37EeSS5u8wdxTIGg" name="compute_maximum_deductible_amount_for_private_insruance" isQuery="true" postcondition="_WnAPGE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAPF037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAPGE37EeSS5u8wdxTIGg" name="get_maximum_deductible_amount_for_private_insurance" constrainedElement="_WnAPFk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAPGU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>self.maximum_deductible_amount_for_private_insurance = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
        <ownedOperation xmi:id="_WnAPGk37EeSS5u8wdxTIGg" name="compute_maximum_deductible_amount_for_old_age_pension_plan" isQuery="true" postcondition="_WnAPHE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAPG037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAPHE37EeSS5u8wdxTIGg" name="maximum_deductible_amount_for_old_age_pension_plan" constrainedElement="_WnAPGk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAPHU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>maximum_deductible_amount_for_old_age_pension_plan = 1&#xA;</body>
            </specification>
          </ownedRule>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPHk37EeSS5u8wdxTIGg" name="DS_for_Loss_Carryforward">
        <generalization xmi:id="_WnAPH037EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPIE37EeSS5u8wdxTIGg" name="DS_for_Donation">
        <generalization xmi:id="_WnAPIU37EeSS5u8wdxTIGg" general="_WnAPK037EeSS5u8wdxTIGg"/>
        <ownedOperation xmi:id="_WnAPIk37EeSS5u8wdxTIGg" name="compute_maximum_deductible_amount_for_donation" isQuery="true" postcondition="_WnAPJE37EeSS5u8wdxTIGg">
          <eAnnotations xmi:id="_WnAPI037EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML"/>
          <ownedRule xmi:id="_WnAPJE37EeSS5u8wdxTIGg" name="maximum_deductible_amount" constrainedElement="_WnAPIk37EeSS5u8wdxTIGg">
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnAPJU37EeSS5u8wdxTIGg">
              <language>OCL</language>
              <body>if IN_maximum_percentage = Constants::MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS then&#xA;&#x9;self.maximum_deductible_amount = IN_maximum_percentage.oclAsType(Integer)/100 * IN_total_tax_payer_income&#xA;else&#xA;&#x9;false&#xA;endif&#xA;</body>
            </specification>
          </ownedRule>
          <ownedParameter xmi:id="_WnAPJk37EeSS5u8wdxTIGg" name="IN_maximum_percentage" type="_WnAONU37EeSS5u8wdxTIGg"/>
          <ownedParameter xmi:id="_WnAPJ037EeSS5u8wdxTIGg" name="IN_total_tax_payer_income">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WnAPKE37EeSS5u8wdxTIGg" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPKU37EeSS5u8wdxTIGg" name="Professional_Expenses_Deduction">
        <generalization xmi:id="_WnAPKk37EeSS5u8wdxTIGg" general="_WnAPL037EeSS5u8wdxTIGg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPK037EeSS5u8wdxTIGg" name="DS">
        <generalization xmi:id="_WnAPLE37EeSS5u8wdxTIGg" general="_WnAPL037EeSS5u8wdxTIGg"/>
        <ownedAttribute xmi:id="_WnAPLU37EeSS5u8wdxTIGg" name="maximum_deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAPLk37EeSS5u8wdxTIGg" name="considers" memberEnd="_WnAPOE37EeSS5u8wdxTIGg _WnAOpk37EeSS5u8wdxTIGg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_WnAPL037EeSS5u8wdxTIGg" name="Income_Tax_Deduction">
        <ownedAttribute xmi:id="_WnAPME37EeSS5u8wdxTIGg" name="tax_year" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPMU37EeSS5u8wdxTIGg" name="daily" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPMk37EeSS5u8wdxTIGg" name="monthly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPM037EeSS5u8wdxTIGg" name="yearly" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPNE37EeSS5u8wdxTIGg" name="tax_Payer" visibility="private" type="_WnAMtE37EeSS5u8wdxTIGg" association="_WnAOJ037EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAPNU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAPNk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPN037EeSS5u8wdxTIGg" name="deductible_amount" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPOE37EeSS5u8wdxTIGg" name="tax_card" visibility="private" type="_WnAOZU37EeSS5u8wdxTIGg" association="_WnAPLk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAPOU37EeSS5u8wdxTIGg" value="1"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAPOk37EeSS5u8wdxTIGg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_WnAPO037EeSS5u8wdxTIGg" name="expenses" visibility="private" type="_WnAN4037EeSS5u8wdxTIGg" association="_WnAPPk37EeSS5u8wdxTIGg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WnAPPE37EeSS5u8wdxTIGg" value="*"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WnAPPU37EeSS5u8wdxTIGg" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WnAPPk37EeSS5u8wdxTIGg" name="is computed based on" memberEnd="_WnAPO037EeSS5u8wdxTIGg _WnAN8U37EeSS5u8wdxTIGg"/>
    </packagedElement>
    <profileApplication xmi:id="_WnAPP037EeSS5u8wdxTIGg">
      <eAnnotations xmi:id="_WnAPQE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_WnAPQU37EeSS5u8wdxTIGg">
      <eAnnotations xmi:id="_WnAPQk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Default.profile.uml#_Wm7U3E37EeSS5u8wdxTIGg"/>
      </eAnnotations>
      <appliedProfile href="Default.profile.uml#_Wm7U2k37EeSS5u8wdxTIGg"/>
    </profileApplication>
    <profileApplication xmi:id="_WnAPQ037EeSS5u8wdxTIGg">
      <eAnnotations xmi:id="_WnAPRE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="Deployment.profile.uml#_WnFEa037EeSS5u8wdxTIGg"/>
      </eAnnotations>
      <appliedProfile href="Deployment.profile.uml#_WnFEaU37EeSS5u8wdxTIGg"/>
    </profileApplication>
    <profileApplication xmi:id="_WnAPRU37EeSS5u8wdxTIGg">
      <eAnnotations xmi:id="_WnAPRk37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_VSL.profile.uml#_Wm9KYE37EeSS5u8wdxTIGg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_VSL.profile.uml#_Wm9KXk37EeSS5u8wdxTIGg"/>
    </profileApplication>
    <profileApplication xmi:id="_WnAPR037EeSS5u8wdxTIGg">
      <eAnnotations xmi:id="_WnAPSE37EeSS5u8wdxTIGg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="MARTE_Time.profile.uml#_WnCrm037EeSS5u8wdxTIGg"/>
      </eAnnotations>
      <appliedProfile href="MARTE_Time.profile.uml#_WnCrmU37EeSS5u8wdxTIGg"/>
    </profileApplication>
  </uml:Package>
  <Default:Documentation xmi:id="_WnAPSU37EeSS5u8wdxTIGg" base_Comment="_WnANL037EeSS5u8wdxTIGg"/>
  <Default:Documentation xmi:id="_WnAPSk37EeSS5u8wdxTIGg" base_Comment="_WnAMfE37EeSS5u8wdxTIGg"/>
</xmi:XMI>
