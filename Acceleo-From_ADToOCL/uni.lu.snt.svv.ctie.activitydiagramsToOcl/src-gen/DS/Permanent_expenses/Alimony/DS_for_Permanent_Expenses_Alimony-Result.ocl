context TaxPayer inv DS_for_Permanent_Expenses_Alimony:
let taxation_year:Date = self.taxation_year 
/** TRACEABILITY: Agent type: officer - Question: Which year needs to be checked? - **/ in									
let incomes:Set(Income) = self.incomes->select(income: Income | income.year = taxation_year) in														
incomes -> forAll (income:Income|
let permanent_expenses_alimony_with_agreement:Set(Expense) = income.expenses-> select(e:Expense | e.oclIsTypeOf(Permanent_Expenses) and e.category = Category_of_Permanent_Expense::ALIMONY and e.year_expense_was_incurred_in = taxation_year and e.agteement_for_alimony =true) in
let tax_payer_is_divorced:Boolean = self.is_separated_from(permanent_expenses_alimony_with_agreement) in
if (tax_payer_is_divorced ) = false then
let expected_deduction:MonetaryValue = 0 in
let actual_deduction:MonetaryValue = income.getDeductionForDSPermanentAlimonyExpenses(taxation_year).deduced_amount in
actual_deduction = expected_deduction
else
   if (tax_payer_is_divorced ) = true then
     let is_there_any_agreement_for_alimony:Boolean = permanent_expenses_alimony_with_agreement->size()>0 in
     if (is_there_any_agreement_for_alimony) = false then
     let expected_deduction:MonetaryValue = 0 in
     let actual_deduction:MonetaryValue = income.getDeductionForDSPermanentAlimonyExpenses(taxation_year).deduced_amount in
     actual_deduction = expected_deduction
     else
        if (is_there_any_agreement_for_alimony) = true then
             let maximum_flat_rate_for_alimony:MonetaryValue = Constant::MAXIMUM_FLAT_RATE_FOR_ALIMONY.oclAsType(MonetaryValue) 
             /** TRACEABILITY: Source: Art. 109bis Income Tax Law (2013) - - **/ in 								
             let alimony_paid:MonetaryValue = permanent_expenses_alimony_with_agreement.declared_amount->sum() in
             if (alimony_paid < maximum_flat_rate_for_alimony) = true then
             let tax_liability:Numeric = income.tax_liability in
             let expected_deduction:MonetaryValue = tax_liability * alimony_paid in
             let actual_deduction:MonetaryValue = income.getDeductionForDSPermanentAlimonyExpenses(taxation_year).deduced_amount in
             actual_deduction = expected_deduction
             else
               if (alimony_paid < maximum_flat_rate_for_alimony) = false then
               let tax_liability:Numeric = income.tax_liability in
               let expected_deduction:MonetaryValue = tax_liability * maximum_flat_rate_for_alimony in
               let actual_deduction:MonetaryValue = income.getDeductionForDSPermanentAlimonyExpenses(taxation_year).deduced_amount in
               actual_deduction = expected_deduction
               else
               false
               endif
             endif
        else
        false
        endif
     endif
   else
   false
   endif
endif
)
